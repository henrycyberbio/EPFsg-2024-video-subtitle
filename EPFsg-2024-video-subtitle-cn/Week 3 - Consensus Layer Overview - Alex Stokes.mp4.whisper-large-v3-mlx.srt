1
00:00:00,000 --> 00:00:02,859
谈论共识层。

2
00:00:04,020 --> 00:00:06,700
我会给马里奥一个机会

3
00:00:06,700 --> 00:00:08,400
给亚历克斯快速面试

4
00:00:08,400 --> 00:00:09,519
然后我们会直接加入。

5
00:00:09,700 --> 00:00:11,500
或抱歉，介绍，而不是面试。

6
00:00:12,980 --> 00:00:14,320
是的，非常感谢，乔什。

7
00:00:14,359 --> 00:00:15,939
谢谢亚历克斯在这里。

8
00:00:16,640 --> 00:00:19,179
是的，所以上周我们有哑光的灯光

9
00:00:19,179 --> 00:00:21,660
解释以太坊的执行层。

10
00:00:22,019 --> 00:00:25,120
本周我们有以太坊的另一半

11
00:00:25,120 --> 00:00:26,760
在这里被亚历克斯覆盖，

12
00:00:26,760 --> 00:00:30,380
我们正在完成以太坊的工作方式的全部全局。

13
00:00:30,880 --> 00:00:33,420
是的，我们很高兴能在这里，亚历克斯。

14
00:00:33,840 --> 00:00:36,560
因此，亚历克斯是以太坊基金会的一部分。

15
00:00:37,000 --> 00:00:40,939
他是当今正在研究的许多重要主题的专家，

16
00:00:40,939 --> 00:00:48,859
像MEV一样，所有关于PBS的建议，燃烧Mev，

17
00:00:49,240 --> 00:00:55,939
您可能已经听说过，在某种程度上由Alex进行。

18
00:00:55,939 --> 00:00:58,899
他从事一堆Rust软件。

19
00:00:59,059 --> 00:01:01,759
研究小组中有很多生锈的人。

20
00:01:01,939 --> 00:01:07,359
因此，您可能有兴趣听到Alex为许多Rust项目做出了贡献。

21
00:01:07,359 --> 00:01:11,759
最重要的是，他是以太坊共识层的专家。

22
00:01:12,079 --> 00:01:15,280
因此，我希望今天能从您那里学到很多东西。

23
00:01:15,359 --> 00:01:17,539
亚历克斯，非常感谢您再次来到这里。

24
00:01:17,939 --> 00:01:18,079
是的。

25
00:01:18,759 --> 00:01:20,640
我认为我们可以直接加入。

26
00:01:21,299 --> 00:01:22,920
舞台是你的。

27
00:01:24,379 --> 00:01:24,819
惊人的。

28
00:01:24,819 --> 00:01:29,959
在开始之前，只想提醒大家，如果您有对话或

29
00:01:29,959 --> 00:01:36,079
评论，问题，请将它们发布到Discord线程中，第三周不一致线程。

30
00:01:36,579 --> 00:01:37,280
继续，亚历克斯。

31
00:01:37,319 --> 00:01:37,599
谢谢。

32
00:01:39,939 --> 00:01:40,419
伟大的。

33
00:01:40,719 --> 00:01:41,819
谢谢你有我。

34
00:01:42,039 --> 00:01:42,759
你能听到我的声音吗？

35
00:01:46,719 --> 00:01:47,199
你好？

36
00:01:49,719 --> 00:01:50,459
是的，一切都很好。

37
00:01:50,780 --> 00:01:51,179
听得很好。

38
00:01:51,439 --> 00:01:51,699
好的。

39
00:01:51,739 --> 00:01:51,979
谢谢。

40
00:01:51,980 --> 00:01:56,020
有时候我有AV问题。

41
00:01:58,159 --> 00:01:59,800
伟大的。好的。

42
00:01:59,800 --> 00:02:00,700
是的。我是亚历克斯·斯托克斯（Alex Stokes）。

43
00:02:00,700 --> 00:02:03,659
我是以太坊基金会的研究员。

44
00:02:03,659 --> 00:02:06,760
今天，我们将研究以太坊的共识层。

45
00:02:06,760 --> 00:02:11,120
是的，我想，让我们看看。

46
00:02:11,120 --> 00:02:12,699
所以我很确定我可以看到。

47
00:02:12,699 --> 00:02:13,680
哦，让我这样做。

48
00:02:15,860 --> 00:02:16,699
什么？

49
00:02:17,800 --> 00:02:18,939
好的。

50
00:02:18,939 --> 00:02:21,340
好吧，我想我至少可以在聊天中看到问题。

51
00:02:21,340 --> 00:02:23,939
因此，如果您有它们，请在这里停下来

52
00:02:23,939 --> 00:02:25,939
我们会尽力与他们联系。

53
00:02:28,259 --> 00:02:30,699
我会尝试做的是浏览一些幻灯片

54
00:02:30,699 --> 00:02:32,379
只是要框架，你知道，

55
00:02:32,379 --> 00:02:34,060
共识是什么意思？

56
00:02:34,060 --> 00:02:35,280
就像，我们为什么关心它？

57
00:02:35,280 --> 00:02:37,520
这些像区块链上下文。

58
00:02:37,520 --> 00:02:40,060
然后我应该能够喜欢采取某种

59
00:02:40,060 --> 00:02:43,960
您知道的现场笔记要绘制一些图表

60
00:02:43,960 --> 00:02:45,379
并给你一些更好的直觉

61
00:02:45,379 --> 00:02:48,460
对于我在说的不同的事情。

62
00:02:48,460 --> 00:02:51,039
是的，我们会跳进去。

63
00:02:51,340 --> 00:02:58,740
让我们在这里看看。我相信您可以看到这个。因此，我想有人说如果你做不到。

64
00:03:00,439 --> 00:03:07,659
但是，是的，定理共识。因此，让我们潜入。是的，我的意思是，我有点想从一开始就开始。

65
00:03:07,840 --> 00:03:11,000
就像，您知道，为什么我们首先要关心这些区块链？

66
00:03:12,060 --> 00:03:18,699
我认为最终，就像他们所做的真正基本的事情一样，他们制造了数字稀缺。

67
00:03:18,699 --> 00:03:25,280
对，就像您在现实世界中有这个概念，您知道是否有

68
00:03:25,280 --> 00:03:29,439
稍后我有这个例子，但假设我正确地去了杂货店，他们只有喜欢

69
00:03:29,439 --> 00:03:35,060
您知道10个苹果，例如，如果他们喜欢送5个苹果，他们就无法神奇地做更多的苹果

70
00:03:35,060 --> 00:03:40,539
他们仍然只有五个，事实证明，就像在

71
00:03:40,539 --> 00:03:46,199
物理世界嗯，我们可以做很多事情，喜欢创造很多价值，例如底部

72
00:03:46,199 --> 00:03:55,239
因此，问题是我们如何在这个数字领域中这样做，而这种数字领域却占据了我们的一生，而随着我们的发展，我们才变得越来越重要？

73
00:03:57,259 --> 00:03:57,560
是的。

74
00:03:57,780 --> 00:04:01,259
因此，开始的地方是我们弄清楚了如何制造数字商品。

75
00:04:01,759 --> 00:04:07,000
因此，您可能会看到的所有这些猫照片，数字教科书。

76
00:04:07,639 --> 00:04:09,099
是的，当今我们的世界越来越多。

77
00:04:10,139 --> 00:04:13,179
问题是您基本上可以复制所有这些东西。

78
00:04:13,180 --> 00:04:16,819
就像我再次给你这些CAD jpegs之一一样，

79
00:04:16,819 --> 00:04:19,259
您可以根据需要复制它。

80
00:04:19,259 --> 00:04:21,160
没有办法喜欢代表稀缺

81
00:04:21,160 --> 00:04:22,259
在这个数字世界中。

82
00:04:23,560 --> 00:04:25,920
是的，有一个巨大的历史

83
00:04:25,920 --> 00:04:27,160
这是一个问题。

84
00:04:27,160 --> 00:04:31,199
所以就像我有电影要保护的电影

85
00:04:31,199 --> 00:04:33,000
就知识产权而言

86
00:04:34,079 --> 00:04:35,960
电影上映并有点互联网，

87
00:04:35,960 --> 00:04:37,439
它很容易被复制。

88
00:04:37,439 --> 00:04:39,360
与Bittorrent共享文件，以及所有这些。

89
00:04:39,360 --> 00:04:41,500
是的，这有点混乱。

90
00:04:43,180 --> 00:04:49,180
而且，您知道，人们关心这些区块链的原因是因为它们产生了这种数字稀缺性。

91
00:04:49,180 --> 00:04:51,180
我会解释原因。

92
00:04:51,180 --> 00:05:03,180
因此，这很重要的原因是，同样，您可以使用此属性来代表物理领域中的所有这些东西，就像我们围绕它们的直觉在此数字空间中稀缺。

93
00:05:03,180 --> 00:05:07,180
您可以将其用于各种各样的东西，例如金钱，例如令牌。

94
00:05:07,180 --> 00:05:11,180
如果您处于区块链上下文中，则这些是非常熟悉的示例。

95
00:05:11,980 --> 00:05:16,540
但是更普遍地像您知道财产权，所以您知道有一天您可能会成为

96
00:05:16,540 --> 00:05:22,220
能够像契据一样将契约放在区块链上的房屋上，你知道令人兴奋的事情

97
00:05:22,220 --> 00:05:25,980
除此之外，我认为还有很多东西可以从中出现

98
00:05:25,980 --> 00:05:30,379
仍在弄清楚什么可能，所以如果有的话，我认为这是一个非常令人兴奋的空间

99
00:05:30,939 --> 00:05:36,780
是的，这是一种有趣的冒险

100
00:05:36,779 --> 00:05:42,059
是，如果没有这种区块链技术，您将无法做到这一点

101
00:05:42,059 --> 00:05:47,419
这些再次像独特的数字对象一样，因为您可以在此之前真的像任何东西一样复制

102
00:05:47,419 --> 00:05:51,419
因此，这就像没有区块链不可能的那样，这就是为什么人们关心他们的原因

103
00:05:55,019 --> 00:06:01,899
让我们看看好吧，似乎在工作嗯，是的，好吧

104
00:06:01,899 --> 00:06:06,919
我们有这些区块链，它们像数字短缺的财产一样，给我们这一区块

105
00:06:06,919 --> 00:06:14,379
就像现在让我们尝试考虑一下我们如何做到这一点，以便您知道让我们放大

106
00:06:14,379 --> 00:06:19,079
再次进入一个用例

107
00:06:19,079 --> 00:06:23,359
我们想考虑的稀缺对象，但假设我们想谈论正确的数字资金

108
00:06:23,359 --> 00:06:28,799
因此，我们有钱，就像有金钱单位是硬币正确的，所以想象一下

109
00:06:28,800 --> 00:06:31,980
就像我可以拥有硬币一样。我喜欢花硬币。

110
00:06:32,939 --> 00:06:37,960
您知道，它确实应该遵循您对拥有金钱的直觉，并且知道了物理空间。

111
00:06:38,840 --> 00:06:43,720
当我们在这里说稀缺时，我们的意思是他们只有一次是在硬币中。正确的。

112
00:06:43,759 --> 00:06:50,100
因此，就像我有100个硬币一样，我不喜欢花200枚。例如，任何时间点都有固定的数字。

113
00:06:51,100 --> 00:06:58,300
因此，您知道，我不确定每个人的背景是什么，但无论哪种方式。

114
00:06:58,300 --> 00:07:02,680
让我们假设以下事情很有意义。再说一次，如果您有疑问，

115
00:07:02,680 --> 00:07:11,520
只需将它们放在聊天中。没错。好的。所以，你知道，我们将有这样的

116
00:07:11,520 --> 00:07:16,480
稻草人例子，对吧？因此，您可能会熟悉像在类似的Web服务器一样熟悉，

117
00:07:16,620 --> 00:07:21,800
您知道，我们称之为Web两个。因此，这是类似Facebook meta或类似的东西，您知道，

118
00:07:21,860 --> 00:07:26,540
Instagram，所有这些不同的社交媒体平台，Twitter，我想我们现在称为X。

119
00:07:26,540 --> 00:07:30,520
无论哪种方式，您都可以想象您有一些钱协议。

120
00:07:30,520 --> 00:07:33,240
您可以编写软件来实施此协议的规则。

121
00:07:33,240 --> 00:07:35,900
它只是在某人的Web服务器上运行。

122
00:07:35,900 --> 00:07:39,760
这里的最大是，无论谁在操作这台服务器，您都相信它们可以制作

123
00:07:39,760 --> 00:07:42,320
确保没有双旋转。

124
00:07:42,320 --> 00:07:47,460
这再次是我们想要从区块链中获得的核心属性。

125
00:07:47,460 --> 00:07:48,720
我在这里有这些例子。

126
00:07:48,720 --> 00:07:56,240
您再次知道，它应该真正反映出您的直觉与物理世界。

127
00:07:56,240 --> 00:08:00,000
因此，如果我在杂货店里，可以说杂货店有100个苹果。

128
00:08:00,340 --> 00:08:03,819
如果他们卖给我一个苹果，那么他们只剩下99。

129
00:08:03,900 --> 00:08:06,920
他们不能像200个苹果那样做300个苹果。

130
00:08:07,199 --> 00:08:10,540
他们不能。我的意思是，是的，他们不能只神奇地做苹果。

131
00:08:11,160 --> 00:08:15,420
他们有一定的数字。如果他们放弃一些，就是这样。

132
00:08:16,660 --> 00:08:24,300
现在，在我们的货币协议中，您可以想象这是一件类似的事情，您知道，如果我的协议中只有100个硬币，并且我给您发送了5枚硬币，那么我只剩95个。

133
00:08:24,300 --> 00:08:31,740
当我们说双重支出时，我们的意思是我的100中，如果我给您发送了五个，我

134
00:08:31,740 --> 00:08:32,899
绝对应该有95。

135
00:08:32,899 --> 00:08:34,639
我不能寄给你五个。

136
00:08:34,639 --> 00:08:38,940
就像我不能发送两个以上的人，每个硬币50个硬币一样。

137
00:08:38,940 --> 00:08:42,200
因为我不会有那么多积分。

138
00:08:42,200 --> 00:08:45,620
这里的重要词是您信任操作员。

139
00:08:45,620 --> 00:08:51,659
从历史上看，我们从来没有能够信任运营商来维护这种协议。

140
00:08:51,659 --> 00:08:56,120
协议。特别是，这就像双旋转属性。所以有多种方法

141
00:08:56,120 --> 00:09:01,399
可能发生。其中之一只是正在实施我们的货币协议的软件中的一个错误。

142
00:09:02,519 --> 00:09:08,659
这可能是服务器偶然地制造出额外的硬币。假设

143
00:09:08,659 --> 00:09:14,539
他们承诺只有一千个硬币，有一些错误，突然有一千个

144
00:09:14,539 --> 00:09:22,459
和一枚硬币。对于我们使用此协议而言，这并不公平。我们只想在那里

145
00:09:23,659 --> 00:09:28,620
他们声称的数字。如果某种程度上有更多的话，这再次是一个错误。

146
00:09:30,459 --> 00:09:35,419
有一个单一操作员，一个正在协调所有这些的中央服务器

147
00:09:37,019 --> 00:09:41,259
也是安全方面的问题。因为可能会有积极的攻击。所以

148
00:09:41,259 --> 00:09:43,179
所以也许有一个错误。

149
00:09:43,419 --> 00:09:47,399
也许操作员本身无法利用错误。

150
00:09:48,120 --> 00:09:49,860
例如，因为他们不想。

151
00:09:49,860 --> 00:09:52,500
他们希望人们相信他们的货币协议很好。

152
00:09:53,379 --> 00:09:57,620
但是攻击者可以妥协服务器，然后以自己的方式触发错误

153
00:09:57,620 --> 00:09:59,879
并自己制作这些额外的硬币。

154
00:10:00,679 --> 00:10:03,500
而且，如果我们都相信这些硬币出于某种原因很有用，

155
00:10:03,620 --> 00:10:05,480
这对攻击者直接盈利。

156
00:10:05,639 --> 00:10:06,799
因此，他们激励他们这样做。

157
00:10:06,799 --> 00:10:11,939
您甚至可以有另一个场景，而操作员本身只是不只是

158
00:10:11,939 --> 00:10:12,939
诚实的。

159
00:10:12,939 --> 00:10:18,979
因此，如果我控制此资金协议和喜欢货币协议的人，也许我只是在做

160
00:10:18,979 --> 00:10:20,919
侧面有几个点。

161
00:10:20,919 --> 00:10:24,079
因为再次，我很可能这样做。

162
00:10:24,079 --> 00:10:29,139
特别是，这是这里的关键是，如果您制作了这些协议之一

163
00:10:29,139 --> 00:10:32,399
有人激励某人...

164
00:10:32,399 --> 00:10:35,299
如果他们有办法从中获利，那么他们基本上会。

165
00:10:35,299 --> 00:10:39,579
这是时间问题。是的，我们首先使用它的原因是因为这些

166
00:10:39,579 --> 00:10:43,500
由于某种原因，硬币是有价值的。再一次，这就是这种直接的经济激励措施

167
00:10:43,500 --> 00:10:50,639
让人们实际攻击这件事。所以，好的。由于所有这些，你知道，

168
00:10:50,699 --> 00:10:56,339
我们有点遇到这个问题，而这个受信任的操作员不是很好。那我们该怎么办？出色地，

169
00:10:57,299 --> 00:11:03,799
尝试摆脱它。非常简单的解决方案。正如我们将看到的那样，这导致了几十年的喜欢

170
00:11:03,799 --> 00:11:08,959
研究以及如何实际做到这一点，实际上非常棘手。

171
00:11:08,959 --> 00:11:12,159
所以让我检查聊天。

172
00:11:12,159 --> 00:11:13,159
好的。

173
00:11:13,159 --> 00:11:15,559
我想每个人仍在关注。

174
00:11:15,559 --> 00:11:17,379
所以，好的。

175
00:11:17,379 --> 00:11:25,779
这里的一个关键是，就像您知道一个可信的程度一样

176
00:11:25,779 --> 00:11:30,139
每个人都可以信任的协议，它将越有用。

177
00:11:30,139 --> 00:11:40,899
而且我的讲话非常广泛或抽象，因为这是要解决这个问题的关键点

178
00:11:40,899 --> 00:11:45,259
如果我们确实想制作最大有用的东西，那么它就需要...

179
00:11:45,259 --> 00:11:50,000
我要说的是，它需要最低限度地信任。

180
00:11:50,000 --> 00:11:56,899
假设我们有两个运营商，其中一位很好，但是有时会有问题。

181
00:11:56,899 --> 00:12:02,459
金钱不如另一个从未有我上面列出过的错误的操作员好。

182
00:12:02,459 --> 00:12:08,959
因此，在我们可以朝这种信任最小化的设置方向驱动的范围内，就越有用

183
00:12:08,959 --> 00:12:13,559
我们对这种数字稀缺性的抽象将会是

184
00:12:13,559 --> 00:12:16,319
为人们创造价值。

185
00:12:16,319 --> 00:12:21,079
我们应该关心这

186
00:12:21,079 --> 00:12:25,079
处理身体稀缺的结构，您期望我们可以做类似的事情

187
00:12:25,079 --> 00:12:26,360
用于数字稀缺。

188
00:12:26,899 --> 00:12:31,039
正如您看到的那样，像比特币，以太坊和其他所有事物的增长一样，对吗？

189
00:12:31,699 --> 00:12:32,720
很多人在乎。

190
00:12:32,840 --> 00:12:35,059
从中可能会带来很多价值。

191
00:12:35,399 --> 00:12:39,299
而且，您知道，甚至可能有我们还没有想到的应用程序，这会做得更多。

192
00:12:39,539 --> 00:12:41,019
因此，这是一个非常值得的目标。

193
00:12:44,179 --> 00:12:50,919
因此，让我们尝试考虑如何使用一个受信任的操作员删除这种类似的稻草人协议。

194
00:12:51,720 --> 00:12:53,519
事实证明这很难。

195
00:12:53,519 --> 00:13:00,480
再次，有点明显的是，您就像，嘿，我有这个东西。

196
00:13:00,480 --> 00:13:01,759
有一个聚会。

197
00:13:01,759 --> 00:13:03,860
那是失败的点。

198
00:13:03,860 --> 00:13:09,419
显然，您很直接是说我们将摆脱这里的单身领导者。

199
00:13:09,419 --> 00:13:11,519
单个操作员。

200
00:13:11,519 --> 00:13:15,399
而您考虑这样做的方式而不是系统中有一个节点

201
00:13:15,399 --> 00:13:20,879
控制所有内容，您可以在所有节点上分发协议。

202
00:13:20,879 --> 00:13:25,559
幸运的是，有关于分布式计算的丰富学术文献。

203
00:13:25,559 --> 00:13:30,919
也许从那里我们可以学习一些有关如何在我们关心的上下文

204
00:13:30,919 --> 00:13:32,639
关于。

205
00:13:32,639 --> 00:13:36,860
通常，人们对此的看法是，而不是只有一个节点

206
00:13:36,860 --> 00:13:41,519
系统，您现在有结尾节点，这些节点都计算同一件事。

207
00:13:41,519 --> 00:13:46,000
因此，如果您考虑一下，您知道，就像我们有这个钱协议一样，我们实际上是什么

208
00:13:46,000 --> 00:13:47,000
正在做？

209
00:13:47,000 --> 00:13:48,240
就像人们可以在协议中喜欢肉钱一样。

210
00:13:48,240 --> 00:13:53,379
协议。你知道，假设我想喜欢买一百个硬币。那你也可以转移

211
00:13:53,379 --> 00:13:58,279
协议中的事物。假设我想喜欢将五枚硬币从像我一样发送给您。

212
00:13:58,279 --> 00:14:05,580
好的。从那里，您可以将所有这些视为所有这些，就像我们的方式一样

213
00:14:05,580 --> 00:14:09,539
我们现在将结构这个问题，以便我们可以让每个人加入

214
00:14:09,539 --> 00:14:14,299
系统。这些类似的结尾节点我正在谈论，加入系统并共同努力。你结构

215
00:14:14,299 --> 00:14:18,319
在所有这些输入的情况下，它们以它们计算相同的东西的方式。

216
00:14:18,319 --> 00:14:22,819
因此，我们假设每个人都有与协议的所有输入，如果您认为

217
00:14:22,819 --> 00:14:24,859
关于它，这只是所有交易的记录。

218
00:14:24,859 --> 00:14:29,719
就像当我们铸造硬币时一样，您也可以想象燃烧硬币或撤回的东西。

219
00:14:29,719 --> 00:14:33,639
但是无论哪种方式，都有可以进入系统的方法。

220
00:14:33,639 --> 00:14:35,859
而且有一些方法可以在系统中传输这些硬币。

221
00:14:35,859 --> 00:14:41,199
如果您列出我们正在建立整个经济的整个历史的整个清单，

222
00:14:41,200 --> 00:14:45,840
您可以想象，如果您喜欢以相同的方式概括这些输入，您会得到一个

223
00:14:45,840 --> 00:14:46,840
单输出。

224
00:14:46,840 --> 00:14:51,700
在这种情况下，单个输出将是我们目前对每个人平衡的分类帐。

225
00:14:51,700 --> 00:14:58,480
因此，在任何时间点，我们都可以询问结尾节点，例如，嘿，每个人的平衡是什么

226
00:14:58,480 --> 00:14:59,480
在系统中？

227
00:14:59,480 --> 00:15:03,720
如果我从一百个硬币开始，我花了五枚硬币。

228
00:15:03,720 --> 00:15:07,300
现在突然它说我有95分，你有5分。

229
00:15:07,300 --> 00:15:11,080
而且，如果您考虑一下，可以为我们进行的任何交易序列做到这一点。

230
00:15:11,080 --> 00:15:15,879
制作。在任何时间点，您都可以查看此输出的摘要。

231
00:15:17,080 --> 00:15:20,920
因此，回到这本学术文学以及所有工作的工作

232
00:15:20,920 --> 00:15:25,400
在过去的几十年中，这个概念称为状态机的复制。

233
00:15:26,600 --> 00:15:31,720
这里的复制是一个事实，即我们在系统中有多个节点。

234
00:15:31,720 --> 00:15:36,680
它们本质上都可以重复同样的工作，该输入日志以获取相同的输出。

235
00:15:37,479 --> 00:15:41,799
特别是，这就是我们共识的意思是系统中的每个节点

236
00:15:41,799 --> 00:15:47,879
最终应该同意输出。因此，再次，您编写程序，协议

237
00:15:47,879 --> 00:15:52,839
输入的确定性功能。您想象那时，如果您有一个诚实的节点，它们是

238
00:15:52,839 --> 00:15:57,239
将在同一输入上运行相同的功能。他们必须获得相同的输出。喜欢假设

239
00:15:57,239 --> 00:16:02,039
协议中没有错误或任何内容。对于相同的输入，您将获得相同的输出。

240
00:16:02,039 --> 00:16:08,399
它。这对于摆脱我们的单一可信赖的操作员很有用。随着许多节点的增加，

241
00:16:08,399 --> 00:16:13,799
系统变得更难攻击。而不是利用一个节点上的错误并删除

242
00:16:13,799 --> 00:16:20,599
整个系统，您现在必须攻击两三个或三个系统。有这个想法

243
00:16:20,599 --> 00:16:26,439
系统中的多数。当我们说共识时，这就是我的意思。在任何时间点，

244
00:16:26,440 --> 00:16:31,660
应该有一些大多数节点都具有相同的视图或相同的输出，

245
00:16:31,880 --> 00:16:37,280
同一状态。当他们这样做时，即使某些节点有故障，

246
00:16:38,020 --> 00:16:42,840
您仍然有大多数人说这是世界的状态。所以这就是想法

247
00:16:42,840 --> 00:16:48,140
现在，攻击我们的系统变得更加困难，因为我们有更多的节点正在做

248
00:16:48,139 --> 00:17:01,199
同样的事情。好的。聊天很少。我假设每个人都在跟随。让我们在这里看看。

249
00:17:01,600 --> 00:17:08,400
一秒钟。是的。只是明确，亚历克斯，很多聊天都在不和谐中发生。所以没有

250
00:17:08,400 --> 00:17:15,779
在此特定平台中的YouTube聊天或聊天。所以马里奥和我会在那里

251
00:17:15,779 --> 00:17:19,619
由于您没有寻找任何重要的问题或评论。

252
00:17:19,619 --> 00:17:25,139
好吧，太好了。谢谢。是的。我也可以尝试找到不和谐，但这可能是一面

253
00:17:25,139 --> 00:17:28,500
追求我。所以无论如何，是的。只要让我知道我应该解决问题。

254
00:17:30,420 --> 00:17:38,180
好的。让我们跳回去。这里的重点是我们要增加节点的数量

255
00:17:38,180 --> 00:17:42,980
在系统中。而且您知道，如果我们的所有软件都是正确的，并且我们的不变符

256
00:17:42,980 --> 00:17:46,019
然后，我们应该以相同的输出结束。而且攻击变得更加困难。

257
00:17:47,059 --> 00:17:53,140
因此，我在文献中围绕共识中四处乱逛的观念，提到

258
00:17:53,140 --> 00:18:00,660
作为拜占庭的容错。因此，逻辑可以，好的，如果系统中的更多节点意味着更多的节点

259
00:18:00,660 --> 00:18:05,940
安全，然后我们想要大量的节点。我在这里打电话。所以一个很高的数字。

260
00:18:06,819 --> 00:18:10,740
您可以想象极限。就像互联网上的每个节点一样。

261
00:18:10,740 --> 00:18:16,740
正确的？就像您的冰箱可以参与的一样，您的计算机在家中，所有计算机都喜欢

262
00:18:16,740 --> 00:18:21,299
这些数据中心。我不知道，你的车沿着高速公路行驶。就像你可以想象一切

263
00:18:21,299 --> 00:18:25,539
连接到Internet可以喜欢参与此协议。然后你有一个令人难以置信的

264
00:18:25,539 --> 00:18:31,299
大量节点。攻击系统变得非常难以置信。所以事情是

265
00:18:31,299 --> 00:18:36,339
当您在公共互联网上移动此设置时，互联网也一样

266
00:18:36,339 --> 00:18:43,539
无许可的开放系统人们可以加入和离开，这样做可能会开始出现问题

267
00:18:44,579 --> 00:18:50,019
因此，举例说明您知道我们知道我们有20个节点吗？

268
00:18:50,019 --> 00:18:54,899
互联网是一个错误的系统，因此，例如，您知道有些节点会简单地错过来自

269
00:18:54,899 --> 00:19:02,179
其他节点如果我喜欢我的嗯，你知道家里的本地节点，我寄给了你知道嘿，转移

270
00:19:02,180 --> 00:19:04,380
我的一些硬币给你。

271
00:19:04,380 --> 00:19:07,140
可能只是无缘无故的情况

272
00:19:07,140 --> 00:19:10,180
除了互联网上的混乱之外

273
00:19:10,180 --> 00:19:13,160
我的交易最终无法获得足够的节点

274
00:19:13,160 --> 00:19:14,660
成为共识的一部分。

275
00:19:15,980 --> 00:19:17,240
可能会有错误实现。

276
00:19:17,240 --> 00:19:20,060
因此，您可以想象我们有所有这些节点

277
00:19:20,060 --> 00:19:21,600
他们有不同的实现

278
00:19:21,600 --> 00:19:23,060
在同一软件中。

279
00:19:23,060 --> 00:19:25,960
再说一次，只要有正确的实现，

280
00:19:25,960 --> 00:19:28,940
他们会计算相同的输出，一切都很好，

281
00:19:28,940 --> 00:19:30,100
但是可能会有一个错误。

282
00:19:30,100 --> 00:19:32,180
因此，也许有些节点会掉落

283
00:19:32,180 --> 00:19:38,259
网络或查看其他视图。也可能存在硬件故障。所以这有点相似

284
00:19:38,259 --> 00:19:44,440
仅在互联网运输中发生故障。但是你可以想象我在奔跑

285
00:19:44,440 --> 00:19:48,740
我的烤面包机上的钱协议和我的烤面包都会下降，因为我正在做烤面包，而且不是

286
00:19:48,740 --> 00:19:53,740
有足够的资源还可以处理交易。所以也许很短

287
00:19:53,740 --> 00:19:59,500
一段时间，此节点会离线。否则可能会有积极的攻击。再次，

288
00:19:59,500 --> 00:20:03,339
回到上一件事，您知道这是有用的还是有价值的

289
00:20:03,339 --> 00:20:07,559
协议，然后直接激励人们尝试打破它。

290
00:20:07,559 --> 00:20:13,259
因此，有人实际上可以积极攻击网络中的某些节点。

291
00:20:13,259 --> 00:20:16,779
以及所有这些类型的东西，我们想称之为拜占庭的故障。

292
00:20:16,779 --> 00:20:19,460
同样，这是从学术文献中出来的。

293
00:20:19,460 --> 00:20:23,640
但是想法是，如果我们运行了这些一致的协议之一，我们想制作

294
00:20:23,640 --> 00:20:26,859
当然可以忍受任何可能发生的任意失败。

295
00:20:26,859 --> 00:20:28,619
再次，可能会有一个错误。

296
00:20:28,619 --> 00:20:31,219
一个节点可能不正确或不诚实。

297
00:20:31,219 --> 00:20:33,759
无论发生什么，我们都想确保，

298
00:20:33,759 --> 00:20:36,479
至少在某个时间范围内，最终

299
00:20:36,479 --> 00:20:40,379
您到达大多数节点的地方

300
00:20:40,379 --> 00:20:42,319
有相同的观点。

301
00:20:42,319 --> 00:20:44,559
如果没有，那会有业务失败

302
00:20:44,559 --> 00:20:47,000
是的，我们的协议被打破了。

303
00:20:47,000 --> 00:20:50,179
是的，如果您想真正深入研究，

304
00:20:50,179 --> 00:20:52,619
去查找拜占庭的容错。

305
00:20:52,619 --> 00:20:55,279
同样，关于这个文献有很多文献，

306
00:20:55,279 --> 00:20:57,419
甚至是前的。

307
00:20:57,420 --> 00:20:58,920
但是想法是基本上，好的，

308
00:20:58,920 --> 00:21:02,120
我们假设某些节点实际上只是以这种方式出现故障。

309
00:21:02,120 --> 00:21:04,000
某些部分F是错误的。

310
00:21:04,000 --> 00:21:05,820
我们仍然想制定共识协议

311
00:21:05,820 --> 00:21:09,279
这样我们就可以就输出达成共识，

312
00:21:09,279 --> 00:21:11,800
即使存在这个故障的分数。

313
00:21:13,500 --> 00:21:17,080
再说一次，我们可以在这里进入很多。

314
00:21:17,080 --> 00:21:19,120
我们将专注于以太坊。

315
00:21:19,120 --> 00:21:21,300
因此，我将简要介绍这些。

316
00:21:21,300 --> 00:21:25,220
但是在很高的水平上，考虑到这一点的一般方法

317
00:21:25,220 --> 00:21:26,880
是他们所说的两阶段犯罪。

318
00:21:27,420 --> 00:21:33,820
因此，这意味着，嗯，我认为我们在网络中有终点节点，然后基本上是

319
00:21:34,620 --> 00:21:39,820
嗯，你知道，一个或一些节点说，嘿，我认为我们的协议的下一个状态

320
00:21:39,820 --> 00:21:44,860
是，您知道，X，我不知道，有些随机状态说，呃，结合了我们的，您知道，

321
00:21:44,860 --> 00:21:49,660
系统中的最新转移。那些最近的转移将达到平衡

322
00:21:49,660 --> 00:21:56,060
在时间t上，嗯，在时间t加一个余额。这两个阶段提交的方式

323
00:21:56,059 --> 00:22:01,119
有用。又有两个阶段。第一阶段是，假设有一些节点

324
00:22:01,119 --> 00:22:05,679
在说，嘿，我认为第二天就是这样。他们有点派国家给所有人，

325
00:22:06,399 --> 00:22:10,579
含义网络中的所有其他节点，所有其他节点都必须确认这一点。

326
00:22:10,579 --> 00:22:15,339
然后，一旦您看到了拜占庭的容忍分数，说三分之二，

327
00:22:15,960 --> 00:22:21,960
您最终在这个地方，我知道我将拥有多数人同意我的意见，因为

328
00:22:21,960 --> 00:22:27,720
他们已经这样做了。所以那是第一阶段。然后第二阶段在说，基本上是在说

329
00:22:27,720 --> 00:22:32,900
我只是接受这是协议的新状态。而且，这种工作的方式是，再次

330
00:22:33,019 --> 00:22:39,240
假设我达到了我的容忍阈值，例如，三分之二，然后

331
00:22:39,240 --> 00:22:43,480
就像系统中其他任何地方都可能有其他多数观点。

332
00:22:45,559 --> 00:22:50,360
再说一次，人们实际上已经建立了许多例子。所以这是一个

333
00:22:50,359 --> 00:22:54,659
问题人们甚至在加密之前就已经很久了。正如我们试图扩展互联网这样做的那样

334
00:22:54,659 --> 00:22:59,000
同样的事情，您会有很多节点，您希望它们宽容这些类型的

335
00:22:59,000 --> 00:23:05,199
失败。特别是在PBFT中达到顶点。这代表实用的拜占庭容错。

336
00:23:06,059 --> 00:23:12,399
是的，这是一项协议，基本上可以让您这样做。不过问题是与PBFT

337
00:23:12,399 --> 00:23:19,039
这些更古典的BFT协议中的许多，它们在节点计数中受到限制。

338
00:23:19,039 --> 00:23:24,180
特别是，您会收到通过PBFT的二次消息。

339
00:23:24,180 --> 00:23:30,039
我们的意思是，您知道，如果是，例如，您知道，有10个节点

340
00:23:30,039 --> 00:23:34,079
他们必须交换网络，例如，实际上是一百个消息

341
00:23:34,079 --> 00:23:38,740
这就是国家，其他所有人也将其视为同一状态。

342
00:23:38,740 --> 00:23:42,440
这意味着这些系统在您可以的几个节点上受到限制

343
00:23:42,440 --> 00:23:43,440
有。

344
00:23:43,440 --> 00:23:47,480
而且，您知道，我试图在第二秒之前尝试的观点是，尤其是对于这些

345
00:23:47,480 --> 00:23:54,680
诸如制作这些系统以非常安全的方式代表数字稀缺的系统。你

346
00:23:54,680 --> 00:23:58,200
实际上希望节点计数要比我们实际上所能获得的要高得多

347
00:23:58,200 --> 00:24:04,759
协议类型。同样，如果您想更多地研究这个问题，这个一般问题是

348
00:24:04,759 --> 00:24:09,799
他们试图解决这个问题的拜占庭将军问题。我们希望能够来

349
00:24:09,799 --> 00:24:14,839
即使在某些恶意或拜占庭的存在下，共识具有很高的节点

350
00:24:14,839 --> 00:24:21,139
分数。有一段时间，您知道，这是研究的状态。那就是

351
00:24:21,139 --> 00:24:26,879
我们能做的最好。人们正在研究这一点。但最终，是的，我们只是在移动

352
00:24:26,879 --> 00:24:35,220
一直到比特币出现。所以我现在要谈论一点，你知道，我们正在进入

353
00:24:35,220 --> 00:24:46,640
加密环境。在继续之前，亚历克斯，我们在这里有一个问题。娜娜问，pbft吗

354
00:24:46,640 --> 00:24:51,160
协议有上限吗？如果是，那实际上是什么？

355
00:24:52,360 --> 00:24:56,539
是的，好问题。因此，这并不是说有一个硬上限。更多

356
00:24:56,539 --> 00:25:02,519
您会添加的节点越多，开销就越多。因此，例如，系统会更慢，

357
00:25:02,519 --> 00:25:07,819
正确的？就像，如果您有10个节点运行协议，那么您可以说，您知道，

358
00:25:07,900 --> 00:25:12,980
例如，我不知道，例如，我不知道，你知道，一对夫妇

359
00:25:12,980 --> 00:25:17,519
一百毫秒的潜伏期。当您去过100个节点时，您可以想象，您知道，

360
00:25:17,579 --> 00:25:21,359
有这样的高度缩放的费用。然后在某个时刻，你知道，

361
00:25:21,400 --> 00:25:25,420
如果要带我们去，就像我们的下一个状态一样

362
00:25:25,420 --> 00:25:32,359
交易，然后系统开始变得降低。而且，你知道，这是一个问题

363
00:25:32,359 --> 00:25:36,599
例如，如果我们想做类似的事情，好吧，让我们像签证一样，就是这样

364
00:25:36,599 --> 00:25:42,439
信用，您知道，信用卡网络。他们像你知道的那样处理，我不知道成千上万，

365
00:25:42,439 --> 00:25:47,559
如果没有更多的交易。如果您想要相同的水平，那么您可以到达一个地方

366
00:25:47,559 --> 00:25:52,199
吞吐量，您的共识协议像少数几个节点一样，

367
00:25:52,199 --> 00:25:58,119
您知道，值得信赖的签证服务器需要太长。总的来说，这就像权衡

368
00:25:58,119 --> 00:26:03,879
基本上在吞吐量和延迟之间，您知道这些一致的协议是

369
00:26:03,879 --> 00:26:08,679
不是魔术，它们受物理定律的约束，所以他们知道必须遵循相同的

370
00:26:08,679 --> 00:26:21,000
同样的约束对嗯，希望很有帮助，是的，谢谢你，好吧，嗯

371
00:26:21,000 --> 00:26:39,220
所以，对。比特币有一些类似的创新。这就是每个人最初对加密货币的兴奋，从某种意义上说，比特币的创建者Satoshi提出了一个系统，您知道，在某种意义上，它在一般问题中解决了这一业务。

372
00:26:39,220 --> 00:26:43,940
因此，这里很酷的是它会扩展到任意节点计数。

373
00:26:44,100 --> 00:26:48,339
因此，您可以摆脱有一些固定的节点同意的瓶颈。

374
00:26:49,200 --> 00:26:53,799
特别是，系统设计的方式是任何人都可以加入或离开。

375
00:26:53,799 --> 00:26:59,120
同样，系统共同对这种行为非常宽容。

376
00:26:59,940 --> 00:27:03,940
我们会在一秒钟内提出的共识使您达到同一状态。

377
00:27:04,620 --> 00:27:06,160
是的，节点可以自由地来去去。

378
00:27:06,380 --> 00:27:09,059
而且您有点绕过可扩展性瓶颈。

379
00:27:09,220 --> 00:27:15,019
因此，特别是，比特币具有这种工作证明。

380
00:27:15,019 --> 00:27:20,420
您采取此工作证明，同时也为您提供了这种体重的概念

381
00:27:20,420 --> 00:27:22,440
链或困难。

382
00:27:22,440 --> 00:27:24,500
共识算法非常简单。

383
00:27:24,500 --> 00:27:29,620
您只需查看那里的链条，您就可以从公共互联网上观察到

384
00:27:29,620 --> 00:27:33,279
然后，您选择了最重的链条或最多工作的链条。

385
00:27:33,279 --> 00:27:37,400
如果您这样做，只要您对链的看法与其他所有人都一样

386
00:27:37,400 --> 00:27:42,240
最终达到了链的同一状态。因为，您知道，假设有诚实

387
00:27:42,240 --> 00:27:46,100
网络中的大多数节点都将遵循相同的协议。他们

388
00:27:46,100 --> 00:27:51,440
所有人都遵循最重的链条。如果这样做，您最终进入了同一地方。

389
00:27:53,340 --> 00:28:03,800
因此，让我看看下一步是什么。好的。是的。因此，让我现在实际移动，

390
00:28:03,799 --> 00:28:06,399
所以我要画一些图表

391
00:28:06,399 --> 00:28:08,440
拆开我刚才说的话。

392
00:28:08,440 --> 00:28:12,779
而且我需要一秒钟才能进行设置。

393
00:28:15,839 --> 00:28:16,839
好的。

394
00:28:16,839 --> 00:28:17,720
让我们来看看。

395
00:28:21,859 --> 00:28:23,220
我们会这样做。

396
00:28:23,220 --> 00:28:26,619
然后我想我必须停止这个，

397
00:28:26,619 --> 00:28:28,599
但是我会回到这里。

398
00:28:29,940 --> 00:28:31,159
和...

399
00:28:32,299 --> 00:28:33,379
好的。

400
00:28:33,799 --> 00:28:39,139
所以我相信你可以看到这个。所以。好的，我们在这里是什么意思？

401
00:28:39,279 --> 00:28:45,000
因此，考虑到这一点的方法是我们从某种初始状态开始。这就像创世纪块和比特币。

402
00:28:45,559 --> 00:28:50,119
这是什么都没关系，但是，您知道，我们在这里有自己的小街区。

403
00:28:50,919 --> 00:28:59,200
我将其放在创世纪上。现在的想法是，任何想加入系统的人都可以添加一个块。

404
00:28:59,200 --> 00:29:03,680
是的，所以假设我们有一堆交易，嗯，我会做一些

405
00:29:03,680 --> 00:29:07,920
小点，这些交易说您知道我将发送一个比特币

406
00:29:07,920 --> 00:29:12,559
从我到你

407
00:29:12,559 --> 00:29:19,840
um只是在系统中以这种工作方式传输，如果我想提出一个块

408
00:29:19,840 --> 00:29:24,960
再一次，任何人都可以做到这一点，我们会在一秒钟内看到它的工作原理

409
00:29:24,960 --> 00:29:31,759
将所有这些捆绑在一起，然后我做一个块，所以这里有一个块，我会继续删除

410
00:29:31,759 --> 00:29:37,600
这些是因为我们将它们移到了其他地方，是的，这里有几件事，所以

411
00:29:38,240 --> 00:29:43,039
在比特币中要意识到的关键是，有这样的工作证明概念

412
00:29:43,920 --> 00:29:50,559
工作证明是又像是的，这个想法基本上是我看到的

413
00:29:50,559 --> 00:29:54,720
此消息涉及一些密码学，使我知道一定数量的工作或喜欢

414
00:29:54,720 --> 00:30:00,799
计算能力专用于该块。考虑它的一种方法是您密封

415
00:30:00,799 --> 00:30:06,160
堵塞。您正在添加这种特殊的东西，无论您经过什么措施，都可以向任何人证明

416
00:30:06,160 --> 00:30:11,920
生产的工作数量。基本上，这是一个加密的概念

417
00:30:11,920 --> 00:30:20,000
哈希给我一些数据。我还回馈这种独特的摘要。是的。基本上是

418
00:30:20,000 --> 00:30:24,559
获得这种摘要的唯一方法，因为这些哈希是随机的。获得这个的唯一方法是

419
00:30:24,720 --> 00:30:30,559
我一定刚刚计算了哈希。这是没有办法的。所以你要做的第一件事...好吧，

420
00:30:30,559 --> 00:30:35,600
我的意思是，您要做几件事。但是想象现在我们有了我们的障碍，然后我们有了

421
00:30:35,600 --> 00:30:42,640
我们在这里的所有交易。好的。所以一件很酷的事情是这个块将参考

422
00:30:43,519 --> 00:30:47,920
上一个块的哈希。这就像这里的箭头一样。就像这个指针一样。

423
00:30:49,200 --> 00:30:52,079
您就是这样做的，以便您实际上可以建立历史

424
00:30:52,079 --> 00:30:57,279
因为你知道我是否只是在这里有一些街区，就像在太空中漂浮

425
00:30:57,279 --> 00:31:02,399
知道我需要像应该如何测序这些交易的上下文一样知道

426
00:31:03,039 --> 00:31:08,240
最终，您知道嗯，也许我们会以这种方式思考，您希望在那里变得独特

427
00:31:08,240 --> 00:31:12,639
序列所以想象一下，您知道我在这里绘制交易，你知道这就像你

428
00:31:12,639 --> 00:31:20,799
知道加上五个比特币，喜欢您知道的其他帐户加上0.5个帐户b的0.5

429
00:31:20,799 --> 00:31:26,240
他们是。应该有一个独特的序列。这就是为什么我们需要共识才能获得独特的原因

430
00:31:26,240 --> 00:31:31,099
顺序。然后任何人都可以基本上重播它们。最终您结束了

431
00:31:31,099 --> 00:31:37,460
同一状态。帐户A有任何东西。帐户B有任何东西。帐户C有任何东西。我不知道，

432
00:31:37,940 --> 00:31:46,419
无论最终出现什么，三个比特币，两个比特币，24比特币。因此，我们这样做的方式又是

433
00:31:46,440 --> 00:31:50,639
我们需要我们将代表或序列化的独特序列

434
00:31:50,640 --> 00:31:56,840
块。因此，您需要这个类似父母块的概念。所以你这样做的方式基本上就是你

435
00:31:56,840 --> 00:32:02,060
像这个东西一样。我只是说像G的h一样。您实际上只是在此中写下H

436
00:32:02,060 --> 00:32:09,360
堵塞。这基本上说，好吧，我知道这在这里。也许我会尝试的。

437
00:32:09,359 --> 00:32:21,819
g。无论哪种方式。希望这很清楚。对不起，有点狭窄。但基本上你

438
00:32:21,819 --> 00:32:25,579
拥有以前的块的哈希。再一次，这些加密哈希的方式

439
00:32:25,579 --> 00:32:30,719
功能工作是，除非我

440
00:32:30,719 --> 00:32:36,719
有以前的块。所以你有。它在这里包含所有交易。然后

441
00:32:36,720 --> 00:32:40,460
因此，现在有了这个工作证明，您知道我们可以考虑的方式是

442
00:32:40,460 --> 00:32:41,860
就像这样的印章一样。

443
00:32:41,860 --> 00:32:47,339
放一个小检查标记，说我做了一些计算来实际做到这一点

444
00:32:47,339 --> 00:32:48,339
堵塞。

445
00:32:48,339 --> 00:32:49,339
好的。

446
00:32:49,339 --> 00:32:51,900
这里有几件事。

447
00:32:51,900 --> 00:32:58,279
因此，我们获得的第一件事是，此工作证明就像此速率限制者或

448
00:32:58,279 --> 00:33:00,279
这种民事保护的概念。

449
00:33:00,279 --> 00:33:01,839
所以这就像一件大事。

450
00:33:01,839 --> 00:33:05,299
同样，这些像开放式无许可系统一样，任何人都可以加入。

451
00:33:05,299 --> 00:33:10,119
我们需要有一些方法来限制在给定时间可以制作多少个块。

452
00:33:10,119 --> 00:33:14,359
否则，您会发现，您知道，这里不像10万亿个街区在这里等待

453
00:33:14,359 --> 00:33:15,359
这是一团糟。

454
00:33:15,359 --> 00:33:18,879
你知道，我的烤面包机正在脱机，因为它甚至无法处理这么多块

455
00:33:18,879 --> 00:33:21,000
我们有一个大问题。

456
00:33:21,000 --> 00:33:25,559
因此，所有这些不同的工作证明或股份证明的第一件事我们

457
00:33:25,559 --> 00:33:26,559
一秒钟。

458
00:33:26,559 --> 00:33:30,419
这些协议的工作方式是它们具有像民事抵抗一样的概念。

459
00:33:30,420 --> 00:33:33,600
意味着在合理的时间里，

460
00:33:33,600 --> 00:33:35,420
只有一个人说，

461
00:33:35,420 --> 00:33:38,840
或一些人可以进行这些更新之一

462
00:33:38,840 --> 00:33:40,400
或给定时间的新块。

463
00:33:42,539 --> 00:33:44,440
因此，让我们清理一点。

464
00:33:45,300 --> 00:33:46,560
现在的另一件事是

465
00:33:46,560 --> 00:33:49,200
这是比特币的见解之一，

466
00:33:49,200 --> 00:33:52,340
是，我们不仅得到了这个简单的保护

467
00:33:52,340 --> 00:33:53,240
有了这个工作证明，

468
00:33:53,240 --> 00:33:55,539
要计算的这个昂贵的功能，

469
00:33:55,539 --> 00:33:57,779
实际上可以用于共识。

470
00:33:57,779 --> 00:33:59,840
因此，现在的工作方式，

471
00:33:59,839 --> 00:34:02,000
让我放大一点。

472
00:34:02,000 --> 00:34:03,759
如果我能解决这个问题。

473
00:34:05,619 --> 00:34:09,619
所以，是的，我实际上只是清理一点。

474
00:34:09,619 --> 00:34:12,299
因此，这是一种工作方式

475
00:34:12,299 --> 00:34:15,480
现在，假设链条中有几个街区。

476
00:34:15,480 --> 00:34:17,500
好吧，很酷。

477
00:34:17,500 --> 00:34:18,779
好的。

478
00:34:19,719 --> 00:34:21,699
我只是为了娱乐而抽一些。

479
00:34:21,699 --> 00:34:23,500
因此，我们在链中有这些块。

480
00:34:23,500 --> 00:34:26,039
再一次，这将是您，

481
00:34:26,039 --> 00:34:27,460
也许从你的创世纪开始，

482
00:34:27,460 --> 00:34:29,840
可能，没有人有任何硬币。

483
00:34:29,840 --> 00:34:34,980
现在，您只需重播所有交易，只是按块和序列进行。

484
00:34:34,980 --> 00:34:42,559
同样，这是状态机器复制的想法，如果我有相同的输入，我们都有一个

485
00:34:42,559 --> 00:34:46,300
正确实施我们的货币协议。我们最终都以相同的输出。

486
00:34:46,300 --> 00:34:51,400
例如，在这种情况下，您知道，在某个时间点我们的分类帐。

487
00:34:51,400 --> 00:34:57,200
所以我们这样做。正确。现在，这里的另一件事是，有了这项工作证明，

488
00:34:57,199 --> 00:35:01,919
这是一个难度的概念，您知道我们真的不需要超级进入

489
00:35:01,919 --> 00:35:07,119
杂草的工作原理，但最终有一个难度的概念，这就是多少工作

490
00:35:07,119 --> 00:35:12,879
特定的工作代表了一种思考的方法只是一个数字，所以我们可以说好的

491
00:35:12,879 --> 00:35:18,239
像链条中的第一个街区一样，这里的困难也许像15一样，就像是任意的

492
00:35:18,239 --> 00:35:25,439
数字呃，您真正需要的是，他们知道数字会增加，所以您知道让我们知道

493
00:35:25,440 --> 00:35:30,960
假设这里有困难15这里的下一个障碍甚至喜欢一个困难，所以

494
00:35:30,960 --> 00:35:35,920
在一秒钟内有趣的是，因为它并不严格增加，但它只是更多，然后你知道我

495
00:35:35,920 --> 00:35:41,039
不知道在最后一个区块上说，这是2 000的工作，所以现在

496
00:35:41,039 --> 00:35:48,000
算法就像非常简单的嗯，这再次就像一部分，这是整个对话

497
00:35:48,000 --> 00:35:53,760
关于比特币和简单性，但最终是考虑到这一点的方式

498
00:35:53,760 --> 00:35:56,120
因此，这很简单。

499
00:35:56,120 --> 00:35:58,360
这是非常有吸引力的东西

500
00:35:58,360 --> 00:36:00,840
至少关于比特币。

501
00:36:00,840 --> 00:36:05,020
那是我找到链的头的方式，

502
00:36:05,020 --> 00:36:08,460
就像最近的块一样的意思是我只是总结一下

503
00:36:08,460 --> 00:36:10,260
我把那个工作最多的一个。

504
00:36:10,260 --> 00:36:12,540
这就是我一秒钟前的意思。

505
00:36:12,540 --> 00:36:14,800
所以在这里我们会说我们不知道，

506
00:36:14,800 --> 00:36:16,140
我想这应该是更好的数字，

507
00:36:16,140 --> 00:36:18,460
但这就是16和2000。

508
00:36:18,460 --> 00:36:23,460
因此，这里的总工作量是2016年的总困难。

509
00:36:23,760 --> 00:36:30,660
链。好的。这条链中没有叉子。因此，由于这实际上很琐碎，所以您不会

510
00:36:30,660 --> 00:36:34,000
需要实际看这个。您只会去最近的街区，说那是

511
00:36:34,000 --> 00:36:39,700
链的头。好的。现在让我们看一个更复杂的示例。

512
00:36:42,140 --> 00:36:47,420
假设我们有这个。然后，好的。再说一次，思考的方式就像任何人

513
00:36:47,420 --> 00:36:52,780
可以随时真正提出一个块。假设我们知道我们在这里

514
00:36:52,780 --> 00:36:57,940
在这种链条状态的某个地方，也许回到第一个街区。然后现在有人是

515
00:36:57,940 --> 00:37:03,860
要来的，他们将再努力。是的，是的，我们会做的

516
00:37:03,860 --> 00:37:09,040
这边走。假设有人在与您知道的同时，

517
00:37:09,040 --> 00:37:16,980
我们的第二个街区，但是他们的街区有一个困难。我不知道。我们说10。

518
00:37:18,600 --> 00:37:22,000
细节实际上变得更加复杂，但这应该给您一些

519
00:37:22,000 --> 00:37:23,980
直觉如何运作。

520
00:37:23,980 --> 00:37:25,960
假设这很难10

521
00:37:25,960 --> 00:37:29,400
然后有人来了

522
00:37:29,400 --> 00:37:34,219
很难，例如，我不知道3000。

523
00:37:34,219 --> 00:37:38,440
所以我错过了街区，对不起。

524
00:37:44,519 --> 00:37:47,780
因此，我们在这里有非常沉重的街区。

525
00:37:47,780 --> 00:37:51,699
所以现在考虑这一点的方法是

526
00:37:52,000 --> 00:37:54,300
因此，我们现在将所有这些块漂浮在周围。

527
00:37:54,599 --> 00:38:00,139
就像再次说，我们在这个网络上运行烤面包机，并且看到了这组块。

528
00:38:00,360 --> 00:38:02,340
我们需要选择一个独特的链条。

529
00:38:03,000 --> 00:38:05,760
现在，因为您知道，一个块只能致力于一个父母。

530
00:38:06,739 --> 00:38:09,659
您知道，您的序列基本上可以拥有。

531
00:38:10,119 --> 00:38:11,079
让我们看看我是否可以做到这一点。

532
00:38:11,780 --> 00:38:13,820
这里有一条链。正确的。

533
00:38:14,800 --> 00:38:17,699
这里还有一条链。

534
00:38:19,360 --> 00:38:21,800
这只是遵循这些父母链接。

535
00:38:21,800 --> 00:38:31,480
因此，您开始了，也许说这片叶子是我如何回到另一种颜色？好的。

536
00:38:31,480 --> 00:38:41,800
这很有趣。我想我会这样做。因此，我们从这个区块和这个块开始说。然后

537
00:38:41,800 --> 00:38:45,960
这种工作的方式是，现在有这些竞争的链条负责人。我们仍然想要

538
00:38:45,960 --> 00:38:51,960
要像单一一样回到单个序列，所以我们现在需要应用此算法

539
00:38:51,960 --> 00:38:56,840
要右转到基本上挑选此块或此块的链条的一个头

540
00:38:57,480 --> 00:39:03,639
一个比特币呃，我们遵循这个困难数量，我们总结了它们，基本上我们说还好吗

541
00:39:04,280 --> 00:39:09,960
您知道看着顶级链条，它在2016年很难看我们得到的底部链

542
00:39:09,960 --> 00:39:18,840
你知道什么是3025，所以是的，所以直觉是我们基本上看到了

543
00:39:18,840 --> 00:39:22,920
底链好，我们看到了两个连锁店，我们需要选择一个，我们只是选择一个连锁店

544
00:39:22,920 --> 00:39:31,559
在那种情况下，我们要说的是让我做的，这可能让我做这个绿色

545
00:39:31,559 --> 00:39:37,159
链条的当前负责人右，特别是这意味着所有这些

546
00:39:37,159 --> 00:39:45,799
像这个链条的竞争叉子一样，这是我使用这种颜色

547
00:39:45,799 --> 00:39:54,039
嗯，基本上我们只是忽略了它，现在很酷，因为嗯，有人可以来加入

548
00:39:54,039 --> 00:39:59,319
如果我可能错过了这个历史，但是我可以随心所欲，但是我现在上网了

549
00:39:59,319 --> 00:40:04,599
相同的块，您知道独立于其他任何人，我可以遵循这个

550
00:40:04,599 --> 00:40:06,960
这种困难再次是结果

551
00:40:06,960 --> 00:40:08,719
这个哈希功能。

552
00:40:08,719 --> 00:40:13,440
是的，我很明显链条是什么。

553
00:40:13,440 --> 00:40:15,259
如果我想一个街区，

554
00:40:15,259 --> 00:40:18,679
那我知道我这样做的方式

555
00:40:18,679 --> 00:40:21,179
我只是在这里做父母吗？

556
00:40:21,179 --> 00:40:22,539
系统不断运行。

557
00:40:24,659 --> 00:40:25,480
好的。

558
00:40:27,299 --> 00:40:28,159
让我们来看看。

559
00:40:28,159 --> 00:40:31,059
我现在要切换回幻灯片。

560
00:40:31,059 --> 00:40:33,719
希望这是有道理的。

561
00:40:33,719 --> 00:40:36,319
我知道，是的，有...

562
00:40:37,299 --> 00:40:39,139
哦，我希望...

563
00:40:39,139 --> 00:40:40,339
我希望这是有道理的。

564
00:40:44,239 --> 00:40:46,139
让我回到这里。

565
00:40:46,139 --> 00:40:47,259
所以，太好了。

566
00:40:49,599 --> 00:40:51,559
而且，好的。

567
00:40:53,459 --> 00:40:55,199
是的，我正试图解决这个概念

568
00:40:55,199 --> 00:40:57,179
有这种工作证明。

569
00:40:57,179 --> 00:40:59,719
希望我的图表有些清楚

570
00:40:59,719 --> 00:41:03,619
任何人都可以从互联网下载这些消息

571
00:41:03,619 --> 00:41:05,819
而且有一种方法可以找到独特的链条，

572
00:41:05,819 --> 00:41:08,000
即使是在竞争连锁店的情况下。

573
00:41:11,739 --> 00:41:14,319
现在，仅使用其中一些单词

574
00:41:14,319 --> 00:41:15,739
我们在一分钟前使用的。

575
00:41:15,739 --> 00:41:20,000
因此，这是作为状态机复制而结构的。

576
00:41:20,000 --> 00:41:22,259
系统的输入是这些交易。

577
00:41:22,259 --> 00:41:25,259
因此，它们只是组织成块的比特币交易

578
00:41:25,259 --> 00:41:27,380
那里和那里的那个旋转比特币。

579
00:41:27,380 --> 00:41:29,319
再次输出只是

580
00:41:29,319 --> 00:41:32,199
在独特的链中重播所有这些交易。

581
00:41:32,199 --> 00:41:33,779
您将获得分类帐的独特状态。

582
00:41:35,839 --> 00:41:39,599
您可以在这里使用密码学来减少一些事情

583
00:41:39,599 --> 00:41:44,399
您知道，我可能会称呼这个状态空间，但特别是像

584
00:41:44,759 --> 00:41:48,219
如果我只是进行交易，我可能想喜欢将其签名。

585
00:41:48,339 --> 00:41:49,659
因此，您知道，这对我来说是独一无二的。

586
00:41:49,739 --> 00:41:52,919
这就像我授权真正移动硬币，而不仅仅是拥有它们

587
00:41:52,919 --> 00:41:57,139
在那里。我提到了有关父母哈希的这件事，对吗？

588
00:41:57,179 --> 00:42:00,299
因为否则您可以想象我像我画类似的时候

589
00:42:00,300 --> 00:42:02,019
看到一个街区。

590
00:42:04,140 --> 00:42:08,420
它大大降低了该协议的复杂程度。

591
00:42:08,420 --> 00:42:10,080
您必须计算此算法。

592
00:42:10,080 --> 00:42:13,880
如果您可以限制可以拥有多少个选项。

593
00:42:14,920 --> 00:42:17,440
同样，这里的密码学对此非常有用。

594
00:42:17,440 --> 00:42:19,100
特别是，您不必信任

595
00:42:19,100 --> 00:42:21,300
其他一些第三方告诉你这些事情

596
00:42:21,300 --> 00:42:23,760
因为您可以在本地运行加密

597
00:42:23,760 --> 00:42:25,800
并自己解决同样的事实。

598
00:42:25,800 --> 00:42:28,039
因此，我们正在减少对系统的信任。

599
00:42:28,039 --> 00:42:32,679
然后，您使用工作证明在此处实现共识。

600
00:42:32,679 --> 00:42:36,679
再说一次，有一个民事保护概念，您只需要做一些工作

601
00:42:36,679 --> 00:42:39,619
在块之前，甚至考虑有效。

602
00:42:39,619 --> 00:42:44,179
然后在同一呼吸中，这是比特币的一件很酷的事情是它利用了这一点

603
00:42:44,179 --> 00:42:45,179
以多种方式。

604
00:42:45,179 --> 00:42:51,420
但是您不仅可以得到更多的保护，而且还可以使用这个困难的概念

605
00:42:51,420 --> 00:42:53,679
实现您的共识。

606
00:42:53,679 --> 00:42:55,400
并给您一个独特的连锁店。

607
00:42:55,400 --> 00:43:05,900
加密货币有一个很酷的位。他们也有原始货币。所以你做

608
00:43:05,900 --> 00:43:11,340
加强这个货币协议。您也可以将钱作为奖励来激励人们

609
00:43:11,340 --> 00:43:17,019
扩展链的状态。我们处于无许可的环境中

610
00:43:17,019 --> 00:43:22,760
系统。任何人都可以来加入。没有任何动力实际添加另一个块

611
00:43:22,760 --> 00:43:25,660
在链条上，您可能会想象没有人在乎。

612
00:43:25,660 --> 00:43:29,460
因此，就像协议停止一样。

613
00:43:31,580 --> 00:43:35,760
因此，您将获得这些奖励，并且似乎有效。

614
00:43:35,760 --> 00:43:37,560
就像比特币仍在运行。

615
00:43:37,560 --> 00:43:38,760
人们关心它。

616
00:43:38,760 --> 00:43:40,300
是的，这很酷。

617
00:43:42,720 --> 00:43:43,560
好的。

618
00:43:43,560 --> 00:43:47,880
因此，希望这给您一些关于我们的意思的想法

619
00:43:47,880 --> 00:43:49,160
当我们谈论共识

620
00:43:49,160 --> 00:43:50,900
在这些分布式协议中。

621
00:43:52,760 --> 00:43:57,560
那是比特币，只是因为它通常是一种思考这些东西的简单简单，简单的方法。

622
00:43:58,500 --> 00:43:59,800
现在我们转向以太坊。

623
00:44:01,040 --> 00:44:09,640
因此，总的来说，这里有很多话要说。

624
00:44:09,640 --> 00:44:13,800
但基本上，今天的以太坊正处于这种证明的共识中。

625
00:44:14,080 --> 00:44:15,580
我将在一秒钟内进行更多解释。

626
00:44:16,800 --> 00:44:19,360
以前，我们有工作证明的共识机制。

627
00:44:19,360 --> 00:44:23,280
有一个合并使我们从工作证明换成了股份证明。

628
00:44:27,680 --> 00:44:32,000
现在，我们有一个使用此协议的以太坊共识层。

629
00:44:34,960 --> 00:44:41,680
让我们看一下。通常，从工作证明到股份证明。而不是使用这个

630
00:44:41,679 --> 00:44:44,219
这就是我所说的外源信号

631
00:44:44,219 --> 00:44:46,199
为了简单地保护共识。

632
00:44:46,199 --> 00:44:47,359
即您投入的这项工作

633
00:44:47,359 --> 00:44:49,739
喜欢计算此正确的块哈希，喜欢，

634
00:44:49,739 --> 00:44:51,239
您知道这是一个有效的块

635
00:44:51,239 --> 00:44:53,359
它可以进入链条。

636
00:44:53,359 --> 00:44:55,679
我们将使用内源信号。

637
00:44:55,679 --> 00:44:58,079
我的意思是，关于协议，对吗？

638
00:44:58,079 --> 00:45:01,619
因此协议本身现在可以看到

639
00:45:01,619 --> 00:45:03,139
因为我们有这个股份的概念。

640
00:45:03,139 --> 00:45:07,219
所以想法是您在这种情况下有一些硬币，以太

641
00:45:07,219 --> 00:45:09,279
您将以太锁定为某种像，您知道，

642
00:45:09,280 --> 00:45:16,800
就像风险资本或系统中的这种股份一样，这与在比特币中的工作相比

643
00:45:16,800 --> 00:45:21,360
就像比特币协议本身一样，这项工作就像发生的事情

644
00:45:21,360 --> 00:45:28,960
了解呃，像你不能做什么工作一样，是的，就像不是这东西

645
00:45:28,960 --> 00:45:35,280
来自系统外部，所以希望这一点清楚地发现这样做是

646
00:45:35,280 --> 00:45:49,200
真的很有用。因此，这是激励问题的第二点。我只是短暂触摸

647
00:45:49,200 --> 00:45:54,480
在第一个点是能量使用。所以，你知道，人们曾经和仍然很担心

648
00:45:54,480 --> 00:45:59,600
这种工作证明的方式现在几乎有这场竞赛能像你一样多的工作

649
00:45:59,600 --> 00:46:04,080
可以进入系统。这对安全系统有好处，因为工作越多，就越难以理解

650
00:46:04,079 --> 00:46:08,639
进行竞争的障碍，并将系统重新加油，以喜欢其他历史，然后在

651
00:46:08,639 --> 00:46:13,599
同时，您只喜欢将能量倾倒到系统中，尤其是您知道

652
00:46:13,599 --> 00:46:17,279
如果您认为比特币有用或有价值，那么从某种意义上来说似乎已经浪费了

653
00:46:17,840 --> 00:46:21,360
所以有这个推动力，仍然是思考你知道的努力

654
00:46:21,360 --> 00:46:25,440
我们可以设计这些系统的更节能的方式，这是很多动机

655
00:46:25,440 --> 00:46:32,559
从移动股份证明，同时也存在激励问题

656
00:46:32,559 --> 00:46:36,079
嗯，围绕工作证明本身，这种事实再次得到了这样的事实

657
00:46:37,039 --> 00:46:41,119
没有办法像您可以从工作中获得的奖励，您可以邀请人们

658
00:46:41,119 --> 00:46:45,599
要做这项工作以喜欢在比特币中添加块，但是没有办法喜欢转身和

659
00:46:45,599 --> 00:46:50,480
如果他们不做您想做的事，就可以惩罚他们或喜欢取消这些奖励，所以您几乎有点

660
00:46:50,480 --> 00:46:54,960
大约有一半的嗯，你知道思考的方式就像胡萝卜一样，粘在那样

661
00:46:54,960 --> 00:46:59,920
一根棍子或遗憾的是，有一个胡萝卜，所以您可以用比特币分发这些胡萝卜

662
00:46:59,920 --> 00:47:06,280
比特币更多。但是，没有什么可说的，好的，如果您做得不好，如果您尝试

663
00:47:06,280 --> 00:47:10,720
积极地重新修改链条或类似的东西，我会喜欢用棍子打你。

664
00:47:11,680 --> 00:47:16,800
并且出于错误，因为您在协议中拥有实际共识类似的资源

665
00:47:16,800 --> 00:47:21,019
本身，它实际上为您提供了更大的灵活性，例如Stick，

666
00:47:21,320 --> 00:47:25,039
正确的？特别是，我们的意思是，您实际上可以针对不良行为分发处罚，

667
00:47:25,039 --> 00:47:29,860
不只是奖励。这会降低攻击表面，通常使系统更安全。

668
00:47:32,900 --> 00:47:40,659
是的，好的。因此，我们将研究以太坊证明。所以在很高的水平上，它看起来很多

669
00:47:40,659 --> 00:47:46,119
更像是这些传统的BFT协议。再一次，我会尝试将一些图表扔给

670
00:47:46,119 --> 00:47:52,179
更清楚。有验证者的概念。因此该系统仍然是无许可的

671
00:47:52,179 --> 00:47:53,699
在任何人都可以加入的范围内

672
00:47:54,179 --> 00:47:55,519
但是他们确实必须放置这个股份，

673
00:47:55,739 --> 00:47:57,199
今天就像32 ETH。

674
00:47:58,079 --> 00:47:59,799
而这将运作的方式

675
00:47:59,799 --> 00:48:02,299
是您本质上运行类似两阶段的订单吗？

676
00:48:02,440 --> 00:48:03,759
就像我在谈论一秒钟前一样。

677
00:48:04,460 --> 00:48:06,219
一旦您拥有BFT多数，

678
00:48:06,219 --> 00:48:08,599
因此，例如，有三分之二的链条已签约

679
00:48:08,599 --> 00:48:10,559
在链的某些独特状态下，

680
00:48:11,019 --> 00:48:13,919
没有办法签字，

681
00:48:14,359 --> 00:48:15,980
在另一个链上有多数签名

682
00:48:15,980 --> 00:48:18,179
没有我们称之为模棱两可的

683
00:48:18,179 --> 00:48:20,259
或者，再次发生冲突。

684
00:48:20,260 --> 00:48:33,840
而且，由于股份协议中存在此资源，因此，如果我们确实观察到其中一种等效性或其中一种，则您知道，错误或冲突，我们实际上可以删除搞砸的演员的股份，可以这么说。

685
00:48:34,000 --> 00:48:34,140
正确的。

686
00:48:34,780 --> 00:48:38,140
因此，您知道，每个动作都基本上签署了。

687
00:48:38,380 --> 00:48:41,520
因此，您实际上可以使协议本身摄入这些消息。

688
00:48:41,820 --> 00:48:46,300
您可以说，嘿，您知道，大多数验证者都说这是链条。

689
00:48:46,640 --> 00:48:49,820
一段时间后，他们想重新将链的另一个状态重新。

690
00:48:50,260 --> 00:48:54,820
但这实际上是冲突。因此，当他们这样做时，您可以说，嘿，这很糟糕。我是

691
00:48:54,820 --> 00:49:00,100
将忽略另一个状态。而且，我将以某种方式惩罚您。这就是什么

692
00:49:00,100 --> 00:49:04,020
我们的意思是，当我们谈论削减时，基本上我们可以开始删除

693
00:49:04,020 --> 00:49:09,700
当我们观察到这些故障之一时，这种股份。因此，最终，您知道，尤其是

694
00:49:09,700 --> 00:49:15,140
这些工作证明的连锁店，资源密集程度较低，更安全。听起来很酷。

695
00:49:15,139 --> 00:49:24,619
是的，我要切换回我的小白板，然后尝试通过一些

696
00:49:24,619 --> 00:49:29,900
证明利益协议的详细信息。这可能是一个问题的好时机，

697
00:49:29,900 --> 00:49:36,460
如果有人有它们。这里有几个问题。

698
00:49:36,460 --> 00:49:44,980
好的。一个问题是32E面额中是否具有重要意义。

699
00:49:44,980 --> 00:49:46,440
赌博？

700
00:49:48,880 --> 00:49:49,360
当然。

701
00:49:49,500 --> 00:49:49,719
是的。

702
00:49:49,900 --> 00:49:50,579
所以有。

703
00:49:51,039 --> 00:49:52,280
然后又回来了

704
00:49:52,280 --> 00:49:53,639
到同一瓶颈

705
00:49:53,639 --> 00:49:54,240
我们在谈论

706
00:49:54,240 --> 00:49:54,840
一秒钟前

707
00:49:54,840 --> 00:49:57,300
在哪里取舍

708
00:49:57,300 --> 00:49:58,880
在多少吞吐量之间

709
00:49:58,880 --> 00:50:00,460
或您的系统多少

710
00:50:00,460 --> 00:50:01,940
可以在给定时间进行处理

711
00:50:01,940 --> 00:50:02,840
以及需要多长时间。

712
00:50:03,539 --> 00:50:04,719
和32 ETH的想法

713
00:50:04,719 --> 00:50:05,760
是惊人的

714
00:50:05,760 --> 00:50:07,240
在这个权衡中的某些地方

715
00:50:07,240 --> 00:50:08,639
之间存在

716
00:50:08,639 --> 00:50:09,639
验证者太多，

717
00:50:10,340 --> 00:50:11,420
意思太多的开销，

718
00:50:11,539 --> 00:50:12,619
这意味着花费太长

719
00:50:12,619 --> 00:50:14,000
真正达成共识。

720
00:50:14,980 --> 00:50:18,079
而不是很少，并且系统不那么安全。

721
00:50:19,260 --> 00:50:23,000
是的，我可能稍后再谈谈，但最终

722
00:50:23,340 --> 00:50:28,340
您知道，即使是最初，我们也在思考更像是千分之一的锁定。

723
00:50:28,740 --> 00:50:31,500
而且，您知道，这可能意味着验证器数量少得多，

724
00:50:31,599 --> 00:50:33,059
但是在协议中，它也将更加安全。

725
00:50:33,920 --> 00:50:37,500
我相信贾斯汀·德雷克（Justin Drake）实际上只是建议使用BLS签名，

726
00:50:37,500 --> 00:50:41,260
这是该加密结构，可让您实际汇总消息。

727
00:50:41,840 --> 00:50:44,179
因此，不必像一百条消息那样处理，而是

728
00:50:44,179 --> 00:50:46,219
您可以将它们汇总成一个。

729
00:50:46,219 --> 00:50:48,279
从相同数量的工作中，

730
00:50:48,279 --> 00:50:50,019
您基本上可以进行一个处理

731
00:50:50,019 --> 00:50:52,119
那将把它设置为一百。

732
00:50:52,119 --> 00:50:54,519
因此，我们实际上可以扩展一个系统。

733
00:50:54,519 --> 00:50:57,940
这是具体的，那是

734
00:50:58,879 --> 00:51:01,059
而不是更少的验证者

735
00:51:01,059 --> 00:51:02,659
对于相同的数据帐户，

736
00:51:02,659 --> 00:51:05,299
实际上，我们可以降低所需的利益。

737
00:51:05,299 --> 00:51:06,899
这就是为什么我们拥有32。

738
00:51:08,519 --> 00:51:09,419
凉爽的。谢谢。

739
00:51:10,619 --> 00:51:12,500
另一个问题。

740
00:51:12,500 --> 00:51:15,820
验证器数量是否有上限

741
00:51:15,820 --> 00:51:16,880
在股份证明？

742
00:51:21,800 --> 00:51:22,679
理论上，不。

743
00:51:22,679 --> 00:51:24,519
但是再次，您会达到实用性

744
00:51:24,519 --> 00:51:26,840
像这些是现实世界中的系统。

745
00:51:26,840 --> 00:51:29,960
因此，我们只有不到一百万个验证者

746
00:51:29,960 --> 00:51:31,920
现在在主网上。

747
00:51:31,920 --> 00:51:34,800
核心开发人员非常关心获得

748
00:51:34,800 --> 00:51:36,420
你知道，即使是200万，对吧？

749
00:51:36,420 --> 00:51:38,559
就像有一种

750
00:51:38,559 --> 00:51:40,139
有很多，许多优化

751
00:51:40,139 --> 00:51:42,199
我们必须投入协议，

752
00:51:42,199 --> 00:51:43,379
特别喜欢实施

753
00:51:43,379 --> 00:51:44,799
甚至达到这个数额。

754
00:51:45,779 --> 00:51:49,639
我们的LHQ测试网已经超过150万

755
00:51:49,639 --> 00:51:52,439
它有效，但我们肯定会

756
00:51:52,439 --> 00:51:55,119
就像这些一样，就像更多的临时测试网一样，

757
00:51:55,119 --> 00:51:57,759
这些像Devnets实际上可以看到我们可以走多高。

758
00:51:57,759 --> 00:51:59,480
基本上，是的，数字，

759
00:52:01,019 --> 00:52:03,259
我认为我们无法舒适地超越这一点。

760
00:52:03,259 --> 00:52:05,839
因此，在最后，如果我们有时间，

761
00:52:05,839 --> 00:52:07,599
我会触摸一些以后的指示

762
00:52:07,599 --> 00:52:09,339
我们今天正在考虑的事情。

763
00:52:09,339 --> 00:52:10,799
其中之一就是很想出

764
00:52:10,800 --> 00:52:13,700
实际如何降低帐户的价值

765
00:52:13,700 --> 00:52:14,539
为此原因。

766
00:52:17,640 --> 00:52:18,860
伟大的。

767
00:52:18,860 --> 00:52:21,060
马里奥，您想遇到的其他问题吗？

768
00:52:22,560 --> 00:52:24,519
我认为现在很好。

769
00:52:29,740 --> 00:52:30,760
好吧，太好了。

770
00:52:32,140 --> 00:52:33,420
让我们来看看。

771
00:52:33,420 --> 00:52:37,260
它的表情符号很小。

772
00:52:37,260 --> 00:52:38,100
让我们来看看。

773
00:52:38,100 --> 00:52:39,860
让我仔细检查。

774
00:52:39,860 --> 00:52:43,360
我认为我们还可以。

775
00:52:43,360 --> 00:52:44,380
大约三分钟。

776
00:52:44,380 --> 00:52:45,220
好的。

777
00:52:46,160 --> 00:52:47,980
让我们在这里看看。

778
00:52:47,980 --> 00:52:48,820
好的。

779
00:52:48,820 --> 00:52:52,360
让我切换回白板。

780
00:53:02,860 --> 00:53:03,700
和。

781
00:53:09,860 --> 00:53:14,740
好的。我们应该对此很好。

782
00:53:14,740 --> 00:53:16,099
所以，好的。

783
00:53:16,099 --> 00:53:19,300
这是我以前在比特币共识周围涂鸦。

784
00:53:19,300 --> 00:53:21,620
所以我们现在要看...

785
00:53:21,620 --> 00:53:24,200
是的，让我获得一个新页面。

786
00:53:26,320 --> 00:53:27,880
我以为我可以做到这一点。

787
00:53:28,800 --> 00:53:30,660
显然我不能。

788
00:53:30,660 --> 00:53:32,079
是的。这很棒。

789
00:53:33,280 --> 00:53:35,160
好的。是的。我们这样做。

790
00:53:35,160 --> 00:53:37,220
所以，好的。

791
00:53:37,219 --> 00:53:41,739
所以，是的。

792
00:53:41,739 --> 00:53:54,099
让我们看一下以太坊。

793
00:53:54,099 --> 00:53:58,459
因此，让我考虑我想从哪里开始。

794
00:53:58,459 --> 00:54:01,619
我想只是想设定舞台。

795
00:54:01,619 --> 00:54:05,619
在以太坊内，我们在协议共识参与者中拥有这些。

796
00:54:05,619 --> 00:54:06,619
验证者。

797
00:54:07,219 --> 00:54:15,579
是的。验证者会做很多事情。这也许有点令人困惑。因为

798
00:54:15,579 --> 00:54:19,699
你没有...这实际上是我认为人们对

799
00:54:19,699 --> 00:54:26,959
通常在以太坊周围。您无需锁定32 ETH即可成为验证器以验证

800
00:54:26,959 --> 00:54:34,579
协议。就像，任何人都可以加入协议。我现在可以运行一个流节点。我不是

801
00:54:34,579 --> 00:54:38,420
协议中的演员，但我仍在运行，我仍在验证我看到的所有块

802
00:54:38,420 --> 00:54:44,099
运行价值提供的共识，我可以正确地达到相同的状态，这是

803
00:54:44,099 --> 00:54:49,699
实际上很重要，因为验证者是诚实的信任，他们受到了这种罚款

804
00:54:49,699 --> 00:54:55,059
就像他们有这个一样，我们有这样的方式在协议中惩罚它们

805
00:54:55,059 --> 00:55:02,099
稍后您可以到达一个地方，即使您知道共识就像是正确的共识

806
00:55:02,099 --> 00:55:06,819
可能是一条无法实施我们同意的链条。就像有一个

807
00:55:06,819 --> 00:55:13,219
他们可以决定说，恶意的多数甚至是验证者集合，嘿，实际共识是

808
00:55:13,219 --> 00:55:19,219
在这个街区，我们向所有验证者打印了一百万个ETH。这将是一个强大的

809
00:55:19,219 --> 00:55:23,619
违反协议。因为再次，我们对以太坊应该做什么有一个概念。有这个

810
00:55:23,619 --> 00:55:30,179
以太资产和EVM上的所有内容。它仍然应该遵守规则。喜欢

811
00:55:30,179 --> 00:55:33,960
就像验证者在这里不应该在这里没有特殊角色

812
00:55:33,960 --> 00:55:34,699
共识函数。

813
00:55:35,319 --> 00:55:38,980
而且我们仍然希望让他们负责并保持检查。

814
00:55:39,139 --> 00:55:41,579
我们这样做的方式就像我们自己运行节点一样。

815
00:55:41,759 --> 00:55:41,980
正确的。

816
00:55:41,980 --> 00:55:47,759
因此，返回比特币一秒钟，您知道，每个人都在运行比特币，即使您是

817
00:55:47,759 --> 00:55:51,819
您知道，没有在链条中添加块，作为矿工，您仍在检查

818
00:55:51,819 --> 00:55:53,980
再次使矿工负责的协议。

819
00:55:54,579 --> 00:55:59,419
在这里，您知道，即使您是

820
00:55:59,420 --> 00:56:06,800
这些共识验证者没有之一。所以希望这很清楚。因此，这是您的工作方式

821
00:56:06,800 --> 00:56:12,579
验证者。今天，如果您想喜欢加入系统，您知道，您喜欢找到32 ETH，

822
00:56:13,500 --> 00:56:20,320
这些天有很多钱。但是你有32 enth。您将其发送到特殊的地方

823
00:56:20,320 --> 00:56:25,740
在EVM中。而且，您知道，我会假设你们通常了解这是如何工作的。

824
00:56:25,739 --> 00:56:31,419
嗯，至少是因为UH昨天很抱歉，对不起上一次谈话

825
00:56:31,419 --> 00:56:41,739
层，但只有嗯，您将32 ETH发送给此存款合同，嗯，有办法可以

826
00:56:41,739 --> 00:56:49,259
实际上，我会把它提出来，让我完成这份合同，所以现在真的是一个

827
00:56:49,260 --> 00:56:55,820
重要的是要理解的是，有一个共识层，CL和执行层。

828
00:56:56,380 --> 00:57:00,700
基本上，现在，协议的两个几乎不同的部分都可以一起使用。

829
00:57:01,500 --> 00:57:04,780
在合并并喜欢以太坊的工作证明之前，这些事情有点像

830
00:57:05,900 --> 00:57:12,860
你知道，他们有点像一个单位。这是因为共识协议

831
00:57:12,860 --> 00:57:16,940
来自工作。与类似的验证证明相比，这相对简单。如您所见

832
00:57:16,940 --> 00:57:24,059
发生了很多事情。因为，您知道复杂性原因，安全原因以及

833
00:57:24,059 --> 00:57:28,800
历史原因，这个新的收购量层是并行开发的。所以

834
00:57:28,800 --> 00:57:35,260
就像我们为何合并的原因，基本上是将这个新的共识层带到

835
00:57:35,260 --> 00:57:42,099
在链条上添加共识并替换工作证明设置。所以让我们看看。是的，

836
00:57:42,099 --> 00:57:42,940
我们去。

837
00:57:42,940 --> 00:57:44,639
因此，有一个共识层。

838
00:57:44,639 --> 00:57:49,239
考虑到这一点的一种方法是

839
00:57:49,239 --> 00:57:50,599
这里有两个不同的连锁店。

840
00:57:50,599 --> 00:57:52,579
所以有共识层

841
00:57:52,579 --> 00:57:54,139
那是建立共识的障碍。

842
00:57:55,179 --> 00:57:58,339
还有这个执行层

843
00:57:58,339 --> 00:58:02,500
从某种意义上说，这也是产生块。

844
00:58:02,500 --> 00:58:06,319
该实际工作方式是此执行有效载荷

845
00:58:06,319 --> 00:58:08,239
在每个共识块内部。

846
00:58:08,239 --> 00:58:09,860
所以它仍然只是一个街区，

847
00:58:09,860 --> 00:58:12,099
但是您可以将其视为拥有这两个层。

848
00:58:12,099 --> 00:58:17,239
在执行层中，这是我们所有的执行状态所生活的地方。

849
00:58:17,239 --> 00:58:18,679
UVM正在运行。

850
00:58:18,679 --> 00:58:21,400
例如，在这里，就像存款合同寿命一样。

851
00:58:21,400 --> 00:58:26,940
因此，您知道，在这个区块中，您喜欢将32 ETH放入存款合同中。

852
00:58:26,940 --> 00:58:31,699
现在有一种方法可以基本上可以读取此执行层。

853
00:58:31,699 --> 00:58:34,279
而且只是看这份存款合同。

854
00:58:34,279 --> 00:58:39,460
因此，这意味着，当一个新验证者放入32 ETH时，CL时

855
00:58:39,460 --> 00:58:43,639
看到这个。然后基本上是进入一个条目，在下一个块中说要添加新的验证器。

856
00:58:45,440 --> 00:58:50,340
好的。因此，其他人可以进入系统。他们也有办法退出。

857
00:58:50,699 --> 00:58:54,659
他们会添加一条共识层消息。假设，我不知道，走吧

858
00:58:54,659 --> 00:59:00,159
未来的许多人。现在，我将开始为统一的东西绘制大块。

859
00:59:00,760 --> 00:59:06,320
但最终，您知道，这个验证者将其放在退出中，可以说

860
00:59:06,320 --> 00:59:07,760
因为他们想停止验证。

861
00:59:08,400 --> 00:59:09,340
出口的处理。

862
00:59:09,960 --> 00:59:12,300
最终，许多街区之后，

863
00:59:12,380 --> 00:59:15,680
您最终会退出其他一些，

864
00:59:15,900 --> 00:59:17,320
我不知道，有些。

865
00:59:17,500 --> 00:59:20,220
因此，他们可以选择执行地址撤回。

866
00:59:21,519 --> 00:59:23,200
但是假设我们选择了，

867
00:59:24,100 --> 00:59:25,660
我只在这里写一些随机的十六进制。

868
00:59:26,580 --> 00:59:28,080
死牛肉咖啡馆总是很有趣。

869
00:59:29,059 --> 00:59:30,360
然后这项工作是如何工作的，

870
00:59:30,720 --> 00:59:32,380
验证器完成验证后，

871
00:59:33,080 --> 00:59:35,780
他们必须满足很多条件

872
00:59:35,780 --> 00:59:39,780
要真正退出系统，但是一旦他们有了思考的方法，您知道是否知道

873
00:59:39,780 --> 00:59:44,980
他们有32-East，也许是一些奖励，所以假设他们喜欢34-撤回

874
00:59:44,980 --> 00:59:50,019
对于此执行层地址，他们可以转身，然后像重新沉积系统一样，您

875
00:59:50,019 --> 00:59:54,180
知道但是他们想这样做，但基本上现在可以从执行中进行这种方式

876
00:59:54,180 --> 00:59:59,140
层和一致的层和后背，您重要地知道是无许可的，就像唯一的

877
00:59:59,139 --> 01:00:08,440
您真正需要加入系统的唯一一件事是现在的股份，现在是32。

878
01:00:08,440 --> 01:00:21,219
我要怎么做，我会继续前进。好吧，所以我现在在系统中像什么一样

879
01:00:21,219 --> 01:00:28,059
我要这样做吗？就像我在共识方面所做的主要事情一样，是建立共识。和

880
01:00:28,059 --> 01:00:29,759
那我该怎么做呢？

881
01:00:29,759 --> 01:00:32,079
它的工作方式是作为验证者

882
01:00:32,079 --> 01:00:34,259
我要认证。

883
01:00:34,259 --> 01:00:36,420
如果您挖掘了这些东西，

884
01:00:36,420 --> 01:00:38,779
您会像到处一样看到这个词，

885
01:00:39,739 --> 01:00:41,099
主要是因为这是核心的事情

886
01:00:41,099 --> 01:00:42,820
验证者正在做。

887
01:00:42,820 --> 01:00:45,340
认证的意思是基本上是在说

888
01:00:46,719 --> 01:00:48,480
只是基于我当地的观点

889
01:00:48,480 --> 01:00:50,380
这是链的状态，对吗？

890
01:00:50,380 --> 01:00:51,400
在某个时候。

891
01:00:51,400 --> 01:00:56,400
链状态...

892
01:00:56,400 --> 01:00:58,260
有一个插槽的概念，我将在一秒钟内进行解释。

893
01:00:58,440 --> 01:01:03,360
但是，可以说，这是插槽S。

894
01:01:05,119 --> 01:01:09,599
您知道，这种工作方式是，每个验证者都在主网上说有一个百万验证器。

895
01:01:09,599 --> 01:01:19,059
这意味着，在这些协议类似的一轮中，每个验证者都会做出一个基本上签署的证明。

896
01:01:19,220 --> 01:01:21,400
他们在链状态下进行了加密签名。

897
01:01:21,400 --> 01:01:27,180
而且，如果只有一条链，或者您知道，那么最终他们应该所有人都应该证明同一链。

898
01:01:27,900 --> 01:01:31,260
您可以在一段时间内获得所有证明。

899
01:01:31,440 --> 01:01:36,599
您基本上可以将它们全部概括，最终在链条的某些叉子上获得了一些损失重量的概念。

900
01:01:36,980 --> 01:01:39,880
所以，是的，我会在一秒钟内将其提出更多。

901
01:01:39,880 --> 01:01:45,500
但是最终，想法是，如果我在这里有区块链，您知道。

902
01:01:45,960 --> 01:01:47,180
所以这是以太坊。

903
01:01:47,900 --> 01:01:50,940
当然，一切都有父链或父块。

904
01:01:50,940 --> 01:01:58,840
那很好。这个想法是，当我去链中建立一个新的块时，其他所有验证者都将在本质上证明这一链条。

905
01:01:58,960 --> 01:02:01,679
因此，我会像许多检查标记一样绘制，因为有很多证明。

906
01:02:02,519 --> 01:02:10,780
特别是，如果这里有同一父母的其他障碍，那将不是链中的叉子。

907
01:02:10,780 --> 01:02:16,460
正确的。因为这些基本上是相对于这个插槽或这段时间的说法。

908
01:02:16,460 --> 01:02:21,380
然后，您知道，下一个块是这个块或一个块。

909
01:02:21,380 --> 01:02:23,220
我们需要知道哪一个，对吗？

910
01:02:23,220 --> 01:02:24,420
这是共识的重点

911
01:02:24,420 --> 01:02:25,860
是，如果我们的共识协议正常工作，

912
01:02:25,860 --> 01:02:28,300
我们只能选择一个，对吗？

913
01:02:28,300 --> 01:02:31,099
因为再次，需要有这个独特的序列。

914
01:02:31,099 --> 01:02:33,920
因此，证明在这里对我们有所帮助

915
01:02:33,920 --> 01:02:36,019
因为我们基本上可以使用证明

916
01:02:36,019 --> 01:02:37,740
作为一种喜欢这些相对链的体重的方式。

917
01:02:37,740 --> 01:02:39,880
因此，假设有四个证明，

918
01:02:39,880 --> 01:02:41,679
这些像四个复选标记。

919
01:02:41,679 --> 01:02:45,480
假设这个区块只有两个证明。

920
01:02:45,480 --> 01:02:47,039
与工作证明非常相似。

921
01:02:47,039 --> 01:02:48,260
我们将使用证明，

922
01:02:48,260 --> 01:02:50,740
但是每种证明的股份，对吗？

923
01:02:50,740 --> 01:02:53,059
又是我在系统中的验证器股份

924
01:02:53,059 --> 01:02:55,340
作为分数，得分。

925
01:02:55,340 --> 01:02:58,980
因此，在这种情况下，我们将有四票与两票。

926
01:02:58,980 --> 01:03:01,460
我们会说这是链的头。

927
01:03:01,460 --> 01:03:03,300
因此，当我们去将下一个块放在链中时，

928
01:03:03,300 --> 01:03:05,740
我们将以这一投票。

929
01:03:05,740 --> 01:03:07,400
我将深入深入一点

930
01:03:07,400 --> 01:03:08,240
一点点。

931
01:03:08,240 --> 01:03:10,599
但最终，这就是想法

932
01:03:10,599 --> 01:03:12,400
这些证明正在做什么。

933
01:03:12,400 --> 01:03:18,380
所以我经常使用这些单词。

934
01:03:18,380 --> 01:03:22,139
因此，让我们在这里介绍一些细节。

935
01:03:22,139 --> 01:03:30,160
因此，这将起作用的方法是该协议实际上具有类似的概念，您知道，什么

936
01:03:30,160 --> 01:03:32,099
我们调用壁时钟时间。

937
01:03:32,099 --> 01:03:35,860
这意味着这实际上就像您在时钟上看到的时间一样。

938
01:03:35,860 --> 01:03:36,860
正确的。

939
01:03:36,860 --> 01:03:39,760
所以，你知道，如果是，那是什么？

940
01:03:39,760 --> 01:03:42,400
像604 UTC或现在一样。

941
01:03:42,400 --> 01:03:44,740
然后，你知道，那就像时间。

942
01:03:45,960 --> 01:03:50,260
我们要做的是我们要选择一些创世纪时间。

943
01:03:51,240 --> 01:03:54,420
因此，我只是说，您知道，在创世纪时间内T0。

944
01:03:54,880 --> 01:03:57,680
这个想法是，这就像创世纪协议启动时一样。

945
01:03:58,660 --> 01:04:03,579
现在喜欢真正构造事物，我们将分开我们的步行时钟时间。

946
01:04:04,160 --> 01:04:05,780
您知道，就像正常的时间感一样。

947
01:04:05,780 --> 01:04:07,220
我们将将其分为插槽。

948
01:04:09,079 --> 01:04:10,079
我会写下来。

949
01:04:10,280 --> 01:04:11,780
这是一个重要的概念。

950
01:04:12,400 --> 01:04:14,860
所以我们有插槽。

951
01:04:14,860 --> 01:04:18,680
插槽通常就像我们想要的任何时间一样。

952
01:04:18,680 --> 01:04:20,539
今天他们是12秒。

953
01:04:20,539 --> 01:04:23,980
也许我们会谈论这意味着什么。

954
01:04:23,980 --> 01:04:27,079
但是想法是，每12秒钟就会有一个新的插槽。

955
01:04:27,079 --> 01:04:28,220
你知道，T1。

956
01:04:29,200 --> 01:04:31,880
好吧，我实际上甚至可以编号这些。

957
01:04:32,900 --> 01:04:35,500
您知道，插槽零，一个插槽。

958
01:04:35,500 --> 01:04:36,860
每12秒一次，对吗？

959
01:04:38,260 --> 01:04:40,539
不管实际发生了什么

960
01:04:40,539 --> 01:04:44,039
因此，这只是跟随世界上的时间。

961
01:04:44,039 --> 01:04:46,900
因此，您总是每12秒就会有一个新的插槽。

962
01:04:48,519 --> 01:04:49,800
好的。

963
01:04:49,800 --> 01:04:52,820
因此，我们现在从这里有这些插槽。

964
01:04:54,980 --> 01:04:56,279
每个插槽中都会发生事情

965
01:04:56,279 --> 01:04:58,659
我将在一秒钟内进行更多说明。

966
01:04:58,659 --> 01:05:01,500
但基本上，想法就是这样，例如

967
01:05:01,500 --> 01:05:03,900
每个插槽都可以有一个块，对吗？

968
01:05:03,900 --> 01:05:05,960
所以我可以在这里有块。

969
01:05:07,219 --> 01:05:10,380
就像你知道，很重要的是，

970
01:05:10,380 --> 01:05:12,220
您知道，有可能

971
01:05:12,220 --> 01:05:14,880
任何应该在两个插槽中提出的验证者，

972
01:05:14,880 --> 01:05:16,880
由于某种原因，他们喜欢错过提议。

973
01:05:16,880 --> 01:05:19,480
因此，这实际上只是错过的。

974
01:05:19,480 --> 01:05:24,160
因此，我只是喜欢这里的一个空块。

975
01:05:24,160 --> 01:05:26,760
下一个验证器将在插槽三中提出。

976
01:05:26,760 --> 01:05:29,680
再一次，你知道，所以这个块将有

977
01:05:29,680 --> 01:05:32,220
下一个父母，我们继续前进。

978
01:05:33,160 --> 01:05:35,500
因此，通常我们有插槽。

979
01:05:36,559 --> 01:05:37,740
您应该考虑的方式是

980
01:05:37,740 --> 01:05:39,200
每个插槽都有一个块。

981
01:05:39,199 --> 01:05:41,799
这就像以太坊的障碍时间。

982
01:05:41,799 --> 01:05:43,439
我们从工作证明中继承了这一点

983
01:05:43,439 --> 01:05:47,319
它就像一个目标，也许说大约14秒。

984
01:05:47,319 --> 01:05:50,299
因此，12秒即可达到的数字。

985
01:05:50,299 --> 01:05:52,000
这个想法就像，

986
01:05:52,000 --> 01:05:54,319
这是我们协议中最小的时间单位

987
01:05:54,319 --> 01:05:57,779
您基本上应该放一个块

988
01:05:57,779 --> 01:06:01,159
每12秒钟进入链条，每个插槽。

989
01:06:01,159 --> 01:06:02,000
好的。

990
01:06:03,339 --> 01:06:07,599
现在，这意味着，作为用户，

991
01:06:07,599 --> 01:06:09,579
让我们去频谱的另一端，

992
01:06:09,759 --> 01:06:10,799
返回执行层。

993
01:06:11,239 --> 01:06:15,380
当我是用户时，如果我在这里进行unistwap交易，

994
01:06:16,319 --> 01:06:18,759
或者说我在这里广播

995
01:06:19,559 --> 01:06:20,880
然后我希望

996
01:06:22,119 --> 01:06:24,940
如果我能保留足够的图纸，

997
01:06:25,460 --> 01:06:28,319
我希望这基本上是一个验证者

998
01:06:28,319 --> 01:06:32,239
可以收集我的交易并将其放入

999
01:06:32,719 --> 01:06:33,719
在这里，我将使用其他颜色。

1000
01:06:34,279 --> 01:06:35,519
这是我以蓝色的unistwap贸易。

1001
01:06:35,920 --> 01:06:37,179
希望他们能收集我的交易

1002
01:06:37,179 --> 01:06:41,899
与许多其他人一样，他们实际上可以将其放入您知道进入插槽的块中

1003
01:06:41,899 --> 01:06:47,099
四个，你知道你是否喜欢使用我不知道MetAmask进行这项UNISWAP交易，您知道

1004
01:06:47,099 --> 01:06:51,099
有一段时间才说它出现在etherscan上，或者您甚至查看本地节点

1005
01:06:51,099 --> 01:06:56,059
甚至更好，但最终有一段时间才真正获得链条交易

1006
01:06:56,059 --> 01:07:00,940
那是因为插槽时间您没有新的块，直到您知道

1007
01:07:00,940 --> 01:07:05,260
0和12秒取决于您何时实际广播此原始交易。

1008
01:07:06,539 --> 01:07:14,860
好的。因此，这是对协议的这种心跳的感觉，以及事情可能如何与您保持一致

1009
01:07:14,860 --> 01:07:19,420
进行交易。我说了执行层。另外，有很多机械

1010
01:07:19,420 --> 01:07:26,220
由这个层组成。特别是...所以这是一件事。这些证明。这个想法，

1011
01:07:26,219 --> 01:07:34,579
同样，就像每个插槽一样，让我回到另一种颜色，所以对于每个插槽，

1012
01:07:34,579 --> 01:07:38,279
将有一些证明是正确的，所以就像我不知道那样的证明

1013
01:07:38,279 --> 01:07:43,639
您从验证器中知道，一两个三可以进入这个障碍，但也可以证明四个

1014
01:07:43,639 --> 01:07:49,399
五个六，总的来说，您将拥有每个街区的许多证明，然后单独证明

1015
01:07:49,399 --> 01:07:53,579
您将为下一个块还有更多的权利，所以我不知道

1016
01:07:53,579 --> 01:07:55,239
因此，这要容易一些。

1017
01:07:55,239 --> 01:07:56,179
因此，这要容易一些。

1018
01:07:56,179 --> 01:07:57,139
因此，这要容易一些。

1019
01:07:57,139 --> 01:07:58,179
因此，这要容易一些。

1020
01:07:58,179 --> 01:07:59,179
因此，这要容易一些。

1021
01:07:59,179 --> 01:08:00,279
因此，这要容易一些。

1022
01:08:00,279 --> 01:08:01,440
因此，这要容易一些。

1023
01:08:01,440 --> 01:08:02,880
因此，这要容易一些。

1024
01:08:02,880 --> 01:08:05,340
因此，这要容易一些。

1025
01:08:05,340 --> 01:08:06,940
因此，这要容易一些。

1026
01:08:06,940 --> 01:08:08,420
因此，这要容易一些。

1027
01:08:08,420 --> 01:08:10,860
因此，这要容易一些。

1028
01:08:10,860 --> 01:08:12,299
因此，这要容易一些。

1029
01:08:12,299 --> 01:08:15,139
因此，这要容易一些。

1030
01:08:15,139 --> 01:08:18,699
因此，这要容易一些。

1031
01:08:18,699 --> 01:08:20,939
因此，这要容易一些。

1032
01:08:20,939 --> 01:08:22,600
因此，这要容易一些。

1033
01:08:22,600 --> 01:08:23,460
因此，这要容易一些。

1034
01:08:23,579 --> 01:08:27,720
它的真正工作方式是，在这个插槽中，

1035
01:08:27,720 --> 01:08:30,000
他们实际上会说他们先前的老虎机，

1036
01:08:30,000 --> 01:08:32,640
在这种情况下，这甚至将带您回到这个块。

1037
01:08:32,640 --> 01:08:34,640
但最终，您将看着

1038
01:08:34,640 --> 01:08:38,899
链条的最新状态，他们将签约。

1039
01:08:38,899 --> 01:08:42,460
嘿，我认为当前的街区就是这个。

1040
01:08:42,460 --> 01:08:45,680
那将被包括在内。

1041
01:08:46,479 --> 01:08:49,059
我在这里有点不同步。

1042
01:08:49,059 --> 01:08:52,699
对此很抱歉。让我简化一点。

1043
01:08:53,579 --> 01:08:55,859
所以让我实际上就是这样做。

1044
01:08:55,939 --> 01:08:57,880
因此，现在我们将真正放大一个插槽。

1045
01:09:00,079 --> 01:09:02,479
假设我们将以三个插槽为例。

1046
01:09:03,300 --> 01:09:04,579
这个方法是，

1047
01:09:04,840 --> 01:09:07,699
所以这是一个类似的，你等于零，

1048
01:09:08,420 --> 01:09:10,059
t等于12。

1049
01:09:10,239 --> 01:09:11,800
再说一次，这就像插槽三。

1050
01:09:12,420 --> 01:09:14,680
在这里就像插槽四。

1051
01:09:14,840 --> 01:09:16,319
因此，我们现在只是在看一个插槽。

1052
01:09:17,140 --> 01:09:18,399
这是可行的方式

1053
01:09:18,399 --> 01:09:20,939
插槽三的验证器

1054
01:09:20,939 --> 01:09:26,619
您知道，他们将在这里制作这个障碍，他们应该在开始之后释放

1055
01:09:26,619 --> 01:09:31,039
投币口。这将从上一个插槽中得到证明。假设我的所有交易，

1056
01:09:31,279 --> 01:09:35,899
就像我的工会交易交易和其他任何需要进入下一个障碍的东西一样

1057
01:09:35,899 --> 01:09:43,719
要去这里。然后，这种工作的工作方式等于四，只是为了分割这个插槽

1058
01:09:43,720 --> 01:09:53,260
达到三分之一，是的，三分之一。任何分配在插槽中测试的验证者，

1059
01:09:53,600 --> 01:09:58,360
他们会说，嘿，你知道，我要认证。假设街区，

1060
01:09:58,560 --> 01:10:06,480
我们在这里称之为的块根就像ABD。他们要说我的证明。所以让我们

1061
01:10:06,619 --> 01:10:10,260
我们再次查看验证者一，两个，三个。他们的认证会说，是的，

1062
01:10:10,260 --> 01:10:18,180
我的链条状态是ABD，无论其余的哈希是什么。他们将播放他们的

1063
01:10:18,180 --> 01:10:23,300
证明。有不同的演员基本上有接下来的四秒钟来汇总

1064
01:10:23,300 --> 01:10:31,300
它们成一个较小的包装，可以沿链条上进行。这个想法是最终这种证明

1065
01:10:34,100 --> 01:10:37,619
最终进入下一个插槽。所以现在我们有了下一个块

1066
01:10:37,619 --> 01:10:40,479
再次像我们的UNISWAP交易一样

1067
01:10:40,479 --> 01:10:42,599
或任何新的执行状态，

1068
01:10:42,599 --> 01:10:45,199
但是，它也应包括此证明。

1069
01:10:46,599 --> 01:10:48,680
然后，您只需从网络中获取块即可。

1070
01:10:48,680 --> 01:10:51,399
然后，您可以计算出这些证明

1071
01:10:51,399 --> 01:10:53,019
他们可以告诉你类似的事情

1072
01:10:53,019 --> 01:10:55,260
是的，大多数击球手的想法

1073
01:10:55,260 --> 01:10:57,619
这实际上是插槽三的块。

1074
01:10:58,880 --> 01:10:59,720
好的。

1075
01:11:01,079 --> 01:11:03,039
因此，这是在插槽级别。

1076
01:11:03,039 --> 01:11:04,979
还有另一个概念

1077
01:11:04,979 --> 01:11:06,059
那

1078
01:11:07,619 --> 01:11:09,619
好的。

1079
01:11:09,619 --> 01:11:12,760
我们有点时间。

1080
01:11:12,760 --> 01:11:14,760
但这是我的问题。

1081
01:11:14,760 --> 01:11:19,380
因此，还有另一个概念是一个时代。

1082
01:11:19,380 --> 01:11:24,340
因此，考虑时期的方式是它们只是一些插槽。

1083
01:11:24,340 --> 01:11:30,180
例如，在主网上，每个时期有32个插槽。

1084
01:11:30,180 --> 01:11:33,659
我们这样做的原因是我们基本上想像...

1085
01:11:33,659 --> 01:11:37,279
有很多共识处理相对较重。

1086
01:11:37,279 --> 01:11:38,619
因此，我们想批处理它。

1087
01:11:38,619 --> 01:11:41,859
因此，它只会发生每隔一段时间而不是每个插槽。

1088
01:11:41,859 --> 01:11:44,479
所以我对此的看法是，

1089
01:11:44,479 --> 01:11:46,119
这是我们的32个插槽。

1090
01:11:49,159 --> 01:11:51,979
我没有画32，但是你明白了。

1091
01:11:51,979 --> 01:11:54,920
这就像，我们将从创世纪开始。

1092
01:11:54,920 --> 01:11:58,179
因此，零，一个，两个，三个，点，点，点，点，点，点。

1093
01:11:58,179 --> 01:12:02,559
这就是插槽30和31。

1094
01:12:02,559 --> 01:12:03,899
因此，这些是零索引。

1095
01:12:03,899 --> 01:12:06,979
您是否喜欢32个插槽？

1096
01:12:06,979 --> 01:12:11,439
自从我们从创世纪开始以来，这将是时代

1097
01:12:11,439 --> 01:12:12,919
时期零。

1098
01:12:12,919 --> 01:12:14,799
您应该考虑的方式再次是

1099
01:12:14,799 --> 01:12:17,319
它一直基于时间。

1100
01:12:17,319 --> 01:12:21,279
您现在像一个时代一样，这里有更多的老虎机。

1101
01:12:21,279 --> 01:12:25,099
因此，现在是插槽32一直到下一个倍数。

1102
01:12:25,099 --> 01:12:28,500
因此，您最终会像插槽63一样。

1103
01:12:28,500 --> 01:12:31,539
然后，您去时代两个插槽64。

1104
01:12:31,539 --> 01:12:33,119
希望这很清楚。

1105
01:12:33,119 --> 01:12:36,459
这个想法是你要做的一件事，例如

1106
01:12:36,460 --> 01:12:40,199
就像有人试图将X输入击球套装一样，

1107
01:12:40,199 --> 01:12:41,840
你要在这个时代的边界上做到这一点

1108
01:12:41,840 --> 01:12:43,840
在哪里进行所有这些较重的处理。

1109
01:12:46,699 --> 01:12:48,039
我不知道那是什么。

1110
01:12:48,880 --> 01:12:51,159
哦，我只是删除了一些东西。

1111
01:12:51,159 --> 01:12:52,000
好的。

1112
01:12:52,920 --> 01:12:53,739
正确的。

1113
01:12:53,739 --> 01:12:55,020
所以你要做这个时代的处理

1114
01:12:55,020 --> 01:12:57,600
这个想法就像是...

1115
01:12:57,600 --> 01:12:59,020
对不起。

1116
01:12:59,020 --> 01:13:00,159
这里有街区，对吗？

1117
01:13:00,159 --> 01:13:03,699
假设，理想情况下，您有32个街区。

1118
01:13:03,699 --> 01:13:05,100
伟大的。

1119
01:13:05,100 --> 01:13:20,079
当您去这里时，您不仅会喜欢正常的处理，而且还会说诸如，好吧，如果有人被砍伐或有任何惩罚或奖励，我们基本上将像分发这些并在此边界处更新一致的状态。

1120
01:13:24,320 --> 01:13:24,800
好的。

1121
01:13:25,560 --> 01:13:26,840
所以我们有插槽。

1122
01:13:27,060 --> 01:13:28,140
我们有时代。

1123
01:13:30,220 --> 01:13:31,300
是的。

1124
01:13:31,539 --> 01:13:31,680
好的。

1125
01:13:31,680 --> 01:13:39,600
因此，就像一个重要的事情是……因此，我们拥有整个验证器在此处设置。

1126
01:13:41,760 --> 01:13:47,680
所以，我不知道。验证器0。验证器1。你知道。例如，在主要网上，

1127
01:13:47,680 --> 01:13:55,920
你知道，这样的事情。您知道，几乎是百万验证者。这个想法是

1128
01:13:55,920 --> 01:14:01,840
但是他们被随机地将每个时期都纳入这些委员会。那会是什么样

1129
01:14:01,840 --> 01:14:09,520
是对于给定的时期，所以这是我们在时代的老虎机。你知道，例如，

1130
01:14:09,619 --> 01:14:15,680
有一百个验证者。好吧，是的，也许我会尽力使它更轻松一些。

1131
01:14:15,819 --> 01:14:22,260
所以有32个插槽。假设有320个验证器。因此，如果有32个插槽，

1132
01:14:22,900 --> 01:14:29,380
这是每个插槽的10个验证者，这个想法就像每个验证器一样

1133
01:14:29,380 --> 01:14:35,300
从现在的320个整个集合中，您将随机洗牌，然后放10个验证器

1134
01:14:36,900 --> 01:14:39,539
这些看起来像块，让我做些不同的事情

1135
01:14:40,980 --> 01:14:48,260
你知道，一个两个三个验证者四五个六六个六个六个想法是

1136
01:14:48,260 --> 01:14:56,460
像10个验证者一样。这是一个非常重要的不变的是验证者

1137
01:14:56,460 --> 01:15:06,020
每个时期有一个证明。他们执行的确切插槽是由协议确定的。

1138
01:15:06,920 --> 01:15:13,659
有一个randow的概念，这就是我要把一个块的方法

1139
01:15:13,659 --> 01:15:18,539
在链中。也许我会回到这里。是的。因此，当我将块放入链中时，

1140
01:15:19,019 --> 01:15:24,239
我基本上放了一些局部随机性和每个块。所以我们会说，你知道，你知道

1141
01:15:24,279 --> 01:15:31,979
R0，R1，R2，您基本上就像以特定方式将它们混合在一起。然后这个想法是

1142
01:15:31,979 --> 01:15:39,439
有一个随机性的概念，然后您可以用来做改组来决定

1143
01:15:39,439 --> 01:15:41,479
并为下一个时代说

1144
01:15:41,479 --> 01:15:44,259
这个验证者的改组应该是什么。

1145
01:15:45,219 --> 01:15:47,799
然后每个时期有效做出一个证明。

1146
01:15:49,000 --> 01:15:51,079
同样，分配给一些特定的插槽。

1147
01:15:51,079 --> 01:15:53,960
所以现在有222、196。

1148
01:15:57,439 --> 01:15:58,279
是的。

1149
01:15:58,279 --> 01:16:01,339
因此，同样，您最终将所有这些都放在一个独特的插槽中。

1150
01:16:01,339 --> 01:16:03,159
然后这告诉你...

1151
01:16:05,679 --> 01:16:06,799
我...

1152
01:16:09,439 --> 01:16:12,039
因此，基本上它告诉您。

1153
01:16:16,139 --> 01:16:17,299
我们现在正在寻找老虎机。

1154
01:16:21,199 --> 01:16:23,960
好吧，如果只有一个，这将很清楚。

1155
01:16:23,960 --> 01:16:26,719
因此，基本上，现在，您知道，我们很喜欢

1156
01:16:26,719 --> 01:16:30,159
这就像插槽23。

1157
01:16:30,159 --> 01:16:32,719
您知道，这在插槽中等于零。

1158
01:16:32,719 --> 01:16:34,559
t等于12。

1159
01:16:34,559 --> 01:16:35,939
根据我对链的看法

1160
01:16:35,939 --> 01:16:38,460
我有很多不同类型的老虎机。

1161
01:16:38,460 --> 01:16:43,340
链的视图我将要进行一些任务，假设我们的幸运验证者123是

1162
01:16:43,340 --> 01:16:49,100
在插槽23中分配给测试时，他们看到了这个块，然后做出证明

1163
01:16:50,779 --> 01:16:57,340
然后这最终将进入下一个障碍，所以

1164
01:16:59,500 --> 01:17:04,140
好吧，让我现在触摸共识，这实际上可能会让我们到达

1165
01:17:04,780 --> 01:17:11,020
好吧，我在我们继续前进之前就收到了几个问题，好吧，嗯，很棒的问题是

1166
01:17:11,020 --> 01:17:18,460
您能否在时间概念上详细说明它的危险证明，例如为什么他们如何如何

1167
01:17:18,460 --> 01:17:29,180
拆分呃，为什么每个时期的32个插槽等，所以12秒就像是任意的

1168
01:17:29,180 --> 01:17:34,539
它的灵感来自于工作证明的时间，这平均约有14秒，所以我们

1169
01:17:34,539 --> 01:17:40,700
只是去了一个类似的时间，这个数字是一种任意的

1170
01:17:40,700 --> 01:17:46,380
如果较小或更长的时间，则基本上很难像遵循链

1171
01:17:46,380 --> 01:17:50,700
首先思考的方法或更简单的方法是它给您的插槽的时间越长

1172
01:17:50,700 --> 01:17:54,780
更多的时间来通过块通过证明了哪些证明

1173
01:17:54,780 --> 01:17:58,700
进入下一个街区，做所有这一切，所以现在又有一个权衡

1174
01:17:59,180 --> 01:18:03,060
协议可以进步的速度和插槽时间。

1175
01:18:04,000 --> 01:18:05,680
我们今天拥有12秒。

1176
01:18:07,260 --> 01:18:10,840
有人主张缩短插槽时间，因为这意味着，

1177
01:18:10,940 --> 01:18:14,159
例如，这样的执行状态会更频繁地发展。

1178
01:18:15,320 --> 01:18:18,760
人们还谈论延长插槽时间，因为还有其他

1179
01:18:18,760 --> 01:18:22,360
一致的升级我们正在考虑实际上更有意义的地方

1180
01:18:22,360 --> 01:18:26,539
在每个时期都有更长的时间来做更多事情。

1181
01:18:26,539 --> 01:18:30,439
另一个问题是什么？

1182
01:18:30,439 --> 01:18:37,399
您能谈谈随机性，品牌拨号以及验证者如何

1183
01:18:37,399 --> 01:18:39,260
随机洗牌吗？

1184
01:18:39,260 --> 01:18:41,060
正确的。

1185
01:18:41,060 --> 01:18:42,479
好的。

1186
01:18:42,479 --> 01:18:43,819
是的。

1187
01:18:43,819 --> 01:18:44,819
所以...

1188
01:18:44,819 --> 01:18:45,819
好的。

1189
01:18:45,819 --> 01:18:46,819
是的。

1190
01:18:46,819 --> 01:18:47,819
我们仍然可以看到这个。

1191
01:18:47,819 --> 01:18:50,659
所以这里的想法是...

1192
01:18:50,659 --> 01:18:51,659
正确的。

1193
01:18:51,659 --> 01:18:52,979
所以有一个...

1194
01:18:52,979 --> 01:18:55,220
我的意思是，我想这是另一个重要的不变。

1195
01:18:55,220 --> 01:19:02,659
每个插槽一个建议者。就像我所暗示的那样，提议者可以

1196
01:19:02,659 --> 01:19:07,940
就像错过了他们的插槽一样，在这种情况下，该插槽没有一个障碍。但一般来说，

1197
01:19:07,940 --> 01:19:14,159
特别是在主要网络上，人们激励人们参加。因此，他们做得很好。

1198
01:19:14,159 --> 01:19:22,119
因此，您可以想象，就像每个插槽最终都带有一个块一样。好的。和路

1199
01:19:22,119 --> 01:19:26,359
因此，考虑到这一点的一种方法是，当我去提议时，

1200
01:19:26,359 --> 01:19:29,979
假设我是一个验证者，我不知道，27。

1201
01:19:30,840 --> 01:19:35,119
当我提出建议时，我也将包括

1202
01:19:35,119 --> 01:19:38,239
您知道的一些随机性，有一些细节

1203
01:19:38,239 --> 01:19:39,079
我们可以去看看。

1204
01:19:39,079 --> 01:19:40,340
这是一个规格。

1205
01:19:40,340 --> 01:19:42,680
从本质上讲，思考的方式是我要采取的

1206
01:19:42,680 --> 01:19:44,159
像我的插槽号。

1207
01:19:44,159 --> 01:19:47,720
所以说这就像我不知道，插槽45,000。

1208
01:19:47,720 --> 01:19:50,720
45,000。

1209
01:19:50,720 --> 01:19:53,500
我基本上会喜欢这个号码，

1210
01:19:53,500 --> 01:19:55,060
也许还有其他一些事情。

1211
01:19:55,060 --> 01:19:57,900
最终我会变得像种子价值

1212
01:19:57,900 --> 01:19:59,140
我要签约。

1213
01:20:00,060 --> 01:20:02,280
就像我的验证器私钥一样。

1214
01:20:02,280 --> 01:20:04,320
这项工作的方式是签名

1215
01:20:04,320 --> 01:20:07,659
最终变成了伪随机价值。

1216
01:20:07,659 --> 01:20:09,560
所以我会像随机的那样。

1217
01:20:11,180 --> 01:20:13,000
我们将其称为R。

1218
01:20:13,000 --> 01:20:14,940
然后，我的意思是，我的意思是

1219
01:20:14,940 --> 01:20:16,940
这些就像级别的详细信息一样，

1220
01:20:16,939 --> 01:20:19,539
但是，您将这种随机性（这是一个签名）。

1221
01:20:20,879 --> 01:20:23,960
您将要达到32个字节。

1222
01:20:23,960 --> 01:20:26,419
再次，应该是随机的。

1223
01:20:27,599 --> 01:20:29,199
在一致的状态本身内。

1224
01:20:29,199 --> 01:20:30,719
因此，对于每个块，对吗？

1225
01:20:30,719 --> 01:20:34,219
我们将在这个日期中混合每个新的Randall。

1226
01:20:34,219 --> 01:20:36,839
这意味着会有一些

1227
01:20:36,839 --> 01:20:40,399
从过去发生的当前价值。

1228
01:20:40,399 --> 01:20:41,719
然后对于每个块，

1229
01:20:41,719 --> 01:20:44,479
我只是竭尽所能，

1230
01:20:44,479 --> 01:20:47,179
我将其混合到已经存在的地方。

1231
01:20:47,779 --> 01:20:50,659
因此，考虑到这一点的方法是，基本上有

1232
01:20:51,179 --> 01:20:54,259
因此，对于每个块，右侧，块都会产生一些影响。

1233
01:20:54,459 --> 01:20:55,899
没有共识状态。

1234
01:20:56,239 --> 01:21:02,599
我会说S，是的，S45K，S45,001。

1235
01:21:03,199 --> 01:21:04,279
希望你明白这个主意。

1236
01:21:04,739 --> 01:21:07,139
但是基本上每个块都将建立一个新状态。

1237
01:21:07,379 --> 01:21:09,539
然后的想法是，在这个信标状态中，

1238
01:21:10,439 --> 01:21:12,399
是的，我不确定这会多么糟糕，

1239
01:21:12,459 --> 01:21:14,179
但是试想一下这里有一些状态

1240
01:21:14,180 --> 01:21:22,740
作为三角形。将会有一些Randau的价值。我们将其称为r徒。当我申请时，

1241
01:21:23,460 --> 01:21:32,659
现在说我的障碍，假设我要申请，您知道，封锁

1242
01:21:34,579 --> 01:21:41,140
45,001。我称之为R Prime的提议者将有一些独特的Randau。

1243
01:21:41,140 --> 01:21:46,100
我们将结合这两个并恢复一些新值R1。

1244
01:21:46,820 --> 01:21:48,020
每个块都会发生这种情况。

1245
01:21:48,740 --> 01:21:52,500
然后的想法是，您应该有一个随机值

1246
01:21:52,500 --> 01:21:53,940
提案随着他们的发展而更新。

1247
01:21:54,820 --> 01:21:58,420
然后，您会得到这种改组的概念。

1248
01:22:00,020 --> 01:22:05,539
因此，现在的工作方式就像是有一个未来的想法，只是为了人们知道

1249
01:22:05,539 --> 01:22:08,500
他们有一些时间准备做出证明

1250
01:22:08,500 --> 01:22:09,380
或提出他们的障碍。

1251
01:22:09,380 --> 01:22:14,359
但是，考虑这一点的方法就像是说这就像一个时期两三个

1252
01:22:14,359 --> 01:22:22,840
时期一个两个四个时期一两个五个五个五个五，所以基本上，这种工作的方式是在这个时代的末尾

1253
01:22:22,840 --> 01:22:27,920
因此，就像您知道的最后一个街区一样，这个时代有很多街区很棒

1254
01:22:27,920 --> 01:22:34,619
您将最终得到一些您知道独特的随机价值，我们将其称为R123

1255
01:22:34,619 --> 01:22:43,359
然后要做的就是基本上告诉你...好吧。所以这里有点倒立，因为是否

1256
01:22:43,359 --> 01:22:50,039
Lookahead起作用。相反，我们要说我们要进入这个时代。这个工作的方式是

1257
01:22:50,039 --> 01:22:56,319
我们将基本上回顾一下我们在这里做出的随机性。那将要

1258
01:22:56,319 --> 01:23:03,680
基本上，告诉我们接下来的两个时代的改组。希望这很清楚。这

1259
01:23:03,680 --> 01:23:10,960
头部有些混乱，但基本上是想法是你在某些时候知道的

1260
01:23:10,960 --> 01:23:16,400
及时说，就像这里一样，我们要查看信标状态，我想我开始绘画

1261
01:23:16,400 --> 01:23:21,840
三角形我们将要查看信标状态，将再次有一些随机的价值

1262
01:23:21,840 --> 01:23:28,079
只需称其为r，然后这个想法就像是这样的输入，可以说我们运行一些混乱的代码

1263
01:23:28,079 --> 01:23:35,800
函数像整个验证器集一样，将需要R，例如

1264
01:23:35,800 --> 01:23:42,340
有证明，例如委员会规模，或者它将带走所有的东西

1265
01:23:42,340 --> 01:23:49,300
验证器，所以您在主网上再次知道这就像一百万，它会说好吧

1266
01:23:49,300 --> 01:23:54,359
实际上，想将它们分解为每个时代的委员会，所以你知道让我们知道

1267
01:23:54,359 --> 01:23:56,920
假设这是什么数字。

1268
01:23:58,019 --> 01:23:59,359
那我们就会洗牌。

1269
01:23:59,359 --> 01:24:01,539
所以，好的，我们开始的方式是整个列表，对吗？

1270
01:24:01,539 --> 01:24:04,299
因此，仅计算验证器，验证器零，

1271
01:24:04,299 --> 01:24:07,819
一，两个，三，你知道，一直说，

1272
01:24:07,819 --> 01:24:11,939
您知道，九，九，六个，任何东西，不到一百万。

1273
01:24:13,299 --> 01:24:16,399
然后，我们将在这里使用这种随机性来洗牌。

1274
01:24:16,399 --> 01:24:18,599
那就意味着我们最终会

1275
01:24:18,599 --> 01:24:19,799
像洗牌一样。

1276
01:24:19,800 --> 01:24:26,940
因此，说，您知道，验证者0逐渐转到我不知道的，在这里说。

1277
01:24:26,940 --> 01:24:29,060
因此，您最终会在此处获得验证器0。

1278
01:24:30,140 --> 01:24:34,820
现在，这就是45、9、5、6。

1279
01:24:35,779 --> 01:24:36,680
验证者12。

1280
01:24:37,079 --> 01:24:37,659
验证器0。

1281
01:24:37,920 --> 01:24:38,659
验证器3。

1282
01:24:39,020 --> 01:24:40,739
他们的想法是被改组了，对吗？

1283
01:24:40,760 --> 01:24:41,680
以某种随机的方式。

1284
01:24:42,699 --> 01:24:47,900
然后，您知道，如果我们想在认证委员会中分解它们，那么您基本上就是这样，就像批处理，对吗？

1285
01:24:47,899 --> 01:24:57,439
然后，这告诉您，您知道，在下一个电子谈话中，您最终会像，好吧，我是第一个委员会，例如第一个委员会。

1286
01:24:57,779 --> 01:25:00,539
然后，我最终进入了下一个委员会，即下一个委员会。

1287
01:25:00,960 --> 01:25:01,639
这样的东西。

1288
01:25:06,439 --> 01:25:07,299
希望这很有帮助。

1289
01:25:07,859 --> 01:25:13,659
我确实想，我们只有几分钟，所以我想喜欢更多地解释有关共识及其工作原理的更多信息。

1290
01:25:14,759 --> 01:25:17,259
是的，不幸的是，实际上有很多话要说。

1291
01:25:17,899 --> 01:25:22,239
所以，是的，我们今天不一定要涉足一切。

1292
01:25:22,779 --> 01:25:24,799
但希望我已经激发了您的兴趣。

1293
01:25:25,239 --> 01:25:28,519
而且，是的，您可以挖掘更多。

1294
01:25:29,659 --> 01:25:36,619
因此，让我们再次放大以太坊链的概念。

1295
01:25:36,619 --> 01:25:40,500
因此，在共识上结束图片。

1296
01:25:43,019 --> 01:25:43,500
正确的。

1297
01:25:43,759 --> 01:25:45,619
所以我们有...

1298
01:25:45,619 --> 01:25:48,779
因此，让我们考虑一下时代。

1299
01:25:51,239 --> 01:25:54,619
因此，就像时代一样，我不知道，一个，两个，三，

1300
01:25:54,619 --> 01:25:57,300
一，二，四，一个，二，五，

1301
01:25:57,300 --> 01:25:59,239
一个，两个，六个，也许是这样。

1302
01:25:59,239 --> 01:26:00,819
我们将从一些障碍开始。

1303
01:26:00,819 --> 01:26:02,439
你知道，这甚至可能就像业务障碍

1304
01:26:02,439 --> 01:26:03,559
或其他任何东西。

1305
01:26:04,699 --> 01:26:05,539
好的。

1306
01:26:05,539 --> 01:26:07,800
这就是它开始变得令人困惑的地方。

1307
01:26:07,800 --> 01:26:09,340
所以现在这里有街区

1308
01:26:09,340 --> 01:26:10,739
因为这是一个时代。

1309
01:26:12,180 --> 01:26:13,680
这些现在是老虎机，对吗？

1310
01:26:13,680 --> 01:26:17,960
再一次，如果这令人困惑，对不起，

1311
01:26:17,960 --> 01:26:20,300
但基本上就像

1312
01:26:20,300 --> 01:26:21,880
每12秒都有一个新插槽。

1313
01:26:21,880 --> 01:26:22,720
就是这样。

1314
01:26:22,720 --> 01:26:24,100
这就是它的工作方式。

1315
01:26:25,539 --> 01:26:28,520
也许您都不希望任何一种障碍。

1316
01:26:29,820 --> 01:26:34,820
您有这些块，这些块现在有证明。

1317
01:26:36,000 --> 01:26:40,579
是的，这可能有点局促。

1318
01:26:40,579 --> 01:26:43,159
但基本上的想法是，你知道，

1319
01:26:43,680 --> 01:26:44,860
这里有更多块。

1320
01:26:45,659 --> 01:26:50,240
然后，他们将基本上证明链的状态。

1321
01:26:50,600 --> 01:26:52,320
而且我想我现在就切换到现在检查标记。

1322
01:26:53,960 --> 01:26:55,400
而且，您知道，您可能有很多。

1323
01:26:56,720 --> 01:27:05,480
但是最终，现在思考这个问题的方法是关于共识和我们关心的最终概念的方法。

1324
01:27:05,600 --> 01:27:09,659
就像我们试图通过股份共识证明的全部事情一样，这就是达到这种结局的概念。

1325
01:27:10,300 --> 01:27:13,159
当某事最终时，这基本上将永远不会改变。

1326
01:27:13,680 --> 01:27:16,760
我将更多地解释这意味着什么。

1327
01:27:17,460 --> 01:27:25,640
考虑一下的方法是，我们现在将以这种方式来工作，我们称它们为时代边界块。

1328
01:27:25,640 --> 01:27:33,360
但是，思考它的方式就像时代中的第一个街区一样，就像每个时代的代表一样。

1329
01:27:34,520 --> 01:27:43,039
而且，如果您考虑一下，因为一切都通过父母哈希（Hash）链接到密码，就像我以某种方式喜欢验证者如何投票一样。

1330
01:27:43,680 --> 01:27:47,260
也许这是一个更好的例子。

1331
01:27:47,260 --> 01:27:54,659
如果我有它们，即使在这里证明了这些证明，它们也暗中证明了这一点

1332
01:27:54,659 --> 01:27:57,880
是这个时代开始的街区。

1333
01:27:57,880 --> 01:28:00,960
再次，因为所有这些都有父母的哈希。

1334
01:28:00,960 --> 01:28:01,960
是的，对不起。

1335
01:28:01,960 --> 01:28:03,900
有很多箭头。

1336
01:28:03,900 --> 01:28:07,940
但是我要提出的要点是您现在可以放大。

1337
01:28:07,940 --> 01:28:10,400
您现在可以说，好。

1338
01:28:10,399 --> 01:28:18,319
这个时代，有这个块，这个块和这个块，这个块。好的。和直接

1339
01:28:18,319 --> 01:28:23,439
父母哈希是从块到块。但是思考的方法是您可以

1340
01:28:23,439 --> 01:28:33,279
在每个时期之间进行。这将起作用的方式是，基于我们得到的证明

1341
01:28:33,279 --> 01:28:38,879
在给定的时期，他们将具有这种理由的概念。让我实际上只是

1342
01:28:38,880 --> 01:28:39,720
所以让我写下来。

1343
01:28:39,720 --> 01:28:42,340
这是一个关键概念。

1344
01:28:45,579 --> 01:28:47,239
理由是又是什么，

1345
01:28:47,239 --> 01:28:49,940
这个BFT概念，您知道，

1346
01:28:49,940 --> 01:28:54,680
至少三分之二的验证者证明了

1347
01:28:55,920 --> 01:28:57,720
到给定的块。

1348
01:28:58,960 --> 01:29:01,319
因此，您知道，您可以数数所有证明

1349
01:29:01,319 --> 01:29:03,279
在这里，他们最终会

1350
01:29:06,900 --> 01:29:08,300
如果您达到这个阈值，

1351
01:29:08,300 --> 01:29:11,619
他们将证明这一障碍是合理的。

1352
01:29:12,579 --> 01:29:14,420
所以你有理由。

1353
01:29:14,420 --> 01:29:17,079
那时的这种样子

1354
01:29:17,079 --> 01:29:19,380
是你最终有一棵块树

1355
01:29:19,380 --> 01:29:21,720
这种看起来像这张照片

1356
01:29:21,720 --> 01:29:23,840
然后您喜欢...

1357
01:29:23,840 --> 01:29:25,640
是的，也许我应该使用...

1358
01:29:25,640 --> 01:29:27,380
我想我会使用蓝色或其他东西。

1359
01:29:27,380 --> 01:29:28,800
那会很好。

1360
01:29:28,800 --> 01:29:32,699
您最终可以尊重

1361
01:29:32,699 --> 01:29:35,159
到一个时代，以前的时代。

1362
01:29:35,159 --> 01:29:36,360
因此，您会得到这些东西。

1363
01:29:36,360 --> 01:29:37,659
现在，当这些是蓝色箭头时

1364
01:29:37,659 --> 01:29:39,399
我想交流的是，

1365
01:29:39,399 --> 01:29:43,420
您拥有至少三分之二的证明，

1366
01:29:43,420 --> 01:29:46,019
所有直接或间接引用，

1367
01:29:47,099 --> 01:29:48,039
这些块在这里。

1368
01:29:50,599 --> 01:29:52,239
好的。

1369
01:29:52,239 --> 01:29:54,279
这就是理由。

1370
01:29:54,279 --> 01:29:58,559
特别是，是的，

1371
01:29:58,559 --> 01:30:01,659
我想我会谈论的，这是一秒钟的分裂。

1372
01:30:03,220 --> 01:30:05,199
但特别是，我们想达到的目标

1373
01:30:05,199 --> 01:30:06,939
这是最终的概念。

1374
01:30:07,659 --> 01:30:12,220
而且最终性意味着再次

1375
01:30:12,220 --> 01:30:13,399
看来我们有点时。

1376
01:30:13,399 --> 01:30:14,779
所以我在这里很简短。

1377
01:30:14,779 --> 01:30:18,659
但最终的想法是，如果我，让我们看看，

1378
01:30:18,659 --> 01:30:22,960
就像，让我们看看我是否，对不起。

1379
01:30:22,960 --> 01:30:27,960
如果我证明合理的块，

1380
01:30:33,260 --> 01:30:35,019
然后，我称其为B。

1381
01:30:35,020 --> 01:30:39,820
如果我证明是合理的B块B，则B将最终确定。

1382
01:30:44,120 --> 01:30:47,500
在这种情况下，我们将其称为B。

1383
01:30:48,280 --> 01:30:49,860
因为发生的事情是...

1384
01:30:51,160 --> 01:30:53,060
你看不到我的手。

1385
01:30:53,200 --> 01:30:53,700
太糟糕了。

1386
01:30:53,880 --> 01:31:00,100
但基本上，在我们获得这些选票之前，我们已经证明了B。

1387
01:31:00,380 --> 01:31:03,200
基本上，在这个时期，我们证明了B。

1388
01:31:03,199 --> 01:31:06,699
然后我们来了，我们证明了这个障碍。

1389
01:31:07,099 --> 01:31:07,439
我不知道。

1390
01:31:07,500 --> 01:31:08,019
我叫C。

1391
01:31:08,019 --> 01:31:16,779
我们认为C是合理的，因为我们证明了一个有理由的块，即B。

1392
01:31:16,939 --> 01:31:17,760
B现在是决赛。

1393
01:31:18,859 --> 01:31:22,279
这就像我们要做的那样的重点就是达到这种结局的概念。

1394
01:31:24,460 --> 01:31:28,159
让我们看看这里该说些什么。

1395
01:31:28,319 --> 01:31:29,859
我想我会在这里解释我们的意思。

1396
01:31:29,859 --> 01:31:32,460
我们的意思是最终

1397
01:31:32,460 --> 01:31:35,920
因为如果我们试图证明，

1398
01:31:35,920 --> 01:31:38,219
就像我们试图证明另一个块是合理的一样。

1399
01:31:39,539 --> 01:31:40,739
让我这样做。

1400
01:31:44,460 --> 01:31:45,799
所以当然。

1401
01:31:45,799 --> 01:31:48,079
让我们做这样的事情。

1402
01:31:51,239 --> 01:31:52,079
好的。

1403
01:31:54,539 --> 01:31:56,359
让我画这些箭。

1404
01:31:56,359 --> 01:31:58,179
所以，对。

1405
01:31:59,859 --> 01:32:02,460
再次，这种削减的概念。

1406
01:32:02,460 --> 01:32:06,259
例如，证明喜欢两个冲突的块

1407
01:32:06,259 --> 01:32:08,059
在这里，这将是一个可靠的。

1408
01:32:10,099 --> 01:32:11,979
那意味着你无法得到

1409
01:32:11,979 --> 01:32:15,559
在您最终确定的情况下

1410
01:32:15,559 --> 01:32:17,519
两个不同的历史。

1411
01:32:17,519 --> 01:32:19,219
是的，说顶部和底部。

1412
01:32:19,219 --> 01:32:22,460
因为如果您这样做，那将会发生的是

1413
01:32:22,460 --> 01:32:24,299
说出所有公正的证明

1414
01:32:24,299 --> 01:32:27,579
试图最终确定这个区块，假设

1415
01:32:27,579 --> 01:32:32,779
这个链。他们将与顶级链条冲突。然后您可以基本上

1416
01:32:32,779 --> 01:32:37,819
将这些证明作为行为不当的证明进入顶级链。你会削减这些

1417
01:32:37,819 --> 01:32:43,819
验证者。而且您无法达到最终确定两个相互矛盾的历史的情况

1418
01:32:44,380 --> 01:32:50,619
没有它是可砍的。因此，这就是我们最终的意思。你有经济的概念

1419
01:32:50,619 --> 01:33:01,699
实现我们想要的最终性。好的。是的。对不起。我想我们暂时了，但我可以留下

1420
01:33:01,699 --> 01:33:08,260
对于一些问题。是的，对不起，我们跑了。谢谢，亚历克斯。没问题。我要去。

1421
01:33:10,039 --> 01:33:17,659
一个问题。您能否在最终确定和查找的背景下谈论Gaspar

1422
01:33:17,659 --> 01:33:19,119
规范链。

1423
01:33:20,559 --> 01:33:21,079
正确的。

1424
01:33:21,559 --> 01:33:24,639
所以加斯帕是我们的特殊实例

1425
01:33:24,639 --> 01:33:27,019
我一直在试图布置的这一协议。

1426
01:33:28,279 --> 01:33:30,859
再说一次，这是它开始的地方

1427
01:33:30,859 --> 01:33:32,460
要变得有些复杂。

1428
01:33:32,760 --> 01:33:34,899
但基本上，几乎有两种观点。

1429
01:33:35,139 --> 01:33:37,260
有时代级别的视图

1430
01:33:37,260 --> 01:33:38,699
是我只是在说什么，

1431
01:33:38,800 --> 01:33:42,479
就像你有块

1432
01:33:42,479 --> 01:33:50,039
像UM一样代表您，您知道这就像时代的事物，但随之而来

1433
01:33:50,039 --> 01:33:55,099
每个时期对您仍然会让我们看看我是否能画这件事，我不知道我会做的

1434
01:33:55,099 --> 01:33:59,759
例如，您仍然将拥有所有其他块，所以像一个非常酷的

1435
01:33:59,759 --> 01:34:06,079
关于以太坊的事情是我们有这种动态可用性的概念，这里的想法是

1436
01:34:06,079 --> 01:34:12,179
基本上，您可以继续添加到链条中

1437
01:34:12,180 --> 01:34:17,100
嗯，与此最终过程分开。

1438
01:34:17,100 --> 01:34:21,220
因此，即使出于某种原因的结局，也可以说，还有很多其他人

1439
01:34:21,220 --> 01:34:23,760
离线，他们无法获得链条的证明。

1440
01:34:24,640 --> 01:34:30,119
然后，嗯，您知道，最终性，我们可能知道，我们可能会始终确定，

1441
01:34:30,300 --> 01:34:35,039
您知道，这个块B或这个时代B，嗯，链条仍然可以继续。

1442
01:34:35,079 --> 01:34:37,740
您可以继续增加链的头部。

1443
01:34:37,739 --> 01:34:43,920
因此，这意味着，您知道，这个最终的过程是有点落后

1444
01:34:43,920 --> 01:34:44,920
实际区块链。

1445
01:34:44,920 --> 01:34:51,559
因此，如果您喜欢链的头，请在这里说，我现在将放大。

1446
01:34:51,559 --> 01:34:56,300
因此，您知道，假设这就像时代，我不知道，e减。

1447
01:34:56,300 --> 01:34:58,000
所以现在我们在这里。

1448
01:34:58,000 --> 01:35:02,199
现在是这些插槽。

1449
01:35:02,199 --> 01:35:06,319
所以你现在还有

1450
01:35:06,319 --> 01:35:12,799
在块树上，这意味着您知道建议者可以去，说这是一个小姐这个建议者

1451
01:35:13,439 --> 01:35:21,199
在这里提出下一个建议者，您知道他们提议说您甚至在这里都知道

1452
01:35:22,079 --> 01:35:26,880
现在，您总体上拥有的是您现在拥有相同的块树UM仍然需要

1453
01:35:26,880 --> 01:35:31,119
使这个共识推断uh表示，就像这是链的头部，还是这是

1454
01:35:31,119 --> 01:35:36,239
链。同样，我们对此进行了证明。因为每个块中的这些证明

1455
01:35:36,239 --> 01:35:40,640
您知道，他们将证明一个街区或另一个街区。那要

1456
01:35:40,640 --> 01:35:50,239
在这里说出一些100 ETH的权重，而在这里证明1,000个ETH。总的来说

1457
01:35:50,239 --> 01:35:54,800
然后，我们有其他算法，LMD Ghost。您可能已经听说过。我写下来。

1458
01:35:56,399 --> 01:35:59,920
但是它非常类似于我们要说的工作证明的地方

1459
01:35:59,920 --> 01:36:05,920
从我们知道的一些人开始。然后基本上这个g是贪婪的。基本上

1460
01:36:07,840 --> 01:36:10,800
找到最大的股份权重的那个证明。

1461
01:36:11,760 --> 01:36:16,880
因此，当我们说Gaspar时，这确实是我们的意思是有FFG

1462
01:36:19,440 --> 01:36:24,239
友好的最终产品。首字母缩写词的代表并不重要。但

1463
01:36:24,239 --> 01:36:29,199
但最终这类时期的过程

1464
01:36:29,199 --> 01:36:31,899
希望你们中的一些人，即使不是全部。

1465
01:36:32,859 --> 01:36:35,500
我们在这些较长的时间尺度上执行最终性。

1466
01:36:35,500 --> 01:36:36,899
这再次是

1467
01:36:36,899 --> 01:36:39,279
这个最终的小工具正在提供最终性。

1468
01:36:39,279 --> 01:36:43,279
但是，即使在内部，你知道一个时代，

1469
01:36:43,279 --> 01:36:47,439
e加一个时期内，一个时代本身，

1470
01:36:47,439 --> 01:36:50,239
我们还使用此LMD GOOS协议

1471
01:36:50,239 --> 01:36:52,000
喜欢找出链的实际尖端。

1472
01:36:52,000 --> 01:36:54,600
因此，就像我喜欢生产下一个块一样，

1473
01:36:54,600 --> 01:36:57,720
您知道我需要选择此块或此块。

1474
01:36:57,720 --> 01:37:00,060
是的，加斯帕基本上只是

1475
01:37:00,060 --> 01:37:03,140
我们对该共识协议的特殊实例

1476
01:37:03,140 --> 01:37:05,500
就像FFG加上LMD Ghost一样。

1477
01:37:12,939 --> 01:37:14,180
谢谢亚历克斯。

1478
01:37:14,180 --> 01:37:22,539
是的，我认为这可能是我们今天有时间的。

1479
01:37:22,539 --> 01:37:24,220
除非Mário，否则您还有另一个问题？

1480
01:37:24,220 --> 01:37:28,300
是的，我想，如果我们只能触摸PBS一秒钟。

1481
01:37:28,300 --> 01:37:30,940
我们将有一个问题进一步研究。

1482
01:37:30,940 --> 01:37:33,360
但是你是男人。

1483
01:37:33,360 --> 01:37:39,079
我认为这是一个很好的机会，我们已经过时了。

1484
01:37:39,079 --> 01:37:41,539
因此，如果您可以谈谈。

1485
01:37:41,539 --> 01:37:47,019
所以，是的。什么动机？提案建造者分离的工作是什么？

1486
01:37:49,199 --> 01:37:59,519
正确的。所以，是的。我想从基本的基础知识开始。而且，从零开始，此协议如何工作？

1487
01:37:59,920 --> 01:38:05,439
事实证明，该协议生活在现实世界中。

1488
01:38:05,439 --> 01:38:09,640
还有很多其他事情，我今天没有时间去。

1489
01:38:09,640 --> 01:38:19,579
但是基本上，我一直是系统的后果。是的。我实际上可能只能

1490
01:38:19,579 --> 01:38:25,440
写作，我的笔记中确实还有一些关于这里的事情。所以只是看着

1491
01:38:25,440 --> 01:38:31,300
这种损失方案证明和以太坊的证明的未来。有很多东西

1492
01:38:31,300 --> 01:38:39,200
我们想做的。其中之一是单插槽终结，SSF。这基本上是在说

1493
01:38:39,640 --> 01:38:41,380
出于许多原因。

1494
01:38:41,539 --> 01:38:42,760
再说一次，我真的没有时间进入

1495
01:38:42,960 --> 01:38:45,940
但是由于事实

1496
01:38:45,940 --> 01:38:47,680
您拥有这种动态的可用性

1497
01:38:48,460 --> 01:38:51,579
然后这两个游戏都在这里发生

1498
01:38:51,579 --> 01:38:54,000
这也影响了这个时期的事情。

1499
01:38:54,800 --> 01:38:58,420
事实证明有许多不同的攻击

1500
01:38:58,420 --> 01:39:01,200
玩家可以通过这种灵活性来实现。

1501
01:39:01,200 --> 01:39:03,740
因此，与其具有这个终结过程，而是

1502
01:39:03,980 --> 01:39:06,500
就像小径，例如，链子头后面的两个时代，

1503
01:39:06,500 --> 01:39:11,800
实际上，您需要考虑在一个插槽中获得最终性。

1504
01:39:12,220 --> 01:39:15,100
同样，单个插槽终结应该很清楚。

1505
01:39:16,279 --> 01:39:17,119
那是一回事。

1506
01:39:19,439 --> 01:39:22,579
其他事情，我的意思是，是的，我想我会喜欢写出自己的东西。

1507
01:39:22,699 --> 01:39:23,100
SSLE。

1508
01:39:23,539 --> 01:39:29,279
因此，这基本上是您要使建议选择是一种秘密或及时喜欢的。

1509
01:39:29,399 --> 01:39:30,960
就像想法一样，作为验证者。

1510
01:39:31,340 --> 01:39:33,659
因此，今天您实际上可以去看看链条。

1511
01:39:33,659 --> 01:39:35,359
并基于我谈论的兰德尔（Randall）

1512
01:39:35,359 --> 01:39:41,439
实际上，您会提前一到两个时代。这不是很好，因为，

1513
01:39:41,439 --> 01:39:46,719
您知道，这是一个开放的分散网络。我实际上可以成为一个各种网络

1514
01:39:46,719 --> 01:39:52,399
技术。我实际上可以在IPS或哪个验证器的点对点层上识别

1515
01:39:52,399 --> 01:39:56,559
例如。一旦我拥有您的IP，如果我不喜欢您的块，那会出现在您的

1516
01:39:56,559 --> 01:40:02,479
插槽，我实际上可以尝试让您努力。因此，一种方法可以改进这一点

1517
01:40:02,479 --> 01:40:09,679
进入下一个建议者实际上是秘密的地方。像他们直到及时

1518
01:40:09,679 --> 01:40:16,799
几乎他们必须在哪里透露一些选举票，例如，实际上有一个投票票。

1519
01:40:18,879 --> 01:40:25,199
还有其他事情。 Maxeb是一个。因此，这处于这种32次平衡。你呢

1520
01:40:25,199 --> 01:40:33,659
您可以想象基本上是这样做的，以便没有使一个验证者拥有32个ETH，而是

1521
01:40:34,079 --> 01:40:36,779
我不知道，他们可能会喜欢的数字更高，例如2048。

1522
01:40:37,699 --> 01:40:42,939
这很重要，因为现在，如果我说，是的，是的，我不知道，64 eth，

1523
01:40:43,920 --> 01:40:47,139
那必须是协议中的两个验证者。

1524
01:40:47,380 --> 01:40:50,619
这部分是我们必须喜欢如此大量验证者的样子

1525
01:40:50,800 --> 01:40:52,840
他们只是碰巧使用32。

1526
01:40:52,840 --> 01:40:59,539
到。许多人拥有超过32个ETH，例如这些大型专业制作操作，

1527
01:40:59,539 --> 01:41:04,600
例如。因此，您可以想象在协议中使用一个验证器实体

1528
01:41:04,600 --> 01:41:10,180
更高的平衡。这使您可以合并该集合。那是...也有

1529
01:41:10,180 --> 01:41:14,480
就像...是的，我们一直在寻找罚款运动，以使其真正成为现实

1530
01:41:14,480 --> 01:41:20,199
情况或削减情况更好。整个经济学本身，

1531
01:41:20,199 --> 01:41:22,739
验证器时没有发行

1532
01:41:22,739 --> 01:41:25,960
是有回报的事物，这是如何融入其中的。

1533
01:41:25,960 --> 01:41:27,639
无论如何，好的。

1534
01:41:27,639 --> 01:41:29,399
我现在只是脑具聋的东西。

1535
01:41:30,380 --> 01:41:31,960
都说这一切，让我回答你的问题，

1536
01:41:31,960 --> 01:41:33,260
这是关于PBS的。

1537
01:41:33,260 --> 01:41:37,039
所以这是另一件事很重要

1538
01:41:37,039 --> 01:41:38,679
对于所有共识研究人员。

1539
01:41:38,679 --> 01:41:43,099
因此，我们有PBS，提议者建设者的分离。

1540
01:41:43,099 --> 01:41:44,819
是的。

1541
01:41:44,819 --> 01:41:47,939
所以这里的想法是

1542
01:41:47,939 --> 01:41:51,279
该协议不存在于真空中。

1543
01:41:52,399 --> 01:41:54,199
有一个非常有价值的执行层

1544
01:41:54,199 --> 01:41:56,699
还有梅夫的概念

1545
01:41:56,699 --> 01:42:00,939
它过去代表最大的可提取值。

1546
01:42:01,619 --> 01:42:03,599
这个想法是基本上是我去的

1547
01:42:04,339 --> 01:42:06,799
我的意思是，让我们看看，我可以使用什么好图像？

1548
01:42:07,599 --> 01:42:09,359
好吧，让我重新开始。

1549
01:42:09,539 --> 01:42:11,939
因此，当我继续绘制我的块时

1550
01:42:11,939 --> 01:42:13,000
我有我的交易，

1551
01:42:13,539 --> 01:42:15,299
事实证明一些SQL交易

1552
01:42:15,299 --> 01:42:16,859
可能比另一个更有价值。

1553
01:42:16,859 --> 01:42:20,759
是的，我真的没有时间像那样的细节。

1554
01:42:20,759 --> 01:42:31,259
但是最终，考虑到这一点的方法是，有一种梅夫的概念，您知道，要变得精致。

1555
01:42:31,259 --> 01:42:37,659
更好地成为验证者。

1556
01:42:37,659 --> 01:42:43,359
在某种程度上，您可以喜欢提取我不知道的MEV。

1557
01:42:43,359 --> 01:42:45,259
我只是尝试画一些硬币或其他东西。

1558
01:42:45,260 --> 01:42:51,440
但是基本上有这样的想法是，您有点将钱留在桌子上。

1559
01:42:51,440 --> 01:42:55,780
如果您想不采用这些更复杂的技术来构建块。

1560
01:42:55,780 --> 01:43:02,239
这是一个问题，因为它基本上会损害集中化。

1561
01:43:02,320 --> 01:43:02,800
为什么？

1562
01:43:02,860 --> 01:43:07,079
因为假设我在提取此MBB方面更好地对我更好。

1563
01:43:07,500 --> 01:43:09,640
例如，他们可以提供更好的回报。

1564
01:43:09,640 --> 01:43:10,860
他们可以吸引更多的股份。

1565
01:43:10,940 --> 01:43:14,539
现在，就像飞轮一样，您喜欢大型，大量的堆放池。

1566
01:43:15,260 --> 01:43:17,239
我会说一个实体。

1567
01:43:17,239 --> 01:43:18,860
然后现在而不是喜欢，你知道，

1568
01:43:18,860 --> 01:43:21,420
实际上一百万个共同努力的节点

1569
01:43:21,420 --> 01:43:23,680
为了确保以太坊，也许不像五个

1570
01:43:23,680 --> 01:43:25,760
或像一些较小的数字。

1571
01:43:25,760 --> 01:43:27,739
也许在管辖区

1572
01:43:27,739 --> 01:43:31,699
不喜欢某些以太坊交易。

1573
01:43:31,699 --> 01:43:35,039
所以我们想停止这个。

1574
01:43:35,039 --> 01:43:37,199
通常，我们现在对此的看法

1575
01:43:37,199 --> 01:43:40,860
是PBS，您想分开此任务

1576
01:43:40,860 --> 01:43:42,619
就像制作执行块一样。

1577
01:43:42,619 --> 01:43:44,960
是的，也许我会在Neo上聘请首席执行官。

1578
01:43:45,260 --> 01:43:48,940
现在有一个CL块，有执行有效载荷

1579
01:43:48,940 --> 01:43:50,280
那室内。

1580
01:43:50,280 --> 01:43:52,199
与PBS一起，您实际上想考虑

1581
01:43:52,199 --> 01:43:53,380
分开这两个。

1582
01:43:53,380 --> 01:43:58,380
这样您就可以外包构建此东西，

1583
01:43:59,380 --> 01:44:00,960
此执行有效载荷正在成为

1584
01:44:00,960 --> 01:44:02,539
一项非常复杂的任务。

1585
01:44:02,539 --> 01:44:05,460
对于其他一些实体，我们将其称为建造者。

1586
01:44:05,460 --> 01:44:08,060
然后作为验证者，您不必玩

1587
01:44:08,060 --> 01:44:09,780
这些非常复杂的游戏。

1588
01:44:09,780 --> 01:44:11,880
您可以再次将其外包给某人

1589
01:44:11,880 --> 01:44:14,619
然后仍然从工作中获利。

1590
01:44:15,260 --> 01:44:18,159
大约一分钟就是PB。

1591
01:44:18,159 --> 01:44:19,159
我希望这很有帮助。

1592
01:44:22,400 --> 01:44:23,560
是的，那太好了。

1593
01:44:25,239 --> 01:44:26,119
谢谢，亚历克斯。

1594
01:44:27,900 --> 01:44:28,400
凉爽的。

1595
01:44:29,159 --> 01:44:31,340
是的，我认为我们在这里大约15分钟。

1596
01:44:31,460 --> 01:44:33,260
因此，我认为我们可能应该将其结束。

1597
01:44:34,500 --> 01:44:38,000
但是，是的，非常感谢您给我们一个不错的概述

1598
01:44:38,000 --> 01:44:39,199
进入共识层。

1599
01:44:39,760 --> 01:44:42,220
我敢肯定，有一些问题没有得到回答。

1600
01:44:42,220 --> 01:44:45,000
希望亚历克斯

1601
01:44:45,000 --> 01:44:46,520
可以加入我们的不和谐

1602
01:44:46,520 --> 01:44:49,079
服务器，看看是否有什么

1603
01:44:49,079 --> 01:44:50,760
在那里他想潜入

1604
01:44:50,760 --> 01:44:55,020
是的，再次感谢亚历克斯

1605
01:44:55,020 --> 01:44:57,159
我们会见大家

1606
01:44:57,159 --> 01:44:59,199
下周

1607
01:44:59,199 --> 01:45:01,100
研究测试

1608
01:45:01,100 --> 01:45:05,140
非常感谢亚历克斯，我们感谢你

1609
01:45:05,140 --> 01:45:05,680
时间的人

1610
01:45:05,680 --> 01:45:08,539
是的，这很有趣，感谢我拥有我

1611
01:45:08,539 --> 01:45:11,060
是的，我会与你们中的任何一个接触

1612
01:45:11,060 --> 01:45:17,700
不和谐，我很乐意在那里回答更多问题，所以谢谢大家，是的

1613
01:45:17,700 --> 01:45:29,940
我会见到你，非常感谢你，是的，再见了，为了每个人仍在听嗯

1614
01:45:29,940 --> 01:45:34,340
采取所有回答的所有伟大材料和问题，以及所讨论的所有内容

1615
01:45:34,340 --> 01:45:36,940
谈话和

1616
01:45:36,940 --> 01:45:37,239
这

1617
01:45:37,239 --> 01:45:40,079
Discord聊天和

1618
01:45:40,079 --> 01:45:42,440
打开PR Wiki可以随意

1619
01:45:42,440 --> 01:45:44,460
将其添加到相应的文档或创建

1620
01:45:44,460 --> 01:45:46,100
一个新的，我们有很多好

1621
01:45:46,100 --> 01:45:47,840
捐款，请继续

1622
01:45:47,840 --> 01:45:50,000
是的，非常感谢你

1623
01:45:50,000 --> 01:45:51,480
今天加入我们

1624
01:45:51,480 --> 01:45:53,640
对于共识层谈话

1625
01:45:53,640 --> 01:45:55,779
谢谢大家

1626
01:45:55,779 --> 01:45:58,159
我们将在星期四见

1627
01:45:58,159 --> 01:45:59,640
在聚会场上电话是的

1628
01:45:59,640 --> 01:46:01,699
我也想提一下

1629
01:46:01,699 --> 01:46:03,699
是的，如果你只想

1630
01:46:03,699 --> 01:46:08,979
您知道，与我们聊天，讨论您想做什么，在Wiki中做出贡献，

1631
01:46:08,979 --> 01:46:14,739
或者，就像您知道的一样，甚至可能在以太坊之外。来与我们聊天

1632
01:46:16,340 --> 01:46:31,059
电话。您可以在Discord服务器上找到事件。多谢。

1633
01:47:01,060 --> 01:47:03,060
所以

