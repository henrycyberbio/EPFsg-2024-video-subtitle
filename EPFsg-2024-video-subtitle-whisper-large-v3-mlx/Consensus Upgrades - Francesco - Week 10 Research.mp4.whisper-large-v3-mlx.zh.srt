1
00:00:30,000 --> 00:00:47,159
谢谢。

2
00:01:00,000 --> 00:01:29,980
谢谢。

3
00:01:30,000 --> 00:01:40,000
¶¶

4
00:01:40,000 --> 00:01:50,000
¶¶

5
00:01:50,000 --> 00:02:00,000
¶¶

6
00:02:00,000 --> 00:02:10,000
¶¶

7
00:02:10,000 --> 00:02:20,000
¶¶

8
00:02:20,000 --> 00:02:49,979
我不知道。

9
00:02:50,000 --> 00:03:19,979
谢谢。

10
00:03:20,000 --> 00:03:49,979
谢谢。

11
00:04:20,000 --> 00:04:49,980
谢谢。

12
00:04:50,000 --> 00:05:19,980
谢谢。

13
00:05:20,000 --> 00:05:30,000
¶¶

14
00:05:30,000 --> 00:05:40,000
¶¶

15
00:05:40,000 --> 00:05:50,000
¶¶

16
00:05:50,000 --> 00:06:12,420
谢谢。

17
00:06:50,000 --> 00:07:00,000
¶¶

18
00:07:00,000 --> 00:07:10,000
¶¶

19
00:07:10,000 --> 00:07:39,000
¶¶

20
00:07:40,000 --> 00:08:08,439
好的。

21
00:08:08,439 --> 00:08:11,660
欢迎回到以太坊协议奖学金。

22
00:08:12,180 --> 00:08:16,759
这是我们今天的最后会议，

23
00:08:17,000 --> 00:08:19,439
研究轨道上的第10周。

24
00:08:20,480 --> 00:08:23,439
我们今天有弗朗切斯科

25
00:08:24,019 --> 00:08:27,360
谈论一些共识升级。

26
00:08:29,079 --> 00:08:30,699
是的，所以我继续让马里奥

27
00:08:30,699 --> 00:08:32,580
给他一个更适当的介绍，

28
00:08:32,799 --> 00:08:35,100
但是很高兴有你在这里，弗朗切斯科。

29
00:08:35,100 --> 00:08:37,000
并感谢大家的调整。

30
00:08:38,440 --> 00:08:40,580
非常感谢您在这里，Francesco。

31
00:08:40,720 --> 00:08:42,940
您可能没有意识到，但是您是一个非常特别的客人

32
00:08:42,940 --> 00:08:47,680
因为这是整个EPF研究小组的最后一次讨论

33
00:08:47,680 --> 00:08:50,480
尤其是研究轨道。

34
00:08:51,180 --> 00:08:54,540
是的，我们今天在这里有Francesco，因为他是研究员。

35
00:08:55,720 --> 00:09:00,000
弗朗切斯科（Francesco）学习了数学，并在几年前加入了EF。

36
00:09:00,000 --> 00:09:03,900
从那以后，他一直在共识，

37
00:09:03,899 --> 00:09:10,779
来自Francesco及其他的许多有趣的共识研究论文和建议

38
00:09:10,779 --> 00:09:17,699
同事。但是今天他将特别谈论叉子的选择，给我们一个回顾

39
00:09:17,699 --> 00:09:22,699
Gaspar如何工作以及升级是什么，例如单槽终结性，

40
00:09:23,059 --> 00:09:28,539
这是他的领域。是的，非常感谢您在这里。希望你能听到我们的声音

41
00:09:28,539 --> 00:09:34,779
我们也能听到你的声音，是的，我可以听到你能听到我很棒的是，很好，是的

42
00:09:34,779 --> 00:09:40,139
阶段是您的嗯，您可以在这里共享幻灯片

43
00:09:40,139 --> 00:09:47,740
现在，我们可以从第二秒开始，是的，嗯，让我第一次共享幻灯片的链接

44
00:09:47,740 --> 00:09:49,399
然后我只分享屏幕。

45
00:10:13,960 --> 00:10:17,080
您看到演示屏幕吗？

46
00:10:17,080 --> 00:10:18,080
它在这里。

47
00:10:18,080 --> 00:10:19,080
好的。

48
00:10:19,080 --> 00:10:20,080
惊人的。

49
00:10:20,080 --> 00:10:28,420
所以，是的，我想我不确定的一件事，因为我以前从未做过

50
00:10:28,420 --> 00:10:31,300
还是随之而来的是，可以与人互动吗？

51
00:10:31,300 --> 00:10:32,300
人们可以问问题吗？

52
00:10:32,300 --> 00:10:34,240
是的，是的。

53
00:10:34,240 --> 00:10:36,120
因此，人们会在我们的不和谐中提出问题。

54
00:10:36,120 --> 00:10:43,060
如果您有额外的空间观看，我可以发送它，但是当他们提出问题时，我们可以做到

55
00:10:43,060 --> 00:10:44,060
暂停。

56
00:10:44,060 --> 00:10:45,360
我们只会问你。

57
00:10:45,360 --> 00:10:49,600
因此，在每个细分市场之后，请给我们一分钟的潜在问题，我们将在

58
00:10:49,600 --> 00:10:51,639
用，阅读人们在问什么。

59
00:10:52,519 --> 00:10:52,800
好的。

60
00:10:52,919 --> 00:10:53,060
是的。

61
00:10:53,080 --> 00:10:55,180
我的意思是，如果可以的话，是的，如果可以的话。

62
00:10:55,440 --> 00:10:56,480
我们可以处理。

63
00:10:56,700 --> 00:10:56,759
是的。

64
00:10:56,820 --> 00:10:57,039
好的。

65
00:10:58,360 --> 00:10:58,759
是的。

66
00:10:59,039 --> 00:11:04,879
然后，是的，我想我会继续前进，开始重新开始加斯帕。

67
00:11:05,120 --> 00:11:10,080
我不确定人们对协议或类似事物有多少了解。

68
00:11:10,080 --> 00:11:14,620
因此，我想如果您会得到早期的反馈，您知道，这太慢或类似，您

69
00:11:14,620 --> 00:11:18,779
一切都很清楚，或者我需要放慢脚步或其他任何东西，请让我知道

70
00:11:18,779 --> 00:11:25,019
早些时候这将是有帮助的。因此，gaspar只是我们协议的名称，它来自

71
00:11:25,740 --> 00:11:29,980
它来自表征它的两个组件

72
00:11:29,980 --> 00:11:38,060
LMD幽灵，这就是G的来源，而Gasparffg。让我们第一次潜水

73
00:11:38,059 --> 00:11:44,539
进入幽灵部分，因为那是最关键的组成部分，所以鬼

74
00:11:44,539 --> 00:11:50,059
代表以前最重的最重观察到的Sub-3，基本上已经描述了什么

75
00:11:50,059 --> 00:11:54,859
Ghost实际上确实喜欢作为一种算法，从本质上讲，这就像一种力选择算法

76
00:11:54,859 --> 00:12:01,179
因此，这是一种算法，允许您基本上给出一个块树来找到

77
00:12:01,179 --> 00:12:06,539
链所以您想将其视为规范链本质上是嗯，以防万一

78
00:12:06,539 --> 00:12:12,860
叉子和幽灵最初仅在街区上运行，所以这里没有船只只有块

79
00:12:12,860 --> 00:12:16,620
嗯，基本上它的工作方式是您刚刚穿过块树

80
00:12:17,259 --> 00:12:22,299
当没有叉子时，一旦到达叉子，您就会继续前进，您基本上会选择

81
00:12:22,299 --> 00:12:26,939
最重，是的，第一部分是贪婪的部分，您只是继续前进

82
00:12:26,939 --> 00:12:32,539
就像真的一样，您在必须的时候做出选择，最重的部分是您

83
00:12:32,539 --> 00:12:37,740
或最重的子树一部分是，一旦您必须在叉子上做出选择，只需选择

84
00:12:37,740 --> 00:12:41,819
最重的子树。因此，在这种情况下，上面的子树有五个街区，下面有一个街区

85
00:12:41,819 --> 00:12:47,500
有四个

86
00:12:47,500 --> 00:12:54,219
拥有链。因此，这最初是基本提出的，以替代最长

87
00:12:54,219 --> 00:13:00,939
链，因此您可以看到，在最长的链中，假设有一段时间

88
00:13:00,940 --> 00:13:08,540
网络问题以及诚实的链条或诚实的嗯，诚实的参与者基本上是

89
00:13:08,540 --> 00:13:15,020
构建一棵分叉的块树，所以就像绿色的部分，而可能有一些

90
00:13:15,020 --> 00:13:20,540
对抗链，在这种情况下，这种红色是隐藏的，嗯，是的，基本上是

91
00:13:20,540 --> 00:13:25,580
对手没有透露，这实际上只是一条链，这不是第四，也许是

92
00:13:25,580 --> 00:13:30,540
从字面上看，这就是一个聚会，就像当时的一个未成年人一样，然后是的

93
00:13:30,539 --> 00:13:34,219
这不是这个链条，这将是一条规范的链条，就像它被揭示

94
00:13:34,219 --> 00:13:36,939
嗯，这个红色的一个哦，顺便说一下，你能看到我的指针

95
00:13:40,459 --> 00:13:45,899
嗯，如果您知道这是您的意思，我们不会看到您的光标

96
00:13:45,899 --> 00:13:51,819
可以说是的，有点小，但是可以，但是是的，无论如何，这基本上是这个链

97
00:13:51,819 --> 00:13:57,179
规范的人，而不是小麦鬼，它是上方的子树，呃，是的

98
00:13:57,179 --> 00:14:04,339
案例这个块将是规范的。事实证明它实际上也更好

99
00:14:04,339 --> 00:14:10,779
一旦您过渡到投票。因此，您知道，有了股份证明，我们有

100
00:14:10,779 --> 00:14:17,059
在这些有证明和这样的事物的验证者中。因此，基本上，我们想

101
00:14:17,059 --> 00:14:23,139
停下来，我们确实停止使用块作为测量重量的方式。所以，你知道，

102
00:14:23,139 --> 00:14:26,799
我们在谈论最重的，我们想到体重。

103
00:14:26,799 --> 00:14:30,100
但是在这种情况下，真正的体重只是什么。

104
00:14:30,100 --> 00:14:31,480
好吧，这实际上是困难。

105
00:14:31,480 --> 00:14:34,000
这并不是一个街区出现。

106
00:14:34,000 --> 00:14:35,179
有困难部分。

107
00:14:35,179 --> 00:14:37,340
但是无论如何，在Perlmere的股份中，我们真的

108
00:14:37,340 --> 00:14:40,960
希望重量基本上由船和危险赋予

109
00:14:40,960 --> 00:14:42,159
本质上。

110
00:14:42,159 --> 00:14:43,659
因此，我们也有同样的事情

111
00:14:43,659 --> 00:14:47,179
除了现在我们有了这种加权块树，

112
00:14:47,179 --> 00:14:50,139
或像船上的街区一样，有这些小云

113
00:14:50,139 --> 00:14:51,620
在车站。

114
00:14:51,620 --> 00:14:55,740
然后，是的，LMD Ghost基本上是消息驱动的，

115
00:14:55,740 --> 00:14:59,240
因此，基本上是投票驱动的鬼魂，但也是最新的。

116
00:14:59,240 --> 00:15:02,480
因此，我们只考虑最近的投票

117
00:15:02,480 --> 00:15:04,759
对于任何给定的验证器。

118
00:15:04,759 --> 00:15:08,159
但是除此之外，本质上是同一件事。

119
00:15:08,159 --> 00:15:10,419
是的，到目前为止，我们也可以

120
00:15:10,419 --> 00:15:13,940
我们已经谈论了LMD Ghost作为第四个选择算法，

121
00:15:13,940 --> 00:15:15,919
但是您也可以将其视为协议，

122
00:15:15,919 --> 00:15:19,139
实际上，这基本上就是我们的协议。

123
00:15:19,139 --> 00:15:23,299
所以您接受，这是协议的一个插槽

124
00:15:23,299 --> 00:15:25,100
基本上它是从提案开始的

125
00:15:25,100 --> 00:15:28,379
块中添加了一个块。

126
00:15:28,379 --> 00:15:30,699
然后是这些头船，您基本上是

127
00:15:30,699 --> 00:15:33,139
今天哪种证明

128
00:15:33,139 --> 00:15:35,179
或我们证明的一部分

129
00:15:35,179 --> 00:15:37,319
基本上每个验证者都说的地方，

130
00:15:37,319 --> 00:15:39,720
我认为这是链的头

131
00:15:39,720 --> 00:15:41,759
就是这样，然后是另一个建议

132
00:15:41,759 --> 00:15:43,159
而且它一直像这样。

133
00:15:43,159 --> 00:15:45,120
基本上，这就是我们的老虎机的样子，

134
00:15:45,120 --> 00:15:47,139
除了我们也有证明汇总

135
00:15:47,139 --> 00:15:48,240
这种事情使事情复杂化。

136
00:15:48,240 --> 00:15:52,159
因此，我们实际上有三个阶段，而不是两个阶段，但这在这里是无关紧要的。

137
00:15:53,039 --> 00:15:55,279
因此，基本上看起来像是提出了这个块，

138
00:15:56,000 --> 00:15:59,080
人们对此投票并继续前进，他们有点

139
00:15:59,080 --> 00:16:02,860
这些穿上它的人，他们试图让位

140
00:16:02,860 --> 00:16:06,659
并确保它停留在链条中，以强加他们对链条的看法。

141
00:16:08,000 --> 00:16:09,440
所以就是这样。

142
00:16:09,440 --> 00:16:13,000
然后是g部分的客户，这是这种友好的

143
00:16:13,000 --> 00:16:15,120
最终的小工具或任何终结小工具

144
00:16:15,120 --> 00:16:22,220
在基本上可以的地方，我们从一些块树开始，然后我们考虑一些

145
00:16:22,220 --> 00:16:26,879
其中，某些块树检查点，在我们的情况下，回声边界块，

146
00:16:26,879 --> 00:16:31,860
然后，我们尝试最终确定其中一些检查点，以便基本上可以防止重新

147
00:16:31,860 --> 00:16:35,000
协议可能会发生。

148
00:16:35,000 --> 00:16:41,840
是的，基本上，我们在检查点之间实质上具有这种链接，然后领导

149
00:16:41,840 --> 00:16:47,680
如果您有合理的理由，则首先是理由，然后结局

150
00:16:47,680 --> 00:16:53,920
块，然后立即从它开始的另一个uh链接，我不会详细介绍

151
00:16:53,920 --> 00:17:00,879
有了这个，但基本上，您可以将其视为任何类型的PBFT样式协议

152
00:17:00,879 --> 00:17:05,200
您知道基于法定人数的协议确实试图拥有像坚硬的最终确保的协议

153
00:17:05,200 --> 00:17:10,640
我们只是将其放在UM的基础工作选择上，例如Lindy Ghost，基本上是

154
00:17:10,640 --> 00:17:16,280
尝试在我们的基本协议中获得最终效果的好处。

155
00:17:17,240 --> 00:17:19,120
是的，这基本上就是以太坊今天的样子。

156
00:17:19,120 --> 00:17:25,960
我们有一堆插槽，其中32个形成了一个时代。

157
00:17:26,920 --> 00:17:32,780
对于每个插槽，我们选举一个委员会，该委员会是从我们的验证者中选择的伪随机

158
00:17:32,780 --> 00:17:33,100
放。

159
00:17:34,560 --> 00:17:38,620
基本上，每个插槽看起来都像LMD幽灵，或多或少。

160
00:17:38,619 --> 00:17:44,299
但是，在时代的水平上，我们有一个Caspar Fuji操作，试图最终确定内容。

161
00:17:44,939 --> 00:17:48,219
因此，这就像我们拥有的两层。

162
00:17:49,019 --> 00:17:53,539
是的，基本上是在时代的层面上，看起来像这样。

163
00:17:53,779 --> 00:17:56,239
但是在每个插槽中，它看起来像是一个lambda鬼。

164
00:17:57,219 --> 00:18:02,399
正式思考它的一种方法是这种N波段流程的模型，

165
00:18:02,400 --> 00:18:09,680
协议，我们基本上将其视为在两种模式下操作。

166
00:18:09,680 --> 00:18:15,700
基本上，我们俩都担心网络部分同步，这意味着我们很友善

167
00:18:15,700 --> 00:18:20,780
想担心网络可能不是同步的时间期间，而是

168
00:18:20,780 --> 00:18:24,640
我们还想看看一旦它变得同步会发生什么。

169
00:18:24,640 --> 00:18:30,960
因此，这是PBFT协议的标准模型。

170
00:18:30,960 --> 00:18:37,520
基本上，我们关心的另一件事是非标准的

171
00:18:37,520 --> 00:18:41,880
我们想看看如果参与是动态的，会发生什么。

172
00:18:41,880 --> 00:18:47,060
因此，基本上，如果验证者来来去去，有时他们会离线，也许有

173
00:18:47,060 --> 00:18:53,759
一半的验证者脱机，而其中的一个重大不可预测的活动

174
00:18:53,759 --> 00:19:01,460
案例，就像普通的BFT协议一样，像Casper一样，基本上会停止

175
00:19:01,460 --> 00:19:04,259
功能，因为您将无法形成这三分之二的表格。

176
00:19:05,099 --> 00:19:11,599
是的，所以这部分，您知道，因为我们看这个参与模式，我们基本上是

177
00:19:11,599 --> 00:19:17,700
想要将此属性称为动态可用性，从本质上讲，

178
00:19:17,700 --> 00:19:23,359
在我们的情况下，可用的链条是LMD Ghost，这种事情本身还在继续

179
00:19:23,359 --> 00:19:25,159
在我们达到最终状态之前。

180
00:19:25,740 --> 00:19:28,639
我们希望它能安全和生活，就像基本上一样工作

181
00:19:28,639 --> 00:19:30,399
只要网络是同步的。

182
00:19:30,859 --> 00:19:33,439
即使我们有动态参与，

183
00:19:34,259 --> 00:19:37,199
有点忽略这些事情，没关系。

184
00:19:38,199 --> 00:19:41,240
是的，除此之外，我们基本上想要结局，

185
00:19:41,240 --> 00:19:44,959
就像，我们确实想要那样，你知道

186
00:19:45,000 --> 00:19:47,079
只要网络变得同步

187
00:19:47,079 --> 00:19:50,319
而且我们的参与很高，我们可以完成。

188
00:19:50,759 --> 00:19:52,399
因此，最终链基本上是活的。

189
00:19:52,400 --> 00:19:56,700
当然，最终链也将是安全的，但这几乎是默认情况下。

190
00:19:56,840 --> 00:19:57,920
这很容易。

191
00:19:58,880 --> 00:20:04,600
然后，我们拥有这两个链，即最终链和非预设链。

192
00:20:05,000 --> 00:20:07,740
我们不希望他们彼此无关。

193
00:20:07,820 --> 00:20:14,780
我们希望他们拥有此前缀属性，其中最终链基本上就像整个链的前缀。

194
00:20:14,779 --> 00:20:18,579
因此，就我们而言，您知道，最终块总是或喜欢

195
00:20:19,019 --> 00:20:21,500
如果您看以太坊链的尖端，

196
00:20:22,059 --> 00:20:24,180
最终确定的块总是在其后面。

197
00:20:24,180 --> 00:20:27,180
它们不像与它们无关的随机不同块。

198
00:20:28,619 --> 00:20:31,220
尚未

199
00:20:32,500 --> 00:20:34,819
为了确保前缀的此属性，

200
00:20:35,139 --> 00:20:39,940
我们基本上必须以某种方式融合在一起

201
00:20:39,940 --> 00:20:44,180
您知道这两个协议都像它一样，它变得很漂亮。

202
00:20:44,779 --> 00:20:49,579
就我们而言，我们以这种混合叉选择来做到这一点，基本上不是说

203
00:20:49,579 --> 00:20:55,059
只需运行LMD Ghost，我们就会说从最新合理的检查点运行LMD Ghost。

204
00:20:55,680 --> 00:20:57,420
粗略地说，这并不是那样的发展。

205
00:20:57,480 --> 00:21:01,039
有一些细节，但是，在很高的水平上，这是重要的事情。

206
00:21:01,480 --> 00:21:07,440
因此，基本上，在这里您可以看到一些应用程序框，有些事情正在进行，有些块

207
00:21:07,440 --> 00:21:08,240
正在投票。

208
00:21:08,559 --> 00:21:09,940
下一个应用程序框，同一件事。

209
00:21:09,940 --> 00:21:13,680
这个块是合理的

210
00:21:13,680 --> 00:21:15,480
而且这个块已最终确​​定

211
00:21:15,480 --> 00:21:17,980
就像基本上有这个超级多数链接

212
00:21:17,980 --> 00:21:20,799
这使这个块证明了

213
00:21:20,799 --> 00:21:23,180
然后从这里到这里的另一个链接

214
00:21:23,180 --> 00:21:25,259
这使得最终确定，这是合理的

215
00:21:25,259 --> 00:21:27,100
所以这是卡斯珀G的水平

216
00:21:27,100 --> 00:21:29,820
现在这是最新的合理

217
00:21:29,820 --> 00:21:34,080
就像你知道最高时代的街区

218
00:21:34,080 --> 00:21:34,920
这是合理的

219
00:21:34,920 --> 00:21:37,660
我们从此开始我们的叉子选择

220
00:21:37,660 --> 00:21:39,680
然后从这里运行LMD

221
00:21:39,680 --> 00:21:43,840
因此，它将运行它在这种圆圈的第三块

222
00:21:44,980 --> 00:21:48,240
是的，那么我们就可以成为链的头。

223
00:21:48,240 --> 00:21:53,180
因此，从这里到这里结束的这种橙色的东西，

224
00:21:53,180 --> 00:21:56,620
而蓝色的链条就像是，你知道，

225
00:21:56,620 --> 00:21:59,980
最终链的负责人是最新的最终块。

226
00:22:00,340 --> 00:22:03,720
是的，基本上是从最新有道理的堡垒开始

227
00:22:03,720 --> 00:22:05,640
足以确保它是财产

228
00:22:05,640 --> 00:22:10,920
因为最新的理由始终是最新最终确定的后代，因此可以确保

229
00:22:10,920 --> 00:22:16,680
一切都奏效了，除非我的意思是，除非有一个巨大的削减。

230
00:22:18,440 --> 00:22:26,200
是的，一个问题是，LMD Ghost最初是在Gaspar实施的，有很多问题，

231
00:22:26,759 --> 00:22:30,840
我将尝试通过其中一些，并为您提供直觉

232
00:22:30,840 --> 00:22:35,560
存在问题以及我们可以对它们做的事情，以及我们已经为其中一些做的事情，

233
00:22:35,559 --> 00:22:57,619
因此，我猜最初存在的最烦人的问题是，这确实是一个巨大的打破问题，直到解决问题之前，这就是一个所谓的前任reorg，这是一个reorg攻击，这是由对手提前设定的。

234
00:22:57,619 --> 00:23:03,159
通常，您会考虑某人提出的障碍，有人是参与者，

235
00:23:03,159 --> 00:23:05,399
然后，您以后再重新修复。

236
00:23:05,399 --> 00:23:08,639
但是在这里，您以某种方式提前设置了Reorg。

237
00:23:08,639 --> 00:23:10,819
从某种意义上说，这类似于自私采矿。

238
00:23:10,819 --> 00:23:14,679
您扣留一些东西，然后稍后透露它们。

239
00:23:14,679 --> 00:23:20,279
因此，在这种情况下，是的，基本上，对手拒绝了这一障碍和投票。

240
00:23:20,279 --> 00:23:23,579
因此，诚实的人，他们投票支持上一块，因为他们只是不知道

241
00:23:23,579 --> 00:23:25,799
任何东西。

242
00:23:25,799 --> 00:23:31,559
这就是它的意思，因为它不是完全的边界。

243
00:23:31,559 --> 00:23:37,139
是的，那么一位nautilus提议者就在这一方面建立了一个街区，因为他们又不

244
00:23:37,139 --> 00:23:39,180
对此一无所知。

245
00:23:39,180 --> 00:23:45,559
最后，对手揭示了一切，此时，这是在这个障碍之后

246
00:23:45,559 --> 00:23:50,779
已经建造了，但是在驻扎之前，

247
00:23:50,779 --> 00:23:55,039
这两件事发生了，对手设法揭示了一切正确的事

248
00:23:55,039 --> 00:23:59,480
它在正确的时间，以便这个人，这个提议者不知道应该

249
00:23:59,480 --> 00:24:07,639
建立在这个基础上，但此插槽的每个测试仪都会及时知道这一点。

250
00:24:07,639 --> 00:24:12,059
因此，他们最终要做的就是他们最终测试了这一测试，然后分叉

251
00:24:12,059 --> 00:24:17,180
这个，因为他们看到这个块在那里并且有一定的重量。

252
00:24:17,180 --> 00:24:21,859
然后您继续，即使下一个家伙是诚实的，此时，这个已经是

253
00:24:21,859 --> 00:24:29,139
通过没有自己的错来解决。

254
00:24:29,139 --> 00:24:33,199
我想三年前，这是一开始的状态。

255
00:24:33,199 --> 00:24:36,599
基本上，当Beacon连锁店启动时，这是一项攻击。

256
00:24:36,599 --> 00:24:37,599
你可以做到这一点。

257
00:24:37,599 --> 00:24:40,979
例如，巴纳巴斯在测试网上做到了这一点。

258
00:24:40,979 --> 00:24:44,099
当时有点有趣，因为您实际上本可以在Main上这样做

259
00:24:44,099 --> 00:24:49,639
网络，只是人们不知道。

260
00:24:49,640 --> 00:24:58,940
解决此问题是所谓的提议者的提升，这基本上是一种方法

261
00:24:58,940 --> 00:25:05,860
从某种意义上说，回到鬼魂，这是LMD Ghost和Ghost之间的混合体

262
00:25:05,860 --> 00:25:12,060
基本上，它仅仅是因为它是一个块，即使它是一个块

263
00:25:12,060 --> 00:25:13,300
没有任何选票。

264
00:25:13,300 --> 00:25:19,420
因此，在幽灵中，以前的攻击不会单独起作用，因为一旦您

265
00:25:19,420 --> 00:25:21,920
您提出了一个块，块是其自身的重量。

266
00:25:21,920 --> 00:25:24,259
就像，块本身具有重量。

267
00:25:24,259 --> 00:25:27,180
因此，ProposerBoost基本上是在说，好的，

268
00:25:27,180 --> 00:25:29,500
一旦提出一个块，至少暂时

269
00:25:29,500 --> 00:25:32,519
对于一个插槽，您将得到一点体重

270
00:25:32,519 --> 00:25:34,440
这种使您能够保护自己

271
00:25:34,440 --> 00:25:37,519
反对这一点，有可能证明。

272
00:25:37,519 --> 00:25:40,940
因此，在我们的情况下，PropoSerboost设置为40％

273
00:25:40,940 --> 00:25:42,820
一个委员会的体重。

274
00:25:42,820 --> 00:25:45,240
因此，如果对手控制少于40％，

275
00:25:45,240 --> 00:25:47,500
基本上无法进行此攻击，

276
00:25:47,500 --> 00:25:50,920
因为这个红色泡沫将小于40％，所以

277
00:25:50,920 --> 00:25:53,200
基本上，Proposerboost将获胜。

278
00:25:53,200 --> 00:25:54,599
这只是暂时的重量。

279
00:25:54,599 --> 00:25:56,059
在插槽结束时，它消失了。

280
00:25:56,059 --> 00:26:02,039
但是好事是一旦它消失了

281
00:26:02,039 --> 00:26:04,240
在插槽结束时，与此同时

282
00:26:04,240 --> 00:26:07,180
更多的证明将堆积在这个街区。

283
00:26:07,180 --> 00:26:09,200
这个插槽的证明会到来，

284
00:26:09,200 --> 00:26:12,140
因此，他们应该照顾好事。

285
00:26:12,140 --> 00:26:17,220
所以这是真的，但仍然不完全如此。

286
00:26:17,220 --> 00:26:21,519
仍然有一些攻击，因为如果您确实控制了某些验证器，

287
00:26:22,120 --> 00:26:26,500
即使不是40％，如果您确实控制了40％，则实际上可以进行此攻击。

288
00:26:27,620 --> 00:26:32,620
这应该是40％，然后您实际上可以进行相同的攻击，然后击败提议者

289
00:26:32,620 --> 00:26:32,900
促进。

290
00:26:34,039 --> 00:26:38,019
问题是，您可以以少于40％的速度进行操作，因为例如，如果您控制

291
00:26:38,019 --> 00:26:42,380
连续两个插槽，现在您可以扣留两个块和两个红色气泡。

292
00:26:42,720 --> 00:26:44,779
因此，这些是不同委员会的不同投票。

293
00:26:44,779 --> 00:26:48,079
因此，例如，如果这是20％，则可以再次进行此攻击。

294
00:26:48,079 --> 00:26:51,879
一旦您连续控制两个插槽，就可以进行此攻击。

295
00:26:51,879 --> 00:26:54,079
那就是你今天可以做的。

296
00:26:54,079 --> 00:26:56,579
今天，如果您控制20％，则可以尝试这样做。

297
00:26:56,579 --> 00:26:59,839
如果您可以连续控制更多的插槽，

298
00:26:59,839 --> 00:27:03,319
您需要控制更少的对手能力才能做到这一点。

299
00:27:03,319 --> 00:27:08,720
当然，在某个时候，如果您的对抗力量很小，

300
00:27:08,720 --> 00:27:11,859
您连续控制许多块的可能性很小。

301
00:27:11,859 --> 00:27:16,379
这就是为什么这不是超级突破问题的原因。

302
00:27:16,379 --> 00:27:18,899
但是当然，拥有20％的人并不理想

303
00:27:18,899 --> 00:27:21,619
可以去做这个reorg，甚至10％

304
00:27:21,619 --> 00:27:25,539
如果您连续有四个插槽或类似的插槽。

305
00:27:25,539 --> 00:27:27,539
但是，是的，但这就是今天的状态。

306
00:27:27,539 --> 00:27:30,000
再一次，基本上，这就是发生的事情

307
00:27:30,000 --> 00:27:32,159
如果您这样做。

308
00:27:32,159 --> 00:27:34,039
您基本上会克服提议者的提升

309
00:27:34,039 --> 00:27:37,279
通过与以前的时间进行相同的揭示。

310
00:27:37,279 --> 00:27:39,539
现在，诚实的证明者会证明这一点，

311
00:27:39,539 --> 00:27:41,459
因为他们会看到红色的气泡是

312
00:27:41,460 --> 00:27:45,620
不仅仅是提议者的提升

313
00:27:45,620 --> 00:27:50,340
基本上赢了并分散了这一奖项。

314
00:27:50,340 --> 00:27:52,799
那是的，让我跳过。

315
00:27:52,799 --> 00:27:58,259
我的意思是这只是另一种策略

316
00:27:58,259 --> 00:28:02,180
您尝试一下，我的意思是类似的原则，不是完全相同，但是是的，您基本上尝试了

317
00:28:02,180 --> 00:28:11,140
只是设置了一个诚实的人在两个分支之间拖上触发的情况，就像

318
00:28:11,140 --> 00:28:13,420
您保持两个分支保持平衡，

319
00:28:13,420 --> 00:28:15,660
而且您使用自己的选票，例如这些红色泡沫，

320
00:28:15,660 --> 00:28:18,300
来回翻转。

321
00:28:18,300 --> 00:28:20,020
提议者Boost也有所帮助，

322
00:28:20,020 --> 00:28:22,480
因为在这一点上，您将有

323
00:28:22,480 --> 00:28:24,440
这些绿色投票非常相似，

324
00:28:24,440 --> 00:28:28,300
这个红色的泡沫试图以一种或另一种方式打破领带。

325
00:28:28,300 --> 00:28:31,560
但是随后提议者提升，只要是

326
00:28:31,560 --> 00:28:33,720
除了这些红色的气泡，还可以照顾好事

327
00:28:33,720 --> 00:28:36,360
并确保任何提议者碰巧看到的一切

328
00:28:36,360 --> 00:28:38,100
实际上是人们要做的。

329
00:28:38,100 --> 00:28:39,759
但同样，这很容易受到攻击，

330
00:28:39,759 --> 00:28:43,359
如果您可以控制比Boost更多的机器人，那可能是一个问题。

331
00:28:44,400 --> 00:28:50,240
因此，存在这些攻击，我们该怎么办？而且，我的意思是，当然

332
00:28:50,240 --> 00:28:54,799
理想情况下，您想要的，您不想想出某种补丁，但是您会

333
00:28:54,799 --> 00:28:59,680
想要一个理论上安全的协议，尤其是一个可用的链条，然后有

334
00:28:59,680 --> 00:29:06,400
整个终结性的内容，但是，我的意思是，那部分就像在我们的协议中起作用，但是您会

335
00:29:06,400 --> 00:29:11,440
希望基本上要修复此可用链，以便在理论上确实安全，可能

336
00:29:11,440 --> 00:29:15,759
就像以最佳方式一样，您可以证明它没有任何这些攻击。

337
00:29:16,960 --> 00:29:24,320
是的，基本上，第一件事是试图改善提议者的提升。所以有这个想法

338
00:29:24,320 --> 00:29:30,560
这就是所谓的ViewMerge，我认为此时更像是一种思考的工具

339
00:29:30,559 --> 00:29:37,759
在某种程度上容易获得更好的协议，这不一定是您知道我们应该的东西

340
00:29:37,759 --> 00:29:43,019
可以肯定在某个时候放入协议，但我认为将其用作考虑的方式很有帮助

341
00:29:43,019 --> 00:29:48,659
如果不适合这个，那可能是一种简单的说法。

342
00:29:48,659 --> 00:29:54,339
基本上可能不会工作，所以基本上是要使插槽

343
00:29:54,339 --> 00:29:59,399
或喜欢在插槽中引入一张新面孔，验证者基本上冻结了他们的观点的含义

344
00:29:59,400 --> 00:30:04,980
他们基本上要缓冲新的证明，并在此之后出现。

345
00:30:05,540 --> 00:30:09,640
然后，如果提议者这样说，他们只有在下一个插槽中投票时考虑他们。

346
00:30:09,820 --> 00:30:12,200
如果提议者告诉他们，嘿，我知道这一证明。

347
00:30:12,600 --> 00:30:14,360
如果您的缓冲区中有它，请考虑。

348
00:30:14,660 --> 00:30:20,160
这基本上是很多这些攻击试图偷偷摸摸的攻击

349
00:30:20,160 --> 00:30:22,820
提议者看不到，但其他人会这样做。

350
00:30:23,660 --> 00:30:27,120
在这里，基本上，人们给提议者带来了一些优势。

351
00:30:27,119 --> 00:30:33,439
因此，他们在提议者之前冻结了自己的观点，以便周围的任何东西

352
00:30:34,399 --> 00:30:38,879
提案截止日期，人们将在缓冲区中，而不是他们认为，因为

353
00:30:39,679 --> 00:30:42,639
基本上，他们已经预先冻结了自己的观点。

354
00:30:43,519 --> 00:30:50,399
并试图使它更清楚，基本上，假设我是视图的验证者

355
00:30:50,399 --> 00:30:56,479
冻结时间，所以在提案之前的三角洲之前，我有这种观点，这只是全部

356
00:30:56,480 --> 00:30:58,539
我知道的所有证明投票。

357
00:31:00,640 --> 00:31:02,019
你一直在闲聊，

358
00:31:02,019 --> 00:31:03,519
所以你收到的东西，

359
00:31:03,519 --> 00:31:06,420
希望建议者也会像Delta一样收到。

360
00:31:06,420 --> 00:31:09,299
因此，提议者应该比认证者更了解

361
00:31:09,299 --> 00:31:11,980
应该比证明人更有看法。

362
00:31:11,980 --> 00:31:13,640
现在，提议者将提出建议

363
00:31:13,640 --> 00:31:15,319
基于此观点。

364
00:31:15,319 --> 00:31:17,819
因此，这是信息选择的原因，

365
00:31:17,819 --> 00:31:19,400
它会告诉它链的头是什么，

366
00:31:19,400 --> 00:31:22,339
它应该告知B建立B的位置。

367
00:31:22,339 --> 00:31:25,500
然后基本上，提议者也

368
00:31:25,500 --> 00:31:29,899
提出b时，将其视图与B一起发送。

369
00:31:29,899 --> 00:31:32,059
因此，它基本上发送了某种

370
00:31:32,059 --> 00:31:35,099
它可能考虑到哪些消息的摘要

371
00:31:35,099 --> 00:31:36,299
这样做时。

372
00:31:36,299 --> 00:31:39,299
然后这个验证者完成了此合并，

373
00:31:39,299 --> 00:31:41,379
这是冻结的视图

374
00:31:41,379 --> 00:31:43,419
并将其与提议者的观点合并

375
00:31:43,419 --> 00:31:44,899
并获得新的视图。

376
00:31:44,899 --> 00:31:47,959
而现在，因为提议者的观点

377
00:31:47,959 --> 00:31:50,339
是其冷冻视图的超集，

378
00:31:50,339 --> 00:31:52,339
这基本上是要同意提议者。

379
00:31:52,339 --> 00:32:00,819
关于要考虑的消息。是的，这基本上可以解决或改善此问题，

380
00:32:00,819 --> 00:32:07,859
因为我们现在可以确保的是，无论对手从本质上做什么，

381
00:32:08,579 --> 00:32:14,019
不管对手有多强大，所有诚实的证明者，所以在这里这个绿色泡沫，

382
00:32:14,019 --> 00:32:17,939
将证明一个诚实的建议。因此，这里有一些事情正在发生，有些平衡，

383
00:32:17,939 --> 00:32:22,019
一些摇摆票，这些试图混淆事物的红色气泡，没关系

384
00:32:22,019 --> 00:32:27,460
因为所有诚实的证明者都看到与建议者相同的块3，所以YouTube视图合并，

385
00:32:27,460 --> 00:32:31,379
因此，他们都证明了这一点。因此，所有诚实的投票，他们都会去他们应该的地方

386
00:32:31,379 --> 00:32:36,579
去，这是诚实的建议。再说一次，这都是对手多么强大

387
00:32:36,579 --> 00:32:43,059
是。但这仍然不是整个故事，即使我们可以实施此视图合并，

388
00:32:43,059 --> 00:32:50,819
因为X-Hunter的工作仍然是可能的，如果您能够控制足够

389
00:32:50,819 --> 00:32:57,700
对手是，这些人将投票赞成这个诚实的建议。此问题仍然是

390
00:32:58,819 --> 00:33:04,019
对手可以揭示更多的选票，然后回到另一个连锁店。因此，在这种情况下，

391
00:33:04,019 --> 00:33:10,019
就像，您知道，这里有一个绿色的气泡，但是这里基本上有三个红色泡沫。所以

392
00:33:10,019 --> 00:33:15,700
对手可以连续控制几个插槽，并取决于它具有多少功率，这些，这些，

393
00:33:15,700 --> 00:33:20,259
您知道，三个红色气泡可能比绿色气泡更强大。像，如果对手

394
00:33:20,259 --> 00:33:28,819
我不知道控件，我想30％或类似的东西就足够了。是的，我不知道

395
00:33:28,819 --> 00:33:35,460
关于确切的数字，但不难看到这可能发生的方式。因此，基本上，

396
00:33:35,460 --> 00:33:40,500
考试树钩仍然是可能的。现在，为什么仍然可能的根本原因是我们

397
00:33:40,500 --> 00:33:46,019
有委员会。因此，如果您还记得这张照片，您知道，我们有汇总，就像我们有

398
00:33:46,019 --> 00:33:51,539
一个验证者集，然后我们将其分为整个时期的委员会。

399
00:33:52,339 --> 00:33:58,579
这是问题所在，因为LMD，最新消息意味着每个信息

400
00:33:58,579 --> 00:34:04,819
验证者，我们只计算了大多数投票。但是在整个委员会中，每个委员会中

401
00:34:04,819 --> 00:34:08,820
有不同的验证器。因此，这些投票和这些投票基本上是不一致的。它是

402
00:34:08,820 --> 00:34:10,280
这只是不同的验证器。

403
00:34:10,280 --> 00:34:12,059
因此，这些投票加起来。

404
00:34:12,059 --> 00:34:16,680
就像您在插槽之间或跨插槽之间一样，

405
00:34:16,680 --> 00:34:17,980
体重可以加起来。

406
00:34:17,980 --> 00:34:21,320
所以这三个红色的气泡

407
00:34:21,320 --> 00:34:26,320
总体加起来的重量是1的三倍。

408
00:34:26,320 --> 00:34:30,320
这本质上是允许对手的原因

409
00:34:30,320 --> 00:34:33,640
为了节省并压倒诚实的投票，

410
00:34:33,640 --> 00:34:35,220
因为在这些情况下诚实的人

411
00:34:35,220 --> 00:34:37,860
只有一个气泡。

412
00:34:37,860 --> 00:34:42,660
基本上，是的，简单的解决方案是取消委员会，只是停止使用委员会。

413
00:34:42,660 --> 00:34:46,019
但是这是什么意思？实际上，每个人都应该投票

414
00:34:46,019 --> 00:34:50,660
像以太坊中的每个验证者都需要投票，以便没有可能

415
00:34:50,660 --> 00:34:57,380
积累。这种绿色泡沫意味着以太坊中存在的所有诚实验证者，

416
00:34:57,380 --> 00:35:02,099
不仅是这个委员会。当然，它的引号很简单，因为它实际上并不简单，

417
00:35:02,099 --> 00:35:05,759
鉴于我们至少在理论上有多少验证者。

418
00:35:07,380 --> 00:35:11,960
但是现在，让我们假装有这个VIP

419
00:35:11,960 --> 00:35:14,699
这实际上是进入伊莱克斯（Maxib）的伊莱克斯（Electra）。

420
00:35:15,460 --> 00:35:17,360
基本上，你知道，

421
00:35:17,360 --> 00:35:20,339
那里的想法是允许验证者巩固其股份。

422
00:35:20,440 --> 00:35:23,739
因此，您可以拥有一个拥有2,000个股份的验证器

423
00:35:23,739 --> 00:35:26,559
或类似的东西，并实际收集验证器集。

424
00:35:26,739 --> 00:35:30,759
因此，也许最终我们可以立即让所有人投票，

425
00:35:30,760 --> 00:35:32,980
这是关键的事情。

426
00:35:33,440 --> 00:35:37,140
并假设我们已经做到了，我们已经解决了这个问题

427
00:35:37,140 --> 00:35:39,860
并取消委员会，我们终于可以

428
00:35:40,480 --> 00:35:42,820
可靠的可用链？

429
00:35:43,180 --> 00:35:45,740
事实证明我们可以。

430
00:35:45,740 --> 00:35:49,560
因此，有一段时间以前我们写了一篇论文

431
00:35:49,900 --> 00:35:53,000
这就是我们的LMD幽灵，基本上就像一个非常简单的

432
00:35:53,000 --> 00:35:55,360
LMD幽灵的修改。

433
00:35:55,360 --> 00:35:58,080
它要做的第一件事是查看合并。

434
00:35:58,080 --> 00:36:00,620
因此，我们有这个冻结时期，这种观点合并了。

435
00:36:00,760 --> 00:36:04,200
基本上要替换PropoSerboost。再次，这是，

436
00:36:04,200 --> 00:36:11,240
诚实的建议都由所有诚实的志愿者投票。是的，这基本上就是

437
00:36:11,240 --> 00:36:16,520
不管这里发生了什么事，所有的绿色人都去这里。然后没有委员会

438
00:36:16,520 --> 00:36:23,320
因此，我们以某种方式摆脱了有委员会，每个人都立即投票。当然，

439
00:36:23,320 --> 00:36:26,480
这很容易，但实际上不是。

440
00:36:26,480 --> 00:36:29,800
基本上，这是什么是

441
00:36:29,800 --> 00:36:32,940
如果所有诚实的验证者都同意某事

442
00:36:32,940 --> 00:36:35,460
在一个插槽中，就像他们都投票给同一件事一样，

443
00:36:35,460 --> 00:36:37,539
那么这个东西永远不可能被重新纠正。

444
00:36:37,539 --> 00:36:41,620
所以，你知道，在这里，这些人都投票

445
00:36:41,620 --> 00:36:44,600
对于绿色的东西，我们就这样，就像

446
00:36:44,600 --> 00:36:47,960
重新说明我们仍然走的地方，你知道，你知道，

447
00:36:47,960 --> 00:36:50,160
我们仍然去这里，因为我们有委员会，

448
00:36:50,160 --> 00:36:52,880
但是，就像我们得到的一样，是的，图片应该改变，

449
00:36:52,880 --> 00:36:53,940
但是我想我没有。

450
00:36:53,940 --> 00:36:56,860
但是，是的，一旦我们摆脱了委员会，

451
00:36:56,860 --> 00:37:01,099
然后，一旦每个人都在这里投票，

452
00:37:01,099 --> 00:37:03,640
然后，我们将永远不会摆脱这一点。

453
00:37:03,640 --> 00:37:05,559
每个人都会继续建立这座链条。

454
00:37:05,559 --> 00:37:07,119
这是因为这真的

455
00:37:07,119 --> 00:37:09,160
至少一半的整个验证器集，

456
00:37:09,160 --> 00:37:10,940
就像大多数验证者一样。

457
00:37:10,940 --> 00:37:13,820
因此，对手没有办法压倒这一点

458
00:37:13,820 --> 00:37:16,840
因为他们无法积累选票。

459
00:37:16,840 --> 00:37:20,480
就像基本上这些红色气泡一样，

460
00:37:20,480 --> 00:37:22,660
他们也将是重叠的气泡，

461
00:37:22,659 --> 00:37:27,219
对手可以重复相同的选票，但一天结束时他们只计数一次。

462
00:37:28,500 --> 00:37:32,980
基本上，他们为我们提供了这个称为Reorg弹性的财产，

463
00:37:32,980 --> 00:37:37,299
这就是诚实的提议永远不会是重新的。因此，诚实的建议被每个人投票，

464
00:37:37,859 --> 00:37:41,699
诚实，一旦所有人都投票了，那么它就永远不会得到重新核心。

465
00:37:43,219 --> 00:37:47,299
然后，是的，另一件事是，也许我要跳过这个，

466
00:37:47,300 --> 00:37:49,580
我只是要简短地告诉你，

467
00:37:49,580 --> 00:37:52,940
就像我们的LMD GO中的R代表董事会到期一样，

468
00:37:52,940 --> 00:37:56,900
基本上是某个时候

469
00:37:56,900 --> 00:37:59,539
您停止计算太老的证明。

470
00:37:59,539 --> 00:38:00,660
因此，经过一定数量的插槽，

471
00:38:00,660 --> 00:38:02,480
您只需停止计数他们的体重。

472
00:38:02,480 --> 00:38:06,519
因此，例如，在这里，就像这些证明一样，

473
00:38:06,519 --> 00:38:09,480
它们太老了，您只是不再考虑它们了。

474
00:38:09,480 --> 00:38:13,120
这与这个概念有关

475
00:38:13,120 --> 00:38:15,380
动态可用性，基本上是弹性的

476
00:38:15,380 --> 00:38:21,519
一堆人离线的情况，这意味着我们总是可以在

477
00:38:21,519 --> 00:38:24,680
验证者的大部分脱机。

478
00:38:24,680 --> 00:38:28,840
也许简短地，是的，基本上，情况就是这样。

479
00:38:28,840 --> 00:38:36,780
想象一下，某种程度上，所有诚实验证者都完全分为两分，两个叉子之间

480
00:38:36,780 --> 00:38:43,380
但是基本上是这些，它们已经离线了，就像验证器集的一半是

481
00:38:43,380 --> 00:38:48,500
离线um链条继续在这里，因为红色的贡献很小

482
00:38:48,500 --> 00:38:55,059
使您基本上知道这方面的人的体重更大，因此他们继续投票

483
00:38:55,059 --> 00:39:02,740
最新船在这里，但是红船呃回到这里

484
00:39:05,059 --> 00:39:11,780
哦，是的，是的，基本上是红色的船，um返回另一个连锁店，现在我们有了

485
00:39:11,780 --> 00:39:17,540
一个重复

486
00:39:17,540 --> 00:39:22,660
因为这些绿色气泡是相同的，所以在这里，红船加入了这个

487
00:39:22,660 --> 00:39:27,620
像这样的陈旧船的联盟应该是这些人离线很老

488
00:39:27,620 --> 00:39:32,340
他们不再投票了，但是他们的投票仍然存在，而是，是的

489
00:39:32,340 --> 00:39:38,420
每个人都在这里重新校园，我们可以像一个很长的reorg um一样，但是是的

490
00:39:38,420 --> 00:39:40,700
这不会发生，因为最终，这些投票

491
00:39:40,700 --> 00:39:41,400
只是过期。

492
00:39:41,400 --> 00:39:45,099
因此，这种重新订购的时间可以限制多长时间。

493
00:39:45,099 --> 00:39:47,180
一旦到期，对手

494
00:39:47,180 --> 00:39:48,780
真的什么都不做。

495
00:39:48,780 --> 00:39:50,460
这些投票都是

496
00:39:50,460 --> 00:39:53,639
基本上，这一点很重要。

497
00:39:53,639 --> 00:39:55,579
现在，好吧，我们基本上有成分

498
00:39:55,579 --> 00:39:58,340
具有单一的软单元 - 小概括。

499
00:39:58,340 --> 00:40:00,599
基本上，现在，所有这些事情，

500
00:40:00,599 --> 00:40:03,320
我们已经在论文中构建了它。

501
00:40:03,320 --> 00:40:05,240
但是在这里，它只是为您提供了这个主意。

502
00:40:05,239 --> 00:40:11,199
但是，我们已经在我们关心的模型中构建了一个基本的可用链。

503
00:40:12,759 --> 00:40:18,859
基本上，现在我们想将其纳入单板最终协议。

504
00:40:18,979 --> 00:40:23,439
因此，基本上将其放在一起，再次放在上面，再次是Casper 5G或一些最终的小工具，

505
00:40:23,439 --> 00:40:27,939
并恢复了我们今天所拥有的东西，但在一个插槽中最终确定了

506
00:40:28,359 --> 00:40:30,319
实际上是安全的。

507
00:40:30,799 --> 00:40:34,599
因此，它没有所有这些奇怪的攻击和边缘案例。

508
00:40:35,239 --> 00:40:40,239
因此，大概的想法，实际上让我们跳过这个。

509
00:40:42,399 --> 00:40:47,399
是的，基本上试图制定这样的协议的想法

510
00:40:47,419 --> 00:40:52,419
是或喜欢一种简单的方法来确保

511
00:40:52,899 --> 00:40:56,399
事情起作用，这基本上就是

512
00:40:56,399 --> 00:40:59,179
就像我认为所有已知的协议一样

513
00:40:59,179 --> 00:41:03,379
在此模型中是建立的，是基本上您只尝试

514
00:41:03,380 --> 00:41:08,500
最终确定的块已经由基础可用协议确认，因此在我们的情况下

515
00:41:08,500 --> 00:41:14,500
LMD Ghost在这里得到确认，这意味着像潜在的协议已经很友善

516
00:41:14,500 --> 00:41:19,460
您可以认为这是一定程度的安全性，您可以将其视为深处

517
00:41:19,460 --> 00:41:24,260
最长的连锁店就像一个块一样，就像埋在最长的链中，你不认为那是

518
00:41:24,260 --> 00:41:31,619
就像比特币一样，您知道确认规则，您只想尝试

519
00:41:31,619 --> 00:41:36,099
最终确定这些东西，例如被确认的东西，例如埋葬的深度或其他方式

520
00:41:36,099 --> 00:41:40,579
确定这是不应重新改造的。这就像基本上做

521
00:41:40,579 --> 00:41:43,859
这两个协议之间的相互作用，因为我们是一种协议，并且

522
00:41:43,859 --> 00:41:48,339
就像将一个互动和所有这些互动放在上面一样，它使它们变得更好，

523
00:41:48,339 --> 00:41:52,019
因为基本上只要事情正在起作用，就像只要这种确认规则

524
00:41:52,019 --> 00:41:58,659
基础协议正在起作用，此最终性小工具不会干扰它。基本上

525
00:41:58,659 --> 00:42:04,539
它只能最终确定已经将永远不会被重新改造的内容。

526
00:42:05,819 --> 00:42:08,659
我们只需要担心，好的，如果某事破裂怎么办

527
00:42:08,659 --> 00:42:09,699
在基础协议中？

528
00:42:10,420 --> 00:42:13,219
也许有一段时间的异步，有些攻击，

529
00:42:13,339 --> 00:42:15,179
以及基础协议中断断续续的东西。

530
00:42:15,819 --> 00:42:18,940
然后，好吧，我们将尝试从中恢复过来，

531
00:42:19,139 --> 00:42:21,039
但是，可能会有奇怪的互动。

532
00:42:21,319 --> 00:42:23,639
而且，好的，我们必须确保处理这些处理，

533
00:42:24,259 --> 00:42:27,059
这不是超级容易的，但是可行。

534
00:42:27,059 --> 00:42:33,380
因此，因此，以前图片中缺少的一件事是

535
00:42:33,380 --> 00:42:37,460
我们真的没有确认规则，或者像我们这样做的那样，我没有明确说出来，但是

536
00:42:37,460 --> 00:42:43,699
这不是一个快速的确认规则。基本上，这再次与KDIP相似，

537
00:42:43,699 --> 00:42:49,299
就像那种最长的链一样。而且，是的，基本上，我们想要一个快速的

538
00:42:49,299 --> 00:42:54,420
因为我们想快速最终确定。确认后，我们只能最终确定。管道就像

539
00:42:54,420 --> 00:43:01,700
提出一个块，确认，确定它或证明其合理性，最终确定它。所以，如果你想单身

540
00:43:01,700 --> 00:43:06,659
插槽最终性，我们应该在一个插槽中确认它。因此，我们基本上添加了另一个阶段

541
00:43:06,659 --> 00:43:14,340
到我们的插槽以进行快速确认。我们要做的基本上说，如果收到三分之二的块

542
00:43:14,340 --> 00:43:18,500
整个验证器集中的Quorum，因为现在请记住整个验证器的三分之二

543
00:43:18,500 --> 00:43:21,800
每个插槽都会投票，

544
00:43:21,800 --> 00:43:24,300
然后，您在此阶段确认它。

545
00:43:25,199 --> 00:43:28,460
是的，基本上关键是

546
00:43:28,460 --> 00:43:31,679
一旦您在这里确认，还有更多时间，

547
00:43:31,679 --> 00:43:35,619
像另一个子插槽之前，在冻结您的视图之前，

548
00:43:35,619 --> 00:43:38,000
就像您停止考虑新事物之前一样。

549
00:43:38,000 --> 00:43:41,000
因此，如果有人诚实在这里确认

550
00:43:41,000 --> 00:43:43,260
然后他们在这里发送此表格

551
00:43:43,260 --> 00:43:45,400
每个人都会考虑到它

552
00:43:45,400 --> 00:43:47,239
在他们的冻结视野中。

553
00:43:47,239 --> 00:43:49,739
是的，基本上，这是与以前相同的图片。

554
00:43:49,739 --> 00:43:51,859
我们就像，这是视图合并部分。

555
00:43:51,859 --> 00:43:54,199
但是不知何故，我们到达这里。

556
00:43:54,199 --> 00:43:56,779
每个人都投票。

557
00:43:56,779 --> 00:44:00,559
因此，此验证者将发送此证明

558
00:44:00,559 --> 00:44:03,679
对于B块B。其他许多人也在做同样的事情。

559
00:44:03,679 --> 00:44:05,259
他们都投票支持B。

560
00:44:05,259 --> 00:44:08,119
如果这是一个诚实的插槽，则此视图合并管道有效。

561
00:44:08,119 --> 00:44:11,199
每个人都投票支持B和IT法定人数。

562
00:44:11,199 --> 00:44:13,399
所以现在，我们正在快速确认。

563
00:44:13,399 --> 00:44:15,439
每个验证者，诚实验证者，

564
00:44:15,440 --> 00:44:18,119
要为b看到这个法定人数。

565
00:44:18,119 --> 00:44:20,300
然后他们将其发送到。

566
00:44:20,300 --> 00:44:23,099
到人们冻结的时候

567
00:44:23,099 --> 00:44:26,599
他们在下一个插槽中的观点，这些冰冻的景色，

568
00:44:26,599 --> 00:44:28,980
他们都包含这个法定人数。

569
00:44:28,980 --> 00:44:31,880
基本上，这就是实现确认规则的原因

570
00:44:31,880 --> 00:44:35,960
工作，实际上可以说，

571
00:44:35,960 --> 00:44:38,240
如果有人确认，有人诚实，

572
00:44:38,240 --> 00:44:40,740
那么此块将不会被重新排序。

573
00:44:40,740 --> 00:44:44,440
它实际上是有意义地确认的，

574
00:44:44,440 --> 00:44:46,860
基本上是确认规则的安全性。

575
00:44:46,860 --> 00:44:49,720
是的，基本上我们确实有这样的保证

576
00:44:49,720 --> 00:44:51,599
只要我们具有网络同步，

577
00:44:51,599 --> 00:44:54,059
您知道这总是必要的

578
00:44:54,059 --> 00:44:58,079
除非您确定和诚实多数。

579
00:44:58,079 --> 00:44:59,659
同样的事情，我们需要诚实的多数

580
00:44:59,659 --> 00:45:02,059
除非一旦您确定了，那就很好，

581
00:45:02,059 --> 00:45:03,820
您有更强的保证。

582
00:45:04,720 --> 00:45:06,519
因此，这个想法基本上是

583
00:45:06,519 --> 00:45:09,179
如果诚实的验证器快速确认b，

584
00:45:09,179 --> 00:45:10,400
然后其他人，

585
00:45:10,400 --> 00:45:12,740
每个诚实的验证者都会看到法定人数

586
00:45:12,739 --> 00:45:15,099
在冻结视线之前。

587
00:45:15,099 --> 00:45:18,619
这基本上是

588
00:45:18,619 --> 00:45:20,779
因此，让我们从基本上看一下图片

589
00:45:20,779 --> 00:45:21,299
看起来像。

590
00:45:21,299 --> 00:45:23,159
好，假设这个B是

591
00:45:23,159 --> 00:45:24,079
快速确认。

592
00:45:24,079 --> 00:45:27,899
因此，每个人都看到B。

593
00:45:27,899 --> 00:45:30,559
然后可能有些在这个法定人数中的人，

594
00:45:30,559 --> 00:45:32,619
因为这个法定人可能不是全诚实的人，

595
00:45:32,619 --> 00:45:34,500
可能也是恶意的人

596
00:45:34,500 --> 00:45:35,739
他们可能已经将其等效到了。

597
00:45:35,739 --> 00:45:38,299
因此，他们可能也投票赞成其他事情。

598
00:45:38,299 --> 00:45:41,339
在这种情况下，它在我们的协议中的工作方式

599
00:45:41,340 --> 00:45:42,960
是您基本上会拿走那个重量。

600
00:45:42,960 --> 00:45:44,519
就像您知道投票处于爆发状态一样，

601
00:45:44,519 --> 00:45:46,079
您只是不算它的体重。

602
00:45:46,079 --> 00:45:46,920
因此，在这种情况下，您知道，

603
00:45:46,920 --> 00:45:49,559
这东西至少要有三分之二的负E。

604
00:45:49,559 --> 00:45:51,380
喜欢前期。

605
00:45:51,380 --> 00:45:53,519
任何其他竞争者都可能是

606
00:45:53,519 --> 00:45:55,220
可能是其中的一堆，但是无论如何，你知道，

607
00:45:55,220 --> 00:45:58,079
此时，我们正在评估这个块

608
00:45:58,079 --> 00:46:01,340
以及所有其他以下的重量，

609
00:46:01,340 --> 00:46:05,460
基本上，任何其他与之竞争的兄弟姐妹。

610
00:46:05,460 --> 00:46:07,559
无论它需要什么，

611
00:46:07,559 --> 00:46:08,860
它将不到三分之一。

612
00:46:08,860 --> 00:46:11,880
基本上，剩余的选票小于三分之一。

613
00:46:11,880 --> 00:46:13,579
然后模棱两可就没关系

614
00:46:13,579 --> 00:46:15,079
因为您无论如何都不算​​它们。

615
00:46:15,079 --> 00:46:18,160
因此，只要e小于三分之一，我们就很好。

616
00:46:18,160 --> 00:46:20,800
像那时，剩下的不备票的投票

617
00:46:20,800 --> 00:46:23,480
将击败任何其他竞争者。

618
00:46:23,480 --> 00:46:26,599
因此，基本上，这意味着每个人

619
00:46:26,599 --> 00:46:30,220
从冰冻的角度来看，这样的事情将会变成

620
00:46:30,220 --> 00:46:34,180
看到B有足够的选票支持，以获胜，

621
00:46:34,180 --> 00:46:35,300
基本上是规范。

622
00:46:35,300 --> 00:46:37,340
因此，在下一个插槽中，它将投票支持它。

623
00:46:37,340 --> 00:46:41,960
然后，正如我们之前已经谈论过的那样，

624
00:46:41,960 --> 00:46:45,700
如果下一个插槽中的每个人都对B或B的第3台投票

625
00:46:45,700 --> 00:46:47,420
可能是这里有一个建议，

626
00:46:47,420 --> 00:46:49,400
然后每个人都投票赞成该提议。

627
00:46:49,400 --> 00:46:51,559
但是无论如何，这是针对B的低于3的

628
00:46:51,559 --> 00:46:53,960
然后，它永远不会重新订购

629
00:46:53,960 --> 00:46:55,720
只要这是匿名的多数。

630
00:46:55,720 --> 00:46:58,160
例如，如果这些是整个有效数据集的一半以上，

631
00:46:58,160 --> 00:47:00,880
他们都投票支持B，然后很好，基本上。

632
00:47:00,880 --> 00:47:04,860
这就是为什么快速确认的原因。

633
00:47:04,860 --> 00:47:06,940
我不知道为什么这张幻灯片在这里。

634
00:47:06,940 --> 00:47:11,320
但是，是的，哦，是的，对不起，基本上，这是我们的LMD幽灵，这是我们LMD幽灵的结构。

635
00:47:12,059 --> 00:47:13,539
然后，我们添加了快速的确认。

636
00:47:14,559 --> 00:47:22,500
然后，现在我们添加了一些特定于Casper 5G的内容，以将其实际转变为最终确定协议。

637
00:47:22,900 --> 00:47:23,940
这是最后一步。

638
00:47:24,440 --> 00:47:27,079
所以在这里我们只有头船。

639
00:47:27,079 --> 00:47:34,800
因此，您知道，今天的证明包含一艘头船，这只是说，您知道，您认为是链的头。

640
00:47:34,800 --> 00:47:37,920
但是随后他们还包含Casper FFG投票。

641
00:47:37,920 --> 00:47:39,860
在这里，您只是进行投票。

642
00:47:39,860 --> 00:47:41,900
和我们的LMD鬼一样

643
00:47:41,900 --> 00:47:43,500
没有最终的地方。

644
00:47:44,360 --> 00:47:47,340
然后在这里，我们有快速的确认

645
00:47:47,340 --> 00:47:48,620
然后进行FFG投票。

646
00:47:48,620 --> 00:47:51,220
因此，首次投票，然后进行FFG投票。

647
00:47:51,220 --> 00:47:54,420
然后，我们将视图冻结以使视图合并以工作。

648
00:47:54,420 --> 00:47:56,019
然后是这个确认，

649
00:47:56,019 --> 00:47:58,019
这基本上是另一种投票。

650
00:47:58,019 --> 00:48:00,019
所以一天结束时的样子

651
00:48:00,019 --> 00:48:01,019
基本上，

652
00:48:01,019 --> 00:48:04,679
因此，让我们首先进行此操作。

653
00:48:04,679 --> 00:48:07,579
是的，所以叉子的选择与以前相同，

654
00:48:07,579 --> 00:48:08,619
这个混合叉的选择。

655
00:48:08,619 --> 00:48:11,599
之前，您从最新的合理开始，

656
00:48:11,599 --> 00:48:14,079
然后，您运行RLMD-GHOST。

657
00:48:14,079 --> 00:48:18,119
FFG的投票是通过这种方式定义的，类似于今天。

658
00:48:18,119 --> 00:48:21,539
最新的理由是投票的来源。

659
00:48:21,539 --> 00:48:24,239
然后是目标块，所以你

660
00:48:24,239 --> 00:48:27,599
想要添加此链接，该链接来自最新合理的

661
00:48:27,599 --> 00:48:31,019
这是您试图最终确定的东西

662
00:48:31,019 --> 00:48:32,480
到一些目标。

663
00:48:32,480 --> 00:48:34,679
同样，基本上，目标是

664
00:48:34,679 --> 00:48:36,980
这有可能成为合理的理由，

665
00:48:36,980 --> 00:48:39,780
这是您试图证明合理的事情。

666
00:48:39,780 --> 00:48:44,159
因此，您希望对此进行确认，以便如果有的话

667
00:48:44,159 --> 00:48:48,039
进入此理由确定管道

668
00:48:48,039 --> 00:48:49,820
它开始影响第四个选择。

669
00:48:49,820 --> 00:48:51,320
因此，我们从最新的合理开始。

670
00:48:51,320 --> 00:48:55,219
因此，我们要确保最新的合理是

671
00:48:55,219 --> 00:48:58,480
强大的安全保证。

672
00:48:58,480 --> 00:49:00,780
因此，您从确认的块开始，

673
00:49:00,780 --> 00:49:03,900
就像基本上是您所知道的最好的块一样。

674
00:49:06,160 --> 00:49:09,120
好的，确认最高的块从合理的

675
00:49:09,120 --> 00:49:12,120
因为这与此强制选择规则相吻合。

676
00:49:12,120 --> 00:49:17,120
是的，基本上，确认只是您说的，

677
00:49:17,120 --> 00:49:20,940
哦，如果这里有合理的理由，我知道。

678
00:49:20,940 --> 00:49:24,860
就像是合理的，您只是承认您对此有所了解。

679
00:49:24,860 --> 00:49:31,840
这与下一个插槽中的基本相同

680
00:49:31,840 --> 00:49:33,920
您要进行FFG投票

681
00:49:33,920 --> 00:49:35,760
将此块作为源。

682
00:49:35,760 --> 00:49:38,039
如果您没有考虑太多，这有点令人困惑

683
00:49:38,039 --> 00:49:41,000
关于Casper-ffg，但您可以基本上考虑

684
00:49:41,000 --> 00:49:42,420
这只是两轮投票，

685
00:49:42,420 --> 00:49:44,099
通常的两轮投票

686
00:49:44,099 --> 00:49:46,880
需要在ppft，casper-ffg中最终确定，

687
00:49:46,880 --> 00:49:48,320
在所有这些协议中。

688
00:49:48,320 --> 00:49:50,820
因此，这基本上只是第二轮投票。

689
00:49:50,820 --> 00:49:53,200
因此，基本上管道的样子，好的，

690
00:49:53,199 --> 00:49:59,139
提出了街区，闲聊，人们对此进行投票，所以他们说，哦，这是我的头

691
00:49:59,139 --> 00:50:05,539
链条，然后人们基本上是一个法定人物形式，这是在这里得到的

692
00:50:05,539 --> 00:50:10,859
确认，就像人们看到法定人数一样，他们确认了，如果他们确认，他们可以施放FFG

693
00:50:10,859 --> 00:50:16,219
将其作为目标投票，这基本上试图证明它是合理的。现在，如果一群人

694
00:50:16,219 --> 00:50:22,439
做到这一点，是FFG投票的法定形式，它是合理的，就像在这里一样，每个人都知道

695
00:50:22,440 --> 00:50:24,900
这是合理的，他们都承认这一点。

696
00:50:24,900 --> 00:50:28,700
他们都用知识冻结了自己的观点

697
00:50:28,700 --> 00:50:29,960
它是合理的。

698
00:50:29,960 --> 00:50:33,119
他们发送了新的投票，并将其最终确定。

699
00:50:33,119 --> 00:50:35,579
因此，到插槽结束时，我们已经经历了所有的

700
00:50:35,579 --> 00:50:38,639
阶段，例如确认，理由，最终确定，

701
00:50:38,639 --> 00:50:40,860
那是必要的。

702
00:50:40,860 --> 00:50:43,500
是的，这基本上是单槽的最终结局。

703
00:50:43,500 --> 00:50:47,780
是的，在一个诚实的位置上，这真的会

704
00:50:47,780 --> 00:50:49,539
看起来完全像这样。

705
00:50:49,539 --> 00:50:51,039
我们不能保证这就是什么

706
00:50:51,039 --> 00:50:52,739
每个插槽都会看起来像

707
00:50:52,739 --> 00:50:56,039
但是对于同步等诚实的老虎机，

708
00:50:56,039 --> 00:50:57,659
然后看起来像这样。

709
00:50:57,659 --> 00:51:00,360
基本上，一个诚实的建议者会做

710
00:51:00,360 --> 00:51:02,380
及时的惯例提案B，

711
00:51:03,420 --> 00:51:06,300
我们可以保证通过V合并

712
00:51:06,300 --> 00:51:09,279
每个人都对B进行了票数的投票

713
00:51:09,279 --> 00:51:11,079
它将形成法定人数。

714
00:51:12,039 --> 00:51:14,360
然后每个人都看到这个法规，

715
00:51:14,360 --> 00:51:16,539
大家确认，快速确认，

716
00:51:16,539 --> 00:51:21,279
并基本上使用BT，例如T是插槽。

717
00:51:21,279 --> 00:51:26,079
因此，检查点就像一个块和插槽，

718
00:51:26,079 --> 00:51:28,960
或者，我的意思是，在我们当前的协议中，

719
00:51:28,960 --> 00:51:31,719
但是在这里，时代和老虎机是同一件事，

720
00:51:31,719 --> 00:51:33,300
由于单细胞的终结性。

721
00:51:33,300 --> 00:51:36,420
是的，基本上，您施放了此链接，

722
00:51:36,420 --> 00:51:39,239
就像您发送投票一样，基本上是链接的投票，

723
00:51:39,239 --> 00:51:41,699
最新有道理的BT。

724
00:51:41,699 --> 00:51:43,659
每个人都有同样的最新合理

725
00:51:43,659 --> 00:51:44,539
因为视图合并。

726
00:51:44,539 --> 00:51:47,420
提议者可以帮助每个人看到相同的最新

727
00:51:47,420 --> 00:51:49,159
有理由。

728
00:51:49,159 --> 00:51:51,820
再次，这些形式的法定人数。

729
00:51:51,820 --> 00:51:55,659
因此，现在每个人都看到BT是合理的。

730
00:51:55,659 --> 00:51:57,900
他们基本上承认这个事实，

731
00:51:57,900 --> 00:52:00,480
然后这导致了最终状态。

732
00:52:00,480 --> 00:52:02,679
然后到这个时候，每个人都应该

733
00:52:02,679 --> 00:52:05,940
已经看到B最终确定。

734
00:52:05,940 --> 00:52:07,519
这只是一边。

735
00:52:07,519 --> 00:52:09,860
如果您对这些事情感兴趣，

736
00:52:09,860 --> 00:52:17,460
最近的某种情况，这里的一个最近的发展是，基本上是

737
00:52:17,880 --> 00:52:20,440
我们想拥有一个链条协议。

738
00:52:20,920 --> 00:52:24,740
因此，您知道，这个协议，一切都在一个插槽中发生，这很好。

739
00:52:24,820 --> 00:52:25,860
就像，您在一个插槽中最终确定它。

740
00:52:26,280 --> 00:52:30,220
但这也是我的意思是，这意味着我们有三轮投票，

741
00:52:30,340 --> 00:52:33,680
尤其是，您知道，电台有聚集。

742
00:52:33,680 --> 00:52:37,460
与大验证器组合投票的投票涉及很多高架。

743
00:52:37,460 --> 00:52:46,360
但是，我们想要拥有的是一个很好的事情，就是拥有一个链条协议，您只需在每个插槽中投票一次即可。

744
00:52:46,519 --> 00:52:47,679
这基本上就是我们今天拥有的，对吗？

745
00:52:47,740 --> 00:52:51,659
就像，今天您刚刚证明，您在每个插槽中提出并证明。

746
00:52:51,920 --> 00:52:54,139
而且，好的，聚集，但是，您只投票一次。

747
00:52:54,139 --> 00:53:01,239
甚至Casper 5G本身，如果您在时代的水平上考虑它，它也是束缚的。

748
00:53:01,239 --> 00:53:07,759
因为在一个时期内，您同时试图证明某事并确定

749
00:53:07,759 --> 00:53:08,759
上一件事。

750
00:53:08,759 --> 00:53:12,199
因此，您同时进行两个阶段。

751
00:53:12,199 --> 00:53:15,900
例如，如果您知道什么，您不会等待，例如

752
00:53:15,900 --> 00:53:16,900
Tendermint是。

753
00:53:16,900 --> 00:53:23,039
Tendermint基本上做一个法定人，另一个法定人数最终确定了事物，然后

754
00:53:23,039 --> 00:53:24,039
继续前进。

755
00:53:24,039 --> 00:53:29,159
因此，对于富士来说，这是相当快的，基本上，我们将尝试最终确定

756
00:53:29,159 --> 00:53:32,400
已经证明并证明新事物合理的事情。

757
00:53:32,400 --> 00:53:40,000
因此，它试图从本质上转向一个步骤，或者一次执行两个步骤。

758
00:53:40,000 --> 00:53:43,239
因此，我们想在这里做同样的事情。

759
00:53:43,239 --> 00:53:48,679
是的，基本上，事实证明它可以使它起作用，但是

760
00:53:48,679 --> 00:53:51,679
事实证明，似乎有一些修改可以起作用。

761
00:53:51,679 --> 00:53:54,919
我不会详细介绍它的外观，

762
00:53:54,919 --> 00:53:58,259
但基本上，归根结底，高水平

763
00:53:58,259 --> 00:53:59,440
看起来就是这样。

764
00:53:59,440 --> 00:54:02,440
基本上，我们在这里有三个插槽。

765
00:54:02,440 --> 00:54:05,359
所以这是插槽。

766
00:54:05,359 --> 00:54:08,059
基本上，管道本质上是

767
00:54:08,059 --> 00:54:09,259
你提出了什么。

768
00:54:09,259 --> 00:54:10,719
同样，这是出于诚实的建议。

769
00:54:10,719 --> 00:54:12,659
它会这样奏效。

770
00:54:12,659 --> 00:54:16,839
每个人都为B组投票，B被确认。

771
00:54:16,839 --> 00:54:21,199
因此，在一个插槽中，我们仍然

772
00:54:21,199 --> 00:54:25,039
这种快速确认的事情，基本上唯一的区别是我们只有一轮

773
00:54:25,039 --> 00:54:32,079
表决。基本上，这是今天，您证明，您发送了一笔投票，FFG投票捆绑在一起，

774
00:54:32,079 --> 00:54:36,960
同时完成这两种事情，实际上是三件事。他们确实为头投票

775
00:54:36,960 --> 00:54:43,439
链条，FFG投票和FFG投票立即做两件事，因为Casperfg再次是

776
00:54:43,439 --> 00:54:49,519
管道上，因此FFG投票的目标正在试图证明某些事情是合理的，而FFG的来源

777
00:54:49,519 --> 00:54:54,960
投票正试图最终确定某些内容，因此您就像一次真正地进行三票一样

778
00:54:54,960 --> 00:55:00,559
要确认一个可以证明一个符合嗯的合理性，所以是的，基本上B将被确认

779
00:55:01,280 --> 00:55:07,440
一旦您到达这里，每个人都会知道B被确认他们将使用BT作为他们的

780
00:55:07,440 --> 00:55:12,960
目标是这样，这是您试图证明合理的事情，然后进入下一个插槽

781
00:55:12,960 --> 00:55:18,400
将UH BT用作您的来源，因此现在您正在尝试基本上最终确定它，因此它可以通过

782
00:55:18,400 --> 00:55:24,000
在三个插槽内确认，合理和最终确定。从某种意义上说，这是更好的。

783
00:55:24,000 --> 00:55:32,079
这需要一些并发症。从共识中写罗伯托的人一直在工作

784
00:55:32,079 --> 00:55:39,280
在这个规格上，因为我们觉得这可能是该协议的好版本

785
00:55:39,280 --> 00:55:43,039
尝试将其写下来。是的，这实际上是

786
00:55:43,039 --> 00:55:47,200
正在进行的工作。如果您不知道，也许您可​​能会参与其中，

787
00:55:47,199 --> 00:55:53,759
受虐狂，你喜欢这些东西，是的

788
00:55:55,119 --> 00:55:59,759
我猜更像是SSF相关的事物，通常只是董事会就像技术一样

789
00:56:00,719 --> 00:56:05,919
在第四个选择中的UH中，我只是想使用剩下的时间来

790
00:56:05,919 --> 00:56:11,119
概述了其他一些选择适合的其他事项

791
00:56:11,119 --> 00:56:14,960
以太坊路线图，因为事实证明它像在您真正的许多地方弹出

792
00:56:14,960 --> 00:56:18,260
他不希望它弹出，但不幸的是它确实如此。

793
00:56:18,260 --> 00:56:22,720
因此，在我们继续前进之前，我们可以有一秒钟的问题吗？

794
00:56:22,720 --> 00:56:23,519
是的，当然。

795
00:56:23,519 --> 00:56:25,159
抱歉，是的，是的。

796
00:56:25,159 --> 00:56:26,300
是的，没关系。

797
00:56:26,300 --> 00:56:27,639
所以要消化很多。

798
00:56:27,639 --> 00:56:32,840
所以有一个问题，是的，

799
00:56:32,840 --> 00:56:35,420
因此，如果您可以详细说明，什么是BLS签名

800
00:56:35,420 --> 00:56:41,179
在SSF方案中计数限制或插槽？

801
00:56:41,179 --> 00:56:43,639
关于这是否是限制？

802
00:56:43,639 --> 00:56:51,159
插槽中BLS签名计数的限制是什么？

803
00:56:51,159 --> 00:56:55,199
我的意思是，如今，我们想，我们汇集了

804
00:56:55,199 --> 00:56:58,759
就像每个插槽大约3,000票一样，

805
00:56:58,759 --> 00:57:01,219
因为大约有100万个验证者

806
00:57:01,219 --> 00:57:04,579
像每个委员会中的30万一样，

807
00:57:04,579 --> 00:57:06,500
或在委员会中。

808
00:57:06,500 --> 00:57:11,539
因此，我们和乔治一起提出了这个两层

809
00:57:11,539 --> 00:57:14,380
聚集基本上您今天要做的事情，

810
00:57:14,380 --> 00:57:17,420
但是对于一群并行的委员会。

811
00:57:17,420 --> 00:57:19,900
然后你有点汇总

812
00:57:19,900 --> 00:57:24,340
并尝试使更多的委员会参与

813
00:57:24,340 --> 00:57:26,380
本质上是一次。

814
00:57:26,380 --> 00:57:31,000
事实证明，看起来，是的，这在某种程度上很好，

815
00:57:31,000 --> 00:57:36,599
但这确实遇到了某种限制

816
00:57:36,599 --> 00:57:39,300
主要部分是验证

817
00:57:39,300 --> 00:57:45,620
最后，您最终得到的最终巨大的事情是，在最坏的情况下，您必须这样做

818
00:57:45,620 --> 00:57:52,019
大型Pubkeys，这似乎是有限的，也部分是

819
00:57:52,019 --> 00:57:58,500
这一切的网络，但我认为更多的验证瓶颈。所以这就是

820
00:57:58,500 --> 00:58:04,340
哦，如果您必须这样做，我认为是一百万验证者，佐治亚州的一些基准，

821
00:58:04,340 --> 00:58:10,300
然后，在某些情况下，您知道，在Raspberry Pi上可能需要36秒或其他东西。

822
00:58:10,300 --> 00:58:18,559
而且它非常可行，但是它仍然在更好的机器上，也许我

823
00:58:18,559 --> 00:58:28,260
不知道，就像一秒钟，两秒钟，具体取决于它的平行程度，它是一种边界

824
00:58:28,260 --> 00:58:30,559
我要说的是不切实际的。

825
00:58:30,559 --> 00:58:36,480
完全摆脱了您可能要做的事情的范围，但仍然不是很

826
00:58:36,480 --> 00:58:39,119
您今天可能想做的事情。

827
00:58:39,119 --> 00:58:42,320
所以，是的，我希望那种回答您的问题。

828
00:58:42,320 --> 00:58:46,820
太感谢了。

829
00:58:46,820 --> 00:58:53,779
所以另一个问题是关于幻灯片35，我不知道该怎么

830
00:58:53,779 --> 00:58:54,779
看到数字。

831
00:58:54,779 --> 00:58:56,779
哦，好吧，我可以看到。

832
00:58:56,780 --> 00:59:03,100
是的，是的，关于视图的合并，如果提议者是诚实的，如果是

833
00:59:03,100 --> 00:59:12,220
提议者是诚实的，什么都没有

834
00:59:12,220 --> 00:59:19,820
他们无法阻止，所以也许让我们去这里，嗯，如果有人诚实投票，他们的投票就会得到

835
00:59:19,820 --> 00:59:24,700
在所有人冻结之前，所有诚实的投票都将在冷冻的观点中，我的意思是

836
00:59:24,699 --> 00:59:30,619
假设网络是同步的。因此，提议者实际上不能做太多。它不能以某种方式

837
00:59:30,619 --> 00:59:35,899
审查诚实的投票，因为他们不依赖提议者最终成为最终合并观点。

838
00:59:36,699 --> 00:59:41,259
提案者唯一能做的就是基本上是让人们混淆较晚的选票。

839
00:59:41,259 --> 00:59:46,460
如果有一些只有在这里或这里出现的选票或类似的票，则建议者

840
00:59:46,460 --> 00:59:52,059
可能会向某些人或其他人发送一些合并信息，并使事情混淆，

841
00:59:52,059 --> 00:59:57,500
但这就是您已经可以像不诚实的建议者那样做的

842
00:59:57,500 --> 01:00:03,420
预扣和喜欢发布博客后期消息，这是您已经可以的东西

843
01:00:03,420 --> 01:00:09,019
这样做实际上不会给您更多的对抗力量，它是正式的

844
01:00:09,019 --> 01:00:14,940
实际上，我们实际上证明了该协议是安全的，因此事实证明是像

845
01:00:14,940 --> 01:00:17,220
对手实际上无法做任何事情。

846
01:00:20,000 --> 01:00:20,840
好吧，很棒。

847
01:00:21,700 --> 01:00:24,760
我认为我们可以继续前进到路线图PowerPoint

848
01:00:24,760 --> 01:00:26,280
然后，我们将留下更多问题。

849
01:00:26,280 --> 01:00:27,119
好的。

850
01:00:39,200 --> 01:00:40,940
好吧，是的。

851
01:00:40,940 --> 01:00:42,880
是的，好吧，我想我们到目前为止所说的话

852
01:00:42,880 --> 01:00:47,240
是一个单细胞的最终性，只是为了回顾我们的快速终结。

853
01:00:47,240 --> 01:00:49,059
它的好处基本上是

854
01:00:49,059 --> 01:00:51,260
首先，它是最佳安全的，

855
01:00:51,260 --> 01:00:52,780
就像证明是最佳安全的一样。

856
01:00:52,780 --> 01:00:55,260
否则我们可以获得协议

857
01:00:55,260 --> 01:00:57,840
就像我所描述的那样，即使在实践中也是如此。

858
01:00:57,840 --> 01:01:00,260
这些更像是论文和开始

859
01:01:00,260 --> 01:01:02,200
规格，但仍然有证据，

860
01:01:02,200 --> 01:01:04,099
他们获得了最佳的安全保证，

861
01:01:04,099 --> 01:01:08,920
因此，理想情况下，您基本上喜欢什么。

862
01:01:08,920 --> 01:01:15,960
因此，这是一回事，就像不必追逐贴片和这种攻击和攻击的修复，

863
01:01:15,960 --> 01:01:20,760
然后发生了另一次攻击，所有这些东西。那另一件事是我们有

864
01:01:20,760 --> 01:01:26,200
基本上，您知道，很明显，就像，这就是为什么您知道，您想要快速的最终决定，

865
01:01:26,200 --> 01:01:29,639
就像，您可以立即获得很好的保证，例如交易很多

866
01:01:29,639 --> 01:01:34,760
金钱，一旦发生结局，您很确定它不会被恢复。为了

867
01:01:34,760 --> 01:01:38,200
例如，交易所可以快速存款，

868
01:01:38,200 --> 01:01:41,120
您会得到更好的桥接，基本上是出于相同的原因，

869
01:01:41,120 --> 01:01:43,480
而且您可以获得更好的L2互操作性，

870
01:01:43,480 --> 01:01:44,900
这也是同样的原因

871
01:01:44,900 --> 01:01:46,520
基本上是更好的桥接。

872
01:01:48,000 --> 01:01:51,340
很快，一旦某些交易完成，L2，

873
01:01:51,340 --> 01:01:53,180
也许有证据

874
01:01:53,180 --> 01:01:54,640
如果您有快速的有效性证明，

875
01:01:54,640 --> 01:01:57,260
然后另一个L2可以与您交谈，

876
01:01:57,260 --> 01:01:59,820
迅速进行异步电话和类似的事情。

877
01:02:01,540 --> 01:02:04,500
然后，是的，它显示的其他两个项目，

878
01:02:04,500 --> 01:02:05,960
它出现在许多地方，

879
01:02:05,960 --> 01:02:09,940
但是也许人们熟悉的两件事是EPD，

880
01:02:09,940 --> 01:02:13,920
然后另一个是数据，数据可用性采样。

881
01:02:13,920 --> 01:02:16,880
因此，首先，在进行其中一些事情之前，

882
01:02:16,880 --> 01:02:21,119
让我们谈谈某种选择的变体

883
01:02:21,119 --> 01:02:23,500
事实证明这对于一堆很有用

884
01:02:23,500 --> 01:02:25,199
这些东西。

885
01:02:25,199 --> 01:02:27,719
是的，这称为“块插槽”。

886
01:02:27,719 --> 01:02:29,440
这个想法基本上是为了允许人们

887
01:02:29,440 --> 01:02:31,820
投票反对障碍。

888
01:02:31,820 --> 01:02:34,620
到目前为止，您可以只投票支持块。

889
01:02:34,620 --> 01:02:35,980
你不能说，哦，我不

890
01:02:35,980 --> 01:02:38,539
希望这个区块成为规范。

891
01:02:38,539 --> 01:02:40,380
在这里，您有点可以。

892
01:02:40,380 --> 01:02:45,180
或者，您可以将其视为投票支持一个空的插槽。

893
01:02:45,180 --> 01:02:47,940
因此，基本上，现状可能是您有块A，

894
01:02:47,940 --> 01:02:49,220
提出了B块。

895
01:02:49,220 --> 01:02:51,700
但是想象一下B块很晚。

896
01:02:51,700 --> 01:02:54,019
今天，决定截止日期为四秒钟。

897
01:02:54,019 --> 01:02:57,780
也许是5，或者3.9之类的东西。

898
01:02:57,780 --> 01:02:59,200
只有少数人看到了。

899
01:02:59,199 --> 01:03:02,179
这些人证明了这一点，但大多数人

900
01:03:02,179 --> 01:03:04,659
证明A，B的父母。

901
01:03:04,659 --> 01:03:09,599
因此，今天当然，这会发生，但是仍然

902
01:03:09,599 --> 01:03:11,299
像B有一些重量。

903
01:03:11,299 --> 01:03:13,939
这个重量是给B的父母

904
01:03:13,939 --> 01:03:18,119
因此，它仍然有助于B。从理论上讲，

905
01:03:18,119 --> 01:03:22,419
有一个警告，建议提示者也用于reorgs，

906
01:03:22,419 --> 01:03:25,899
但是，让我们把它搁置一旁。

907
01:03:25,899 --> 01:03:28,779
基本上，在这一点上，B仍然是链的头。

908
01:03:28,780 --> 01:03:31,060
相反，我们阻止了插槽，基本上会发生

909
01:03:31,060 --> 01:03:33,940
是的，而不是拥有这个块三，而是

910
01:03:33,940 --> 01:03:35,420
我们有一个块插槽三。

911
01:03:35,420 --> 01:03:39,100
因此，我们在插槽T中有一个。

912
01:03:39,100 --> 01:03:42,820
然后将有一个a处的a处t plus 1。

913
01:03:42,820 --> 01:03:47,300
我把那些已经超越了他们的插槽的蓝色。

914
01:03:47,300 --> 01:03:52,740
因此，在这里，基本上是说这个插槽是空的。

915
01:03:52,740 --> 01:03:55,900
这是说，哦，插槽T。

916
01:03:55,900 --> 01:04:01,180
然后，没有什么可以及时扩展到这个插槽了。

917
01:04:01,180 --> 01:04:05,200
因此，我们将这个占位符的t plus 1放在

918
01:04:05,200 --> 01:04:08,440
您应该在插槽t plus 1处伸展的方式一无所有，

919
01:04:08,440 --> 01:04:09,579
带一个空插槽。

920
01:04:09,579 --> 01:04:11,800
因此，在这种情况下，它将是相同的。

921
01:04:11,800 --> 01:04:15,280
一些人投票支持b t plus 1，一个非空的块

922
01:04:15,280 --> 01:04:17,380
或非空块插槽。

923
01:04:17,380 --> 01:04:19,980
但是很多人投票赞成这个空的人。

924
01:04:19,980 --> 01:04:21,639
实际上，空的人会赢，

925
01:04:21,639 --> 01:04:23,900
基本上将其放在块3中

926
01:04:23,900 --> 01:04:25,639
这样这些投票就不会交给父母

927
01:04:25,639 --> 01:04:29,299
但这是这样，这意味着实际上是这个空虚的东西

928
01:04:29,299 --> 01:04:30,980
可以击败这个。

929
01:04:30,980 --> 01:04:35,299
因此，如果这不是及时的，它将被重新排序。

930
01:04:35,299 --> 01:04:37,099
它永远不会成为规范。

931
01:04:37,099 --> 01:04:41,339
人们基本上对空块或插槽进行投票，

932
01:04:41,339 --> 01:04:47,879
它们基本上阻止了这件事成为规范。

933
01:04:47,879 --> 01:04:50,759
一个更大的例子，也许这个是及时的，

934
01:04:50,759 --> 01:04:53,519
因此，确实存在，但是没有任何选票。

935
01:04:53,519 --> 01:04:55,900
每个人都对此投票。

936
01:04:55,900 --> 01:05:00,400
然后，也许这个插槽是空的，每个人都喜欢在这里，

937
01:05:00,400 --> 01:05:02,079
也许提议者并没有出现。

938
01:05:02,079 --> 01:05:03,059
没有竞争者。

939
01:05:03,059 --> 01:05:05,559
每个人都投票赞成这个插槽为空。

940
01:05:05,559 --> 01:05:09,059
还有这个，但没有人投票。

941
01:05:09,059 --> 01:05:11,440
同样，还有这个，但没有人对此投票。

942
01:05:11,440 --> 01:05:14,219
但最后，在最后一个插槽中，我们

943
01:05:14,219 --> 01:05:17,059
对不起，有这样的情况，

944
01:05:17,059 --> 01:05:18,900
这个新块迟到了。

945
01:05:18,900 --> 01:05:20,840
因此，没有人投票赞成，因为它很晚。

946
01:05:20,840 --> 01:05:24,620
每个人都投票支持另一个空的B插槽，

947
01:05:24,620 --> 01:05:26,120
因此，在这种情况下，b，t plus 3。

948
01:05:26,120 --> 01:05:27,440
然后这变成了规范。

949
01:05:27,440 --> 01:05:30,559
所以现在我们有两个街区，两个空块

950
01:05:30,559 --> 01:05:32,340
有点扩展链。

951
01:05:32,340 --> 01:05:38,300
这是规范链，最终在这个空块中。

952
01:05:38,300 --> 01:05:42,500
是的，基本上，这就是它的样子

953
01:05:42,500 --> 01:05:43,780
有今天的第四个选择。

954
01:05:43,780 --> 01:05:46,800
就像来了一样，B来了，一切都很好。

955
01:05:46,800 --> 01:05:49,559
您是一个错过的插槽，人们投票给B。

956
01:05:49,559 --> 01:05:53,219
现在C迟到了，人们再次投票支持B。

957
01:05:53,219 --> 01:05:55,440
所以所有这些空的东西都消失了，

958
01:05:55,440 --> 01:05:58,779
B保持链的头。

959
01:05:58,779 --> 01:06:01,679
对不起，对不起，我的意思是，b在链中，

960
01:06:01,679 --> 01:06:04,619
但是C实际上是链的头，

961
01:06:04,619 --> 01:06:07,380
因为没有任何反对。

962
01:06:07,380 --> 01:06:09,219
没有空块。

963
01:06:09,219 --> 01:06:12,119
一旦您选择了叉子，就可以了A，B，

964
01:06:12,119 --> 01:06:14,940
然后只有一个孩子，所以你到了。

965
01:06:14,940 --> 01:06:18,900
在这里，您最终仍在B.

966
01:06:18,900 --> 01:06:26,660
它的某些应用很有用，一个是委员会可执行的一个非常通用的想法

967
01:06:26,660 --> 01:06:38,740
属性，这基本上是，如果某个提议的块不符合某个属性，

968
01:06:40,019 --> 01:06:45,940
证明委员会或证明者将投票支持空块，因此他们将投票反对，

969
01:06:45,940 --> 01:06:51,480
基本上可以说，我们不希望这个区块成为规范。

970
01:06:51,480 --> 01:06:57,280
因此，例如，包含列表的满意度，这不是当前建议，而是

971
01:06:57,280 --> 01:07:00,960
有一个原始建议之一使用了这种机制。

972
01:07:00,960 --> 01:07:05,059
因此，基本上，加入列表的执行基本上是基于

973
01:07:05,059 --> 01:07:08,940
一个委员会的看法，这个障碍是否满足我知道的包含清单

974
01:07:08,940 --> 01:07:09,940
关于？

975
01:07:09,940 --> 01:07:10,940
是的。

976
01:07:10,940 --> 01:07:11,940
好吧，太好了，我去做。

977
01:07:11,940 --> 01:07:14,079
不，那我将投票给空块。

978
01:07:14,079 --> 01:07:18,819
它并试图确保它不会变成规范，因为它无法满足这件事

979
01:07:18,819 --> 01:07:21,179
它应该满足。

980
01:07:21,179 --> 01:07:26,699
类似的事情是刻录地图，这基本上有一些投标，您会尝试确保

981
01:07:26,699 --> 01:07:33,239
该块提案最大化，它选择了最大的出价，您是您的最高

982
01:07:33,239 --> 01:07:37,719
看到一段时间，否则您会投票反对。

983
01:07:37,719 --> 01:07:41,879
另外两件事是EPB和DAS。

984
01:07:41,879 --> 01:07:44,319
因此，在EPB中，基本上

985
01:07:44,319 --> 01:07:47,439
提议者将接受建筑商的竞标。

986
01:07:47,439 --> 01:07:49,839
基本上，如果他们

987
01:07:50,919 --> 01:07:52,619
就像建议者可以做的一件事

988
01:07:52,619 --> 01:07:55,859
试图通过接受竞标但迟到来悲伤建造者，

989
01:07:55,859 --> 01:08:00,139
只需发布一个较晚的竞标的街区即可。

990
01:08:00,139 --> 01:08:02,879
然后，建造者会陷入尴尬的境地

991
01:08:02,879 --> 01:08:05,359
它不知道该怎么办。

992
01:08:05,360 --> 01:08:09,260
因此，它会阻碍很多，它执行及时性，

993
01:08:09,260 --> 01:08:12,519
它可以确保如果您不够提早发布，

994
01:08:12,519 --> 01:08:14,019
像该决定截止日期一样，

995
01:08:14,019 --> 01:08:17,360
那你就没有得到证明，

996
01:08:17,360 --> 01:08:18,560
然后它不会赢，

997
01:08:18,560 --> 01:08:21,420
就像它基本上是孤儿一样。

998
01:08:21,420 --> 01:08:24,739
因此，这可以使这种机制有些安全。

999
01:08:25,720 --> 01:08:28,579
是的，选择，这里的想法是

1000
01:08:30,319 --> 01:08:32,400
如果一个块不可用，

1001
01:08:32,400 --> 01:08:34,420
所以我的意思是，我们可以以这样的方式设置东西

1002
01:08:34,420 --> 01:08:39,420
通过抽样，最诚实的验证者，

1003
01:08:39,859 --> 01:08:42,899
即使他们都没有下载所有数据，

1004
01:08:42,899 --> 01:08:45,960
他们的抽样，但他们中的大多数会看到

1005
01:08:45,960 --> 01:08:47,159
该块不可用。

1006
01:08:47,159 --> 01:08:49,619
其中可能没有一小部分，没有，

1007
01:08:49,619 --> 01:08:51,579
但是他们中的大多数会投票反对

1008
01:08:51,579 --> 01:08:53,159
基本上是空块。

1009
01:08:53,159 --> 01:08:55,659
因此，由于块插槽，

1010
01:08:55,659 --> 01:08:57,640
无法获得的块将无法

1011
01:08:57,640 --> 01:09:00,260
成为规范，甚至看起来很典型，

1012
01:09:00,260 --> 01:09:03,399
含义，例如，如果您以某种方式不知道

1013
01:09:03,399 --> 01:09:05,539
他们不可用，你还是

1014
01:09:05,539 --> 01:09:07,119
不会以为它们是规范的。

1015
01:09:07,119 --> 01:09:09,279
即使出于某种原因，您的抽样失败了，

1016
01:09:09,279 --> 01:09:15,759
您可能被欺骗了一小部分数据

1017
01:09:15,759 --> 01:09:19,000
可用，这正是您要求的数据。

1018
01:09:19,000 --> 01:09:24,339
在此数据发布攻击中，有人针对您。

1019
01:09:24,339 --> 01:09:26,679
但是您仍然不会认为该块是规范的

1020
01:09:26,679 --> 01:09:28,159
仅仅因为您不会得到足够的体重。

1021
01:09:28,159 --> 01:09:29,679
因此，基本上，诚实的多数会

1022
01:09:29,679 --> 01:09:31,879
保护整个机制，这很好。

1023
01:09:31,880 --> 01:09:37,159
这也意味着，只要有诚实的多数，基本上就不会弄乱

1024
01:09:37,159 --> 01:09:42,279
有了共识，这是整个可用性的事情，我将稍后再解释。一

1025
01:09:42,279 --> 01:09:47,960
块插槽的问题（例如一个挑战）是，如果您确实具有更高的延迟，那么我又是我

1026
01:09:47,960 --> 01:09:55,159
说这会执行及时性，但有时封锁迟到只是一个试图做某事的人

1027
01:09:55,720 --> 01:10:01,800
很奇怪，一些攻击或定时游戏之类的东西，但有时会发生更高的延迟，

1028
01:10:01,800 --> 01:10:04,119
然后，您知道，如果是这样，

1029
01:10:04,180 --> 01:10:06,400
这些块不将其分为四秒钟，

1030
01:10:06,860 --> 01:10:07,760
他们不会被证明。

1031
01:10:08,000 --> 01:10:09,300
每个人都会证明空块。

1032
01:10:10,159 --> 01:10:11,239
块生产将停止。

1033
01:10:11,619 --> 01:10:12,880
因此，您知道，您将得到情况，

1034
01:10:13,000 --> 01:10:13,900
好吧，这个街区迟到了。

1035
01:10:14,260 --> 01:10:15,539
人们证明了空地。

1036
01:10:16,079 --> 01:10:18,680
然后，这是因为这个获胜，因为它赢了。

1037
01:10:19,619 --> 01:10:23,239
或者，对不起，是的，这个c应该扩展这一点。

1038
01:10:23,619 --> 01:10:24,720
这应该扩展这一点。

1039
01:10:24,779 --> 01:10:26,600
但是无论如何，是的，他们延长了空块

1040
01:10:26,600 --> 01:10:27,380
来到他们面前。

1041
01:10:27,779 --> 01:10:29,039
但是，无论如何，重点是

1042
01:10:29,039 --> 01:10:31,060
这些障碍都没有及时。

1043
01:10:31,060 --> 01:10:40,120
它永远不会得到它的电台，它不断增长，它没有做任何事情

1044
01:10:40,120 --> 01:10:46,760
基本上仍在信标链中陈述过渡，但实际上不会有任何内容，

1045
01:10:46,760 --> 01:10:50,060
像信标和执行内容一样。

1046
01:10:50,060 --> 01:10:56,560
所以，但这仍然是一个挑战，我想我应该对此说，所以一个重要的

1047
01:10:56,560 --> 01:11:00,800
尝试这样做的事情，如果需要的话，可以做块插槽，

1048
01:11:00,800 --> 01:11:06,700
基本上是设计某种后退系统，

1049
01:11:06,700 --> 01:11:09,820
这样做，如果发生这种情况，

1050
01:11:09,820 --> 01:11:13,720
我们以某种方式优雅地，也许优雅地失败了，

1051
01:11:13,720 --> 01:11:17,680
就像尝试恢复以某种方式将其关闭一样，

1052
01:11:17,680 --> 01:11:20,200
就像恢复为实际生产块一样，

1053
01:11:20,200 --> 01:11:24,660
即使这可能会损害某些障碍插槽的事情

1054
01:11:24,660 --> 01:11:25,360
帮助。

1055
01:11:25,359 --> 01:11:27,779
所以，是的，这实际上是一个悬而未决的问题。

1056
01:11:27,779 --> 01:11:29,779
我的意思是，我对这可以如何工作有一些想法。

1057
01:11:29,779 --> 01:11:34,579
但是我认为，如果人们对这个一般空间感兴趣

1058
01:11:34,579 --> 01:11:37,539
问题，我认为这是从字面上看的

1059
01:11:37,539 --> 01:11:41,299
任何人都可以进来花一些时间写信

1060
01:11:41,299 --> 01:11:43,380
一个不错的退缩协议。

1061
01:11:43,380 --> 01:11:46,479
我认为这将很有帮助。

1062
01:11:46,479 --> 01:11:49,299
是的，所以让我们来看看

1063
01:11:49,299 --> 01:11:52,399
事物如何适应APB，因为这也是

1064
01:11:52,399 --> 01:11:59,279
您知道，很开放的空间，有很多问题和解决方案很多，而且令人困惑，

1065
01:11:59,279 --> 01:12:03,739
因此，肯定有工作要做。

1066
01:12:03,739 --> 01:12:09,799
我想你们有一些，巴纳比说话，所以我假设你熟悉

1067
01:12:09,799 --> 01:12:15,239
E-PB或仅是E-PBS的一般想法，所以我认为我没有时间对此说太多，

1068
01:12:15,239 --> 01:12:21,199
但基本上，只是块生产的这一部分

1069
01:12:21,199 --> 01:12:23,800
流程，即竞标和接受投标。

1070
01:12:23,800 --> 01:12:25,559
所以在这里，提议者将接受

1071
01:12:25,559 --> 01:12:29,340
这个BIDP，在这种情况下就像标题执行标头一样。

1072
01:12:29,340 --> 01:12:33,340
然后建造者将揭示实际执行有效载荷

1073
01:12:33,340 --> 01:12:35,939
P，就像完整的事情一样。

1074
01:12:35,939 --> 01:12:37,800
因此，这只是对此的承诺。

1075
01:12:37,800 --> 01:12:40,960
因此，协议中提出的一件事之一

1076
01:12:40,960 --> 01:12:45,000
PBS或Shrine PBS是这种两槽方法，

1077
01:12:45,000 --> 01:12:46,819
从基本上是承诺部分的地方，

1078
01:12:46,819 --> 01:12:50,380
接受实际的BeaConproposer接受

1079
01:12:50,380 --> 01:12:53,060
有效载荷标头，它发生在自己的插槽中。

1080
01:12:53,060 --> 01:12:56,560
然后，有效载荷的揭示发生在自己的插槽中。

1081
01:12:56,560 --> 01:13:00,039
这样，它使事情变得不错，就像在某种意义上

1082
01:13:00,039 --> 01:13:02,420
就像很容易考虑安全性

1083
01:13:02,420 --> 01:13:05,119
参与者的参与者。

1084
01:13:05,119 --> 01:13:07,319
像每个人一样，作为提议者的行为

1085
01:13:07,319 --> 01:13:09,720
得到自己的证明。

1086
01:13:09,720 --> 01:13:11,500
您基本上可以将其视为

1087
01:13:11,500 --> 01:13:14,800
只要在当今的协议中，

1088
01:13:14,800 --> 01:13:17,340
建议者有某种良好的保证，

1089
01:13:17,340 --> 01:13:18,659
就像他们可以使用PropoSerboost

1090
01:13:18,659 --> 01:13:21,619
为了捍卫自己的攻击，足够的攻击，

1091
01:13:21,619 --> 01:13:24,119
然后在此协议中都在

1092
01:13:24,119 --> 01:13:26,279
应该有体面的保证。

1093
01:13:26,279 --> 01:13:29,039
现在，问题是我们再次面对

1094
01:13:29,039 --> 01:13:33,060
与Epps有些烦人一样，有一种令人讨厌的人

1095
01:13:33,060 --> 01:13:36,520
更强大的版本，基本上

1096
01:13:36,520 --> 01:13:38,659
因此，Exantery Orgs再次记住，这是这样的，

1097
01:13:38,659 --> 01:13:41,500
您扣留块和投票的地方，

1098
01:13:41,500 --> 01:13:43,520
然后，您透露他们尝试重新

1099
01:13:43,520 --> 01:13:45,239
在这种情况下，喜欢跳动，提出或提升，

1100
01:13:45,239 --> 01:13:46,779
并创建一个reorg。

1101
01:13:46,779 --> 01:13:48,380
它确实依赖于此，就像

1102
01:13:48,380 --> 01:13:50,520
积累投票权。

1103
01:13:50,520 --> 01:13:53,180
现在，这是同一件事的EPS版本，

1104
01:13:53,180 --> 01:13:56,300
但是现在，这些，就像两个，你知道，

1105
01:13:56,300 --> 01:13:59,180
在必须是两个实际插槽之前，两个实际块

1106
01:13:59,180 --> 01:14:02,560
在这里，它会像这样，你知道，

1107
01:14:02,560 --> 01:14:04,779
信标插槽，执行插槽。

1108
01:14:04,779 --> 01:14:06,819
关于它的事情基本上意味着

1109
01:14:06,819 --> 01:14:08,100
对抗力量增加了一倍。

1110
01:14:08,100 --> 01:14:10,699
就像，一旦我控制一个插槽，

1111
01:14:10,699 --> 01:14:12,340
我也可以控制下一个。

1112
01:14:12,340 --> 01:14:14,000
我可以选择自己作为建造者，

1113
01:14:14,000 --> 01:14:16,659
或者我可以与建筑商或类似的东西串通。

1114
01:14:16,659 --> 01:14:22,639
因此，现在我控制了两个插槽和两个红色委员会，

1115
01:14:22,639 --> 01:14:23,460
基本上。

1116
01:14:23,460 --> 01:14:26,899
因此，我可以立即拥有与两个一样多的力量，

1117
01:14:26,899 --> 01:14:28,220
如果我控制两个建议者。

1118
01:14:28,220 --> 01:14:31,399
如果我控制了其中两个，那么现在我拥有四个的力量

1119
01:14:31,399 --> 01:14:32,840
还有这种事情。

1120
01:14:32,840 --> 01:14:35,519
所以这就是为什么它基本上是一个大概的想法

1121
01:14:35,519 --> 01:14:38,939
使所有这些攻击变得更糟。

1122
01:14:38,939 --> 01:14:40,479
所以这不是理想的。

1123
01:14:40,479 --> 01:14:43,319
是的，还有另一个建议的版本

1124
01:14:43,319 --> 01:14:47,759
实际上是一个插槽，您介绍

1125
01:14:47,759 --> 01:14:50,019
另一个委员会

1126
01:14:50,019 --> 01:14:53,079
称为有效载荷及时委员会，这仍然是

1127
01:14:53,079 --> 01:14:58,000
投票，但实际上是对只是或否的质疑

1128
01:14:58,000 --> 01:15:01,539
在这里犯下的有效载荷是否及时？

1129
01:15:01,539 --> 01:15:03,279
不是及时吗？

1130
01:15:03,279 --> 01:15:07,259
是的，我不想详细地走得太多

1131
01:15:07,259 --> 01:15:10,059
但是这里也有一些问题，

1132
01:15:10,060 --> 01:15:13,360
这是一些问题，基本上是协议

1133
01:15:13,360 --> 01:15:15,340
为建筑商提供超级保证。

1134
01:15:15,340 --> 01:15:16,780
就像，基本上可以强迫

1135
01:15:16,780 --> 01:15:19,360
在不确定的情况下揭示有效载荷，

1136
01:15:19,360 --> 01:15:20,980
或有很大的保证是

1137
01:15:20,980 --> 01:15:22,420
要成为规范。

1138
01:15:22,420 --> 01:15:25,840
是的，有一些关于如何解决的建议，

1139
01:15:25,840 --> 01:15:28,300
但是事情并不完全清楚。

1140
01:15:28,300 --> 01:15:31,360
如果您对此感兴趣，POTUS是与之交谈的人

1141
01:15:31,360 --> 01:15:32,920
而且他对此进行了更多工作。

1142
01:15:32,920 --> 01:15:34,980
我最近还没有。

1143
01:15:34,980 --> 01:15:37,480
但是无论如何，这是具有某种的事情之一

1144
01:15:37,479 --> 01:15:43,079
封锁了部分epps加上我的意思是，您周围还有其他问题知道是否知道是否知道

1145
01:15:43,079 --> 01:15:47,559
还是不是我们实际上想这样做，或者是哪些版本或类似的事情，但基本上没有

1146
01:15:47,559 --> 01:15:53,559
无论您可以提出什么版本

1147
01:15:53,559 --> 01:15:58,519
堡垒的问题与他们一样几乎所有同样的问题空间

1148
01:15:58,520 --> 01:16:09,160
因此，是的，基本上，无论如何，我认为这是需要处理的东西，

1149
01:16:09,160 --> 01:16:15,640
本质上。因此，好事是在我们的LMD幽灵中，所以回到我们的好处，

1150
01:16:15,640 --> 01:16:21,240
理论上运作的协议，每个人都一次投票，没有委员会等

1151
01:16:21,240 --> 01:16:25,640
这样。因此，如果您记得的话，我们的LMD幽灵没有XM3 orgs，原因是

1152
01:16:25,640 --> 01:16:36,360
我们没有委员会。因此，这里基本上是同一件事。在我将其用于到期之前，

1153
01:16:36,360 --> 01:16:40,680
但是这里只是这些不再是最新消息。这些是最新消息，

1154
01:16:40,680 --> 01:16:45,560
这些是最新消息。因此，再也没有积累了。同样的事情

1155
01:16:45,560 --> 01:16:52,760
我们以前有过。这些投票代表了基本上大多数验证者集合的诚实投票，

1156
01:16:52,760 --> 01:16:58,199
而且它们不能被这些人殴打，因为这不是一个委员会

1157
01:16:58,199 --> 01:17:02,760
实际上就像验证器集的一半或验证器集的一半以上，因此修复了

1158
01:17:02,760 --> 01:17:07,560
问题与以前相同的方式与基本相同的保证

1159
01:17:07,560 --> 01:17:12,920
每个人都投票赞成它，就像过去发生了什么一样

1160
01:17:12,920 --> 01:17:18,680
基本上，它是一种像黄金组织的根问题一样修复的，即使您

1161
01:17:18,680 --> 01:17:22,340
您将其放在EPPS上下文中。

1162
01:17:22,340 --> 01:17:25,159
是的，同样的事情，然后您继续前进。

1163
01:17:25,159 --> 01:17:27,920
每个人都将继续建立在那条链上。

1164
01:17:27,920 --> 01:17:31,820
现在几乎是最后一件事

1165
01:17:31,820 --> 01:17:35,360
基本上，第四个选择会影响同伴DAS

1166
01:17:35,360 --> 01:17:40,240
路线图的一部分，或通常只是DAS部分

1167
01:17:40,240 --> 01:17:41,900
路线图。

1168
01:17:41,900 --> 01:17:44,740
所以它很快就给了你

1169
01:17:44,740 --> 01:17:48,380
关于可用性采样的想法，

1170
01:17:48,380 --> 01:17:52,279
如果您不知道，但这是一些幻灯片。

1171
01:17:52,279 --> 01:17:53,760
基本上，我们今天有斑点，

1172
01:17:53,760 --> 01:17:56,159
那就是数据的蓝色部分

1173
01:17:56,159 --> 01:17:58,460
那应该滚到以太坊。

1174
01:17:58,460 --> 01:18:00,880
现在，DAS的想法是我们要扩展它们。

1175
01:18:00,880 --> 01:18:04,180
因此，我们希望基本将其应用于比率编码的东西

1176
01:18:04,180 --> 01:18:05,460
您的大小加倍的地方，

1177
01:18:05,460 --> 01:18:08,859
因此，您添加此橙色部分并引入冗余。

1178
01:18:08,859 --> 01:18:13,539
而现在，一旦您拥有所有这些细胞的一半

1179
01:18:13,539 --> 01:18:17,659
或数据点，然后您可以重建整个过程。

1180
01:18:17,659 --> 01:18:20,779
因此检查是否有斑点

1181
01:18:20,779 --> 01:18:23,199
意味着只检查其中的50％可用。

1182
01:18:23,199 --> 01:18:25,960
因此，您基本上可以做这种抽样的事情

1183
01:18:25,960 --> 01:18:29,760
仅检查一些随机选择的斑点。

1184
01:18:29,760 --> 01:18:33,359
基本上，只要很多人这样做，

1185
01:18:33,359 --> 01:18:38,359
你知道，你真的不需要

1186
01:18:38,720 --> 01:18:40,579
检查整个事情以说服自己

1187
01:18:40,579 --> 01:18:42,680
它可用，或者至少喜欢

1188
01:18:42,680 --> 01:18:45,180
在大多数这样做的人中

1189
01:18:45,180 --> 01:18:49,200
可以愚弄以为这是什么

1190
01:18:49,200 --> 01:18:51,940
这是不可用的。

1191
01:18:51,940 --> 01:18:56,940
是的，基本上，一旦您看一堆斑点，

1192
01:18:56,940 --> 01:18:58,380
看起来几乎相同，

1193
01:18:58,380 --> 01:19:00,340
至少在当前的提案中。

1194
01:19:00,340 --> 01:19:04,380
有一维对2D，但是当前的思维

1195
01:19:04,380 --> 01:19:05,579
是从1D开始。

1196
01:19:05,579 --> 01:19:08,940
因此，基本上，您只是将斑点堆放在彼此之上。

1197
01:19:08,940 --> 01:19:11,320
每个人都这样扩展。

1198
01:19:11,320 --> 01:19:13,320
然后您基本下载列。

1199
01:19:13,320 --> 01:19:14,680
所以它与这里相同。

1200
01:19:14,680 --> 01:19:17,520
您只选择一些索引，但是

1201
01:19:17,520 --> 01:19:20,840
好像您只是为每个斑点选择相同的索引。

1202
01:19:20,840 --> 01:19:23,520
因此，您可以在同一斑点中的每个斑点上进行采样。

1203
01:19:23,520 --> 01:19:26,079
因此，这与仅下载一堆专栏一样

1204
01:19:26,079 --> 01:19:28,659
从这个矩阵。

1205
01:19:28,659 --> 01:19:32,560
然后，是的，基本上，如果一半的列

1206
01:19:32,560 --> 01:19:34,600
可用，然后全部可用。

1207
01:19:34,600 --> 01:19:37,100
因此，如果您下载了几列，

1208
01:19:37,100 --> 01:19:39,360
您可以拥有相同的保证。

1209
01:19:39,360 --> 01:19:42,100
现在，从预言中这样做的好处

1210
01:19:42,100 --> 01:19:47,640
观点是，只要您可以做足够的取样，就不必像所有

1211
01:19:47,640 --> 01:19:52,940
抽样也许您以后要做更多的事情，因为有不同的方法可以进行抽样

1212
01:19:52,940 --> 01:19:57,980
而且有些方法更昂贵，但是无论如何，这并不重要，但是

1213
01:19:57,980 --> 01:20:04,240
基本上，只要您可以在任何时候投票之前进行足够的下载列

1214
01:20:04,240 --> 01:20:10,100
您曾经投票给您真正进行抽样的事情，嗯，我们可以得到这个非常好的全球

1215
01:20:10,100 --> 01:20:15,860
财产，这实际上是诚实验证者的一小部分

1216
01:20:16,579 --> 01:20:24,100
基本上可以，是的，这应该说，这可以投票给无法使用的数据。所以，

1217
01:20:27,060 --> 01:20:31,460
哦，是的，好的，不，这就是稍后所说的。是的，没关系。大多数，很少

1218
01:20:31,460 --> 01:20:37,460
诚实的验证者可以看到无法可用的数据。所以，那只是因为

1219
01:20:37,460 --> 01:20:42,260
进行抽样，特别是如果您在投票之前进行采样，然后通过投票时间，

1220
01:20:42,260 --> 01:20:48,100
然后，您拥有此属性。因此，如果您至少有1.5加三角洲，

1221
01:20:48,100 --> 01:20:53,380
因此，达美航空可能是5％，10％，2％，这取决于您进行的抽样数量，但基本上是

1222
01:20:54,180 --> 01:20:59,220
如果您至少有1.5加上诚实验证器的三角洲，则可能是验证器集的55％

1223
01:20:59,220 --> 01:21:06,020
老实说，这比诚实多数假设强一些，那么多数总是投票

1224
01:21:06,020 --> 01:21:09,940
在可用的块上，这是在块插槽的意义上，所以它将

1225
01:21:09,940 --> 01:21:15,300
投票给空块，而不是为这个不可用的块投票，基本上是这样

1226
01:21:15,300 --> 01:21:21,380
总结是您知道我们的假设的UH的三角洲，而不是假设诚实

1227
01:21:21,380 --> 01:21:28,260
多数我们必须承担诚实多数加上三角洲的多数，或者像增强三角洲或

1228
01:21:28,260 --> 01:21:35,220
假设和嗯，但是如果我们确实有这样的假设

1229
01:21:35,220 --> 01:21:42,500
在一个不可用的块上。一旦您拥有块插槽，所以本身，这不会给您太多

1230
01:21:42,500 --> 01:21:45,940
因为即使没有很多选票的障碍，他们也不受到多数的支持，

1231
01:21:46,060 --> 01:21:51,260
如果您不知道该块实际上是规范或外观

1232
01:21:51,260 --> 01:21:56,760
不可用。但是，是的，有了可以选择的块插槽，这意味着即使您在此中

1233
01:21:56,760 --> 01:22:02,619
三角洲，即使您是被愚弄的少数派验证者之一，也认为

1234
01:22:02,619 --> 01:22:06,779
抱歉，该块不可用，而该块在不可用的情况下可用。

1235
01:22:06,779 --> 01:22:13,619
有了块状叉子的选择，您仍然不会将其视为规范，因为基本上

1236
01:22:13,619 --> 01:22:20,680
像你知道的其他人一样

1237
01:22:20,680 --> 01:22:24,059
没有被愚弄的，他们会和他们一起拖走。

1238
01:22:24,059 --> 01:22:29,859
就像，他们是多数人，他们会将自己的体重放在空块上，并确保

1239
01:22:29,859 --> 01:22:36,099
你也和他们一起去。因此，基本上，是的，就像叉子选择最终一样

1240
01:22:36,099 --> 01:22:43,539
如果我们只是没有DAS，因为如果某物不可用，那么它永远不会看起来很典型

1241
01:22:43,539 --> 01:22:49,339
给任何人。就像您可能会按照提议的那样投票，因为那时您没有

1242
01:22:49,339 --> 01:22:54,099
认识其他人，例如人们还没有投票。您只是在那里，看起来可以

1243
01:22:54,099 --> 01:22:59,380
您，您投票给它。因此，如果您的采样完成，您将投票。但是从

1244
01:22:59,380 --> 01:23:03,539
只要有诚实的多数，它总是看起来不可能。

1245
01:23:03,539 --> 01:23:09,539
您会看到，每个人都投票赞成空位，或者大多数人都这样做，诚实的人，

1246
01:23:09,539 --> 01:23:15,220
因此，您只会进入“要塞3的一部分”的空插槽

1247
01:23:15,940 --> 01:23:21,140
说，好吧，这对我来说可用，但是无论如何，没有人投票给它，所以我

1248
01:23:21,140 --> 01:23:26,260
只是要离开它。这实际上简化了很多事情，这意味着所有

1249
01:23:26,260 --> 01:23:32,980
所有这些都像怪异的边缘案例，我没有像您一样攻击您可以做的

1250
01:23:32,980 --> 01:23:38,860
试图利用这少数人，您可以说服您不可用

1251
01:23:38,860 --> 01:23:46,000
因此，您实际上不能进行任何这些攻击，所以它确实使事情变得很大

1252
01:23:46,000 --> 01:23:50,680
更好，所以这也是我之前所说的，就像块插槽一样

1253
01:23:50,680 --> 01:23:52,680
就像，它有一个退缩问题，

1254
01:23:52,960 --> 01:23:55,900
但是我认为它具有很多优势，

1255
01:23:56,060 --> 01:23:57,680
我认为这可能是最大的优势。

1256
01:23:57,800 --> 01:24:01,940
EPB的事情也许很好，

1257
01:24:02,100 --> 01:24:04,579
但我想有分歧

1258
01:24:04,579 --> 01:24:06,960
围绕我们应该用EPB做什么

1259
01:24:06,960 --> 01:24:08,400
还是是否需要

1260
01:24:08,700 --> 01:24:11,320
不同的人告诉你不同的事情。

1261
01:24:11,420 --> 01:24:12,800
我认为每个人都同意同伴到美国

1262
01:24:12,800 --> 01:24:14,039
是我们真正想做的事情，

1263
01:24:14,140 --> 01:24:16,340
我想现在看着我

1264
01:24:16,340 --> 01:24:19,039
好像这是一个选择的选择

1265
01:24:19,039 --> 01:24:23,840
这是一个非常重要的一部分，确实使一切正常。

1266
01:24:23,840 --> 01:24:28,159
因此，这就是为什么它可能是更高的价值项目。

1267
01:24:28,159 --> 01:24:32,659
因此，考虑一下这很简单。

1268
01:24:32,659 --> 01:24:34,539
我认为您不需要很多背景。

1269
01:24:34,539 --> 01:24:39,880
所以，也许是的，如果关注它的人看起来很感兴趣，

1270
01:24:39,880 --> 01:24:42,399
我们可以更多地谈论它。

1271
01:24:42,399 --> 01:24:45,000
我想，是的。

1272
01:24:45,000 --> 01:24:47,239
我知道这很多。

1273
01:24:47,239 --> 01:24:50,399
我试图给你很多东西。

1274
01:24:50,399 --> 01:24:54,279
也许您可以去看录音以获取详细信息

1275
01:24:54,279 --> 01:24:58,800
我敢肯定，您错过了很多东西。

1276
01:24:58,800 --> 01:25:02,539
但是，是的，希望它给你一个主意

1277
01:25:02,539 --> 01:25:05,899
路线图的主要位置是什么

1278
01:25:05,899 --> 01:25:08,099
目前出现的叉子选择的地方，

1279
01:25:08,099 --> 01:25:10,880
长期有什么样的

1280
01:25:10,880 --> 01:25:13,819
SSF景观看起来像。

1281
01:25:13,819 --> 01:25:21,859
再说一次，我也有很多我没有介绍的，因为有多个论文，只是许多持续的工作。

1282
01:25:22,920 --> 01:25:36,539
但是，是的，我想也许就参与的方式而言，就像我所说的那样，就像有这种斑点的努力是在这种情况下和关闭的那样，就像链接的快速终结协议一样。

1283
01:25:36,539 --> 01:25:43,939
它写了，但可以写得更漂亮，

1284
01:25:43,939 --> 01:25:49,420
卢卡（Luca）正在围绕它写一篇论文，这是一份正式文件

1285
01:25:49,420 --> 01:25:52,500
但是，甚至还有一篇写得很好的博客文章，

1286
01:25:52,500 --> 01:25:54,840
有人可以做的事情，

1287
01:25:54,840 --> 01:25:59,100
有很多很小的事情要做，

1288
01:25:59,100 --> 01:26:05,019
在许多这些项目上，是的，如果您发现任何有趣的东西，

1289
01:26:05,020 --> 01:26:07,700
我想只是给我发信息。

1290
01:26:09,500 --> 01:26:11,000
我，是的，我不确定是什么，

1291
01:26:11,000 --> 01:26:13,380
我想在不和谐上可能是最好的作用，

1292
01:26:13,380 --> 01:26:16,680
但是，然后我想我会分享的，

1293
01:26:16,680 --> 01:26:20,220
我在github的东西中分享了一些资源，

1294
01:26:20,220 --> 01:26:22,860
但是还有更多。

1295
01:26:22,860 --> 01:26:25,780
所以也许，是的，我可能会留下一些东西，

1296
01:26:25,780 --> 01:26:28,160
但也只是某人特别感兴趣

1297
01:26:28,160 --> 01:26:29,860
在一个主题中，我可以向您发送更多东西。

1298
01:26:29,860 --> 01:26:32,540
我不想喜欢带有链接的人。

1299
01:26:33,500 --> 01:26:34,540
是的，就是这样。

1300
01:26:34,539 --> 01:26:35,600
谢谢你有我。

1301
01:26:37,140 --> 01:26:39,439
非常感谢，弗朗切斯科。

1302
01:26:39,439 --> 01:26:40,859
是的，非常感谢。

1303
01:26:40,859 --> 01:26:41,699
这很多。

1304
01:26:41,699 --> 01:26:45,359
我不知道是，我可以说很快。

1305
01:26:48,359 --> 01:26:49,939
是的，仍在尝试处理所有内容。

1306
01:26:49,939 --> 01:26:51,519
虽然这是一个很棒的演讲。

1307
01:26:51,519 --> 01:26:53,180
非常感谢。

1308
01:26:53,180 --> 01:26:55,239
一个问题是您是否可以加入不和谐

1309
01:26:55,239 --> 01:26:56,960
也许以后回答一些问题

1310
01:26:56,960 --> 01:26:59,359
因为人们可能会观看它。

1311
01:26:59,359 --> 01:27:02,260
我将在这里向您展示链接。

1312
01:27:02,260 --> 01:27:10,619
非常感谢。让我们看看在过去五分钟内将其包装好之前，是否有任何快速问题。

1313
01:27:10,619 --> 01:27:17,960
现在有一个关于EPB的问题的问题。

1314
01:27:17,960 --> 01:27:24,820
在博客插槽幻灯片中，EPB指的是Block Auction EPBS吗？

1315
01:27:24,819 --> 01:27:28,259
还是它改变了？

1316
01:27:28,259 --> 01:27:30,259
是的，是...

1317
01:27:30,259 --> 01:27:31,979
是的，基本上，

1318
01:27:32,219 --> 01:27:34,679
这是什么样的EPB设计？

1319
01:27:34,779 --> 01:27:36,579
是的，所以幻灯片正在引用

1320
01:27:36,579 --> 01:27:39,099
为了阻止拍卖EPB，

1321
01:27:39,319 --> 01:27:42,859
就像最基本的原始EPB一样，

1322
01:27:43,420 --> 01:27:46,659
但这并不重要。

1323
01:27:46,979 --> 01:27:48,279
就像，插槽拍卖，

1324
01:27:48,659 --> 01:27:50,279
似乎它简化了事情，

1325
01:27:51,079 --> 01:27:53,599
像，特别是如果您事先知道它，

1326
01:27:53,600 --> 01:27:55,880
像这样的拍卖已经事先发生了。

1327
01:27:55,880 --> 01:27:59,380
因此，建造者确实可以提前告诉

1328
01:27:59,380 --> 01:28:01,160
建造者应该是谁。

1329
01:28:01,160 --> 01:28:04,000
但是据我所知，实际上并不是

1330
01:28:04,000 --> 01:28:05,640
原来简化了很多东西

1331
01:28:05,640 --> 01:28:08,579
而且您几乎遇到了同样的问题。

1332
01:28:08,579 --> 01:28:11,220
但是，这再次是

1333
01:28:11,220 --> 01:28:14,640
肯定可以有更多的工作。

1334
01:28:14,640 --> 01:28:16,460
我不知道这是我想的很多

1335
01:28:16,460 --> 01:28:18,420
过去的各个时期

1336
01:28:18,420 --> 01:28:20,300
但是我从来没有真正喜欢过，你知道

1337
01:28:20,300 --> 01:28:22,240
到处写一些东西

1338
01:28:22,239 --> 01:28:27,439
正式，这只是很多要做的事情。所以这是某人可以的

1339
01:28:28,880 --> 01:28:36,719
肯定会撰写并写一篇不错的博客文章。有很多空间可以澄清其中一些想法，

1340
01:28:36,719 --> 01:28:42,159
但是据我所知，他们都遇到了同样的问题。

1341
01:28:42,159 --> 01:28:57,119
好吧，非常感谢。好吧，是的，主题问题，成为一名研究人员感觉如何？

1342
01:28:57,119 --> 01:29:03,920
您扮演这个角色是什么感觉？您进行了很多研究，很多很棒的事情，

1343
01:29:04,639 --> 01:29:07,119
因此，也许如果您只能分享一些有关旅程的信息，

1344
01:29:07,119 --> 01:29:10,159
您最终是如何在共识的最前沿工作的？

1345
01:29:10,159 --> 01:29:25,659
很漂亮，我不知道，这不是我真正期望的，我只是在联系

1346
01:29:25,659 --> 01:29:31,599
在某个时候，有了贾斯汀，因为我只是对以太坊真的很感兴趣，并想

1347
01:29:31,599 --> 01:29:37,619
看看对这些事情进行研究的样子，我想也许是一些欧洲人

1348
01:29:37,619 --> 01:29:42,739
正在听你现在有相同的想法，嗯，嗯，当时有很多

1349
01:29:43,300 --> 01:29:50,260
嗯，有趣的MV，但也没有很多您知道在此上完成的正式工作

1350
01:29:50,260 --> 01:29:57,539
甚至真的像是真的，我的意思是有一种像一本开创性的纸上的嗯，然后

1351
01:29:57,539 --> 01:30:02,099
就像一些博客文章一样，但不多

1352
01:30:02,100 --> 01:30:07,940
显然缺乏工作，这实际上只是有人只是在考虑这些

1353
01:30:07,940 --> 01:30:14,420
事物。您不需要谁知道什么背景，您只是在花时间。所以我从事

1354
01:30:14,420 --> 01:30:22,740
有一点。有很多有趣的问题。然后在

1355
01:30:22,740 --> 01:30:29,140
事实证明，它与共识的事物相互作用，还有很多这些东西

1356
01:30:29,140 --> 01:30:31,420
我在圣诞老人Rheorgs开头给你看了

1357
01:30:31,420 --> 01:30:34,680
无论如何，这是我的同事Caspar，

1358
01:30:34,680 --> 01:30:36,700
和barnaby，我想你们应该知道

1359
01:30:36,700 --> 01:30:39,820
从演讲，或一般而言

1360
01:30:39,820 --> 01:30:41,680
他们正在努力，因为很多这些问题

1361
01:30:41,680 --> 01:30:43,680
当时非常重要。

1362
01:30:43,680 --> 01:30:45,119
所有这些Rheorg都是真实的，

1363
01:30:45,119 --> 01:30:47,680
它们可能发生在协议中。

1364
01:30:47,680 --> 01:30:50,680
因此，我也有点参与其中。

1365
01:30:50,680 --> 01:30:53,480
我开始结合两件事，

1366
01:30:53,480 --> 01:30:57,619
是的，基本上总结了这些东西，

1367
01:30:57,619 --> 01:31:01,699
像委员会可强制执行的财产一样，它出现在会员中

1368
01:31:01,699 --> 01:31:07,300
我很早就从事的事情，我只是意识到你们所有人

1369
01:31:07,300 --> 01:31:09,380
知道这个肖像的东西真的是一团糟

1370
01:31:09,380 --> 01:31:14,840
显然，人们需要再次花时间在上面

1371
01:31:14,840 --> 01:31:19,059
有点缺乏资源，是的，好像让我们跳入

1372
01:31:19,059 --> 01:31:23,720
这件事确实需要工作，所以我想是的

1373
01:31:23,720 --> 01:31:27,039
我的校长有很多时间尝试弄清楚它，就像我并不总是在尝试

1374
01:31:27,039 --> 01:31:33,100
做我知道什么样的背景的事情，因为很多时候

1375
01:31:33,100 --> 01:31:34,899
并不是那么必要。

1376
01:31:34,899 --> 01:31:42,420
您只需要深入研究并尽可能多地阅读并弄清楚

1377
01:31:42,420 --> 01:31:44,439
解决问题的位置。

1378
01:31:44,439 --> 01:31:49,460
这不是火箭科学。

1379
01:31:49,460 --> 01:31:54,220
你坐下来写这张我向你展示的愚蠢图，最终弄清楚

1380
01:31:54,220 --> 01:31:55,220
某物。

1381
01:31:55,220 --> 01:32:06,880
因此，事实证明，是的，很多时候只是看解决问题的需求比看我的背景更重要。

1382
01:32:06,980 --> 01:32:08,920
或者至少这对我来说是什么样的。

1383
01:32:10,180 --> 01:32:12,320
但是，是的，当然可以取决于。

1384
01:32:12,380 --> 01:32:25,039
我并不是说只是出于随机问题去钓鱼，但是，是的，我认为要考虑到解决问题的需要是，而不是已经有10个人试图做某事的地方。

1385
01:32:25,039 --> 01:32:28,699
在以太坊中，我们没有那么多人进行研究。

1386
01:32:28,699 --> 01:32:32,199
因此，有很多这样的领域有人刚刚出现

1387
01:32:32,199 --> 01:32:34,699
写hackmd可能是

1388
01:32:34,699 --> 01:32:36,380
事实证明，在两个月内，您

1389
01:32:36,380 --> 01:32:37,640
成为这件事的专家。

1390
01:32:40,000 --> 01:32:41,000
哈维尔Archuelovich-很棒。

1391
01:32:41,000 --> 01:32:42,199
非常感谢，弗朗切斯科。

1392
01:32:42,199 --> 01:32:46,260
我认为这是人们结束电话的巨大动力。

1393
01:32:46,260 --> 01:32:48,579
是的，我们是90分钟的正确

1394
01:32:48,579 --> 01:32:50,800
因此，我们应该在这里启动它。

1395
01:32:50,800 --> 01:32:52,920
再次，非常感谢。

1396
01:32:52,920 --> 01:32:53,519
感谢它。

1397
01:32:53,520 --> 01:33:00,720
获取很多内容要消化以进行Wiki UM报告，我们会跟上这一点

1398
01:33:01,440 --> 01:33:07,920
EPF Wiki和UH，如果有人想记录所有SSF以及所有有关该信息的新信息

1399
01:33:07,920 --> 01:33:13,120
我们今天在那里学到的共识，这真的很棒，我认为这是很多工作

1400
01:33:13,120 --> 01:33:21,840
关于嗯，是的，是的，在我们完成之前，我想在星期一邀请你们

1401
01:33:21,840 --> 01:33:27,680
在此之后，我们将在同一时间进行总结电话，所以此通话

1402
01:33:27,680 --> 01:33:32,880
我们正在完成研究小组，嗯，它正式结束了，但我们还有另一个

1403
01:33:32,880 --> 01:33:38,880
周一大约在同一时间，非正式聊天，所以大家都在听这件事

1404
01:33:38,880 --> 01:33:43,360
是的，很抱歉让您保持漫长的Francesco再次感谢您

1405
01:33:43,360 --> 01:33:50,960
太好了，是的，嗯

1406
01:33:50,960 --> 01:33:55,119
如果您不喜欢它，会打扰您一些问题。

1407
01:33:55,119 --> 01:33:55,619
当然。

1408
01:33:55,619 --> 01:33:56,500
非常感谢。

1409
01:33:56,500 --> 01:33:58,000
再次感谢您邀请我。

1410
01:33:58,000 --> 01:34:01,899
对不起，如果我说话很快，但是它想要

1411
01:34:01,899 --> 01:34:04,720
涵盖很多东西，即使这可能意味着人们

1412
01:34:04,720 --> 01:34:07,079
需要重新观看其中的一些。

1413
01:34:07,079 --> 01:34:08,119
是的，是的。

1414
01:34:08,119 --> 01:34:09,880
有很多我对人感兴趣的事情

1415
01:34:09,880 --> 01:34:12,399
继续进行。

1416
01:34:12,399 --> 01:34:13,460
是的，我认为这很棒。

1417
01:34:13,460 --> 01:34:15,600
这就是我希望在研究小组中拥有的东西。

1418
01:34:15,600 --> 01:34:18,899
但是看到您的110张幻灯片的演示文稿

1419
01:34:18,899 --> 01:34:24,739
您展示了我在想他如何才能设法适应所有这些，但是您这样做了

1420
01:34:24,739 --> 01:34:28,979
是的，很多人只是过渡是公平的，但是是的，是的，没错，但是

1421
01:34:28,979 --> 01:34:35,699
仍然像嗯，我也倾向于快速说话，我真的很尊重这种方法，所以是的，谢谢

1422
01:34:35,699 --> 01:34:41,619
你们又有很多

1423
01:34:48,899 --> 01:34:49,519
你

