1
00:00:00,000 --> 00:00:02,839
谈论共识层。

2
00:00:04,040 --> 00:00:08,380
我会给马里奥一个机会，让亚历克斯快速采访，

3
00:00:08,560 --> 00:00:09,540
然后我们会直接加入。

4
00:00:09,660 --> 00:00:11,500
或抱歉，介绍，而不是面试。

5
00:00:13,000 --> 00:00:14,320
是的，非常感谢，乔什。

6
00:00:14,320 --> 00:00:15,919
谢谢亚历克斯在这里。

7
00:00:16,580 --> 00:00:19,160
是的，上周，我们有Matt，Light Client，

8
00:00:19,460 --> 00:00:21,660
解释以太坊的执行层。

9
00:00:22,019 --> 00:00:26,780
本周，我们在这里覆盖了另一半以太坊，

10
00:00:26,780 --> 00:00:30,440
完成其工作原理的整个大局。

11
00:00:30,440 --> 00:00:36,579
是的，我们很高兴能在这里，亚历克斯，因为亚历克斯是以太坊基金会的一部分。

12
00:00:36,579 --> 00:00:43,600
他是如今正在从事许多重要主题的专家，例如Mev，主要是Mev，

13
00:00:44,180 --> 00:00:54,780
当前关于PBS，燃烧MEV的所有建议，您可能听说过Alex。

14
00:00:54,780 --> 00:01:01,020
在某种程度上，他在一堆生锈软件上工作，其中有很多生锈的人

15
00:01:01,020 --> 00:01:07,420
学习小组，所以您可能有兴趣听到UH Alex UH有助于许多Rust Projects

16
00:01:07,420 --> 00:01:13,819
嗯，最重要的是，他是以太坊共识层的专家，所以我希望

17
00:01:13,819 --> 00:01:19,340
今天向您学习很多

18
00:01:19,340 --> 00:01:23,000
我认为我们可以直接入住，舞台是您的。

19
00:01:24,500 --> 00:01:27,680
因此，在我们开始之前，只想提醒大家

20
00:01:28,100 --> 00:01:31,700
如果您有对话或评论，请提问

21
00:01:32,340 --> 00:01:36,080
将它们张贴在Discord线程中，第三周不一致线程。

22
00:01:36,640 --> 00:01:37,640
继续，亚历克斯。谢谢。

23
00:01:40,100 --> 00:01:40,680
伟大的。

24
00:01:40,680 --> 00:01:42,140
谢谢你有我。

25
00:01:42,140 --> 00:01:42,879
你能听到我的声音吗？

26
00:01:46,939 --> 00:01:47,540
你好。

27
00:01:49,340 --> 00:01:55,820
一切都很好，你还好，谢谢，有时我有UH AV问题

28
00:01:57,439 --> 00:02:03,560
嗯，很好，是的，是的，我是亚历克斯·斯托克斯，我是以太坊基金会的研究员嗯

29
00:02:03,560 --> 00:02:11,659
今天我们将研究以太坊的共识层，所以是的，我想让我们看看我很漂亮

30
00:02:11,659 --> 00:02:21,199
我可以看到，让我这样做。什么？好的。好吧，我想我至少可以在聊天中看到问题。

31
00:02:21,379 --> 00:02:25,359
因此，如果您有它们，只需将它们放在这里，我们将尝试随身携带它们。

32
00:02:28,000 --> 00:02:33,900
我会尝试做的就是浏览一些幻灯片，只是为了构建共识是什么意思？

33
00:02:34,079 --> 00:02:39,500
我们为什么关心它？以及这些区块链上下文。然后我应该能够接受

34
00:02:39,500 --> 00:02:45,099
您知道的某种现场笔记要绘制一些图表，并给您一些更好的直觉

35
00:02:45,099 --> 00:02:53,539
对于我在说的不同的事情。是的，我们会跳进去。让我们看看这里，

36
00:02:53,719 --> 00:03:01,280
我相信您可以看到这个。因此，我想有人说如果你做不到。但是，是的，

37
00:03:01,400 --> 00:03:06,420
定理共识。所以让我们潜入。是的，我的意思是，我有点想从

38
00:03:06,419 --> 00:03:10,659
从一开始，就像您知道为什么我们在第一个中甚至关心这些区块链

39
00:03:10,659 --> 00:03:17,619
我认为最终像他们所做的真正基本的事情是他们制造的地方

40
00:03:17,619 --> 00:03:23,719
数字稀缺性，所以就像您在您所知道的UM现实世界中拥有这个概念一样

41
00:03:23,719 --> 00:03:29,139
如果我稍后有这个例子，但是假设我要去杂货店，他们只有

42
00:03:29,139 --> 00:03:34,739
就像您知道的10个苹果一样，如果他们喜欢给五个苹果，他们就无法神奇地做更多的苹果

43
00:03:34,740 --> 00:03:40,439
方式，他们仍然只有五个。事实证明，有这种稀缺的概念

44
00:03:40,439 --> 00:03:45,939
物理世界，我们可以做很多事情要做，创造很多价值，例如

45
00:03:45,939 --> 00:03:50,900
底线，对吗？因此，问题就像，我们如何在这个数字领域中这样做

46
00:03:50,900 --> 00:03:55,260
就像我们一生所占据的那样，只是随着我们的发展而变得越来越重要？

47
00:03:57,160 --> 00:04:01,240
是的，就像起点一样，正确的是，我们想出了如何制作数字商品的方式，

48
00:04:01,240 --> 00:04:05,400
所以所有这些猫的照片在互联网上，

49
00:04:05,400 --> 00:04:07,620
您可能会看到的数字教科书，

50
00:04:07,620 --> 00:04:10,439
是的，当今我们的世界越来越多。

51
00:04:10,439 --> 00:04:12,180
问题是，您基本上可以

52
00:04:12,180 --> 00:04:13,740
复制所有这些东西。

53
00:04:13,740 --> 00:04:16,800
如果我再次给你这些CAD JPEG之一，

54
00:04:16,800 --> 00:04:19,240
您可以根据需要复制它。

55
00:04:19,240 --> 00:04:21,120
没有办法代表稀缺

56
00:04:21,120 --> 00:04:22,220
在这个数字世界中。

57
00:04:23,519 --> 00:04:25,879
是的，历史悠久

58
00:04:25,879 --> 00:04:27,120
这是一个问题，对吗？

59
00:04:27,120 --> 00:04:31,220
因此，如果我有某人想要保护的电影，

60
00:04:31,240 --> 00:04:36,439
知识产权的条款一旦电影出版，并且很容易成为互联网

61
00:04:36,439 --> 00:04:41,139
复制的是与Bittorrent共享的文件，所有这些，是的，这是一团糟

62
00:04:41,139 --> 00:04:48,400
而且您知道人们关心这些区块链的原因是因为它们产生了这个数字

63
00:04:48,400 --> 00:04:54,540
稀缺，我会解释为什么这很重要的原因是因为您再次可以

64
00:04:54,540 --> 00:04:59,360
使用此属性喜欢代表物理领域中的所有这些东西，并喜欢我们

65
00:04:59,360 --> 00:05:03,400
在这个数字空间中，周围的直觉很少，对吗？

66
00:05:03,400 --> 00:05:06,920
您可以将其用于各种东西，例如金钱，例如令牌。

67
00:05:07,620 --> 00:05:12,740
如果您处于区块链上下文，则这些是非常熟悉的示例，但更一般而言

68
00:05:12,740 --> 00:05:14,020
喜欢财产权。

69
00:05:14,020 --> 00:05:19,080
因此，有一天，您可能可以将契约放在区块链上的房屋上。

70
00:05:20,300 --> 00:05:25,060
令人兴奋的事情是，我认为还有更多

71
00:05:25,060 --> 00:05:27,180
有点来自此​​，我们仍在弄清楚什么可能。

72
00:05:27,180 --> 00:05:30,480
因此，如果有的话，我认为这是一个非常令人兴奋的空间。

73
00:05:31,120 --> 00:05:34,699
是的，这是一种有趣的冒险，我们将看到它的去向。

74
00:05:35,740 --> 00:05:43,720
这里重要的是，如果没有这种区块链技术，您就无法拥有这样的东西，可以像独特的数字对象一样制作这些东西。

75
00:05:44,259 --> 00:05:47,399
同样，因为在此之前您可以像任何事物一样琐碎地复制。

76
00:05:47,600 --> 00:05:50,139
因此，这就像没有区块链一样。

77
00:05:50,399 --> 00:05:51,439
这就是为什么人们关心他们的原因。

78
00:05:55,060 --> 00:05:55,920
让我们来看看。

79
00:05:55,920 --> 00:06:05,840
好吧，似乎在起作用。是的，好吧，我们有这些区块链，使我们像

80
00:06:05,840 --> 00:06:11,740
数字短缺的财产，就像现在让我们尝试考虑如何做到这一点。

81
00:06:12,660 --> 00:06:17,819
因此，您知道让我们再次像一个用例一样放大这种概括

82
00:06:17,819 --> 00:06:22,319
我们想考虑的这些稀缺物体的概念，但假设我们想谈论

83
00:06:22,319 --> 00:06:27,599
数字资金正确，所以我们有钱，就像有钱单位

84
00:06:27,599 --> 00:06:33,360
硬币是正确的，所以想象一下我可以拥有硬币，我想花硬币，嗯，你知道应该

85
00:06:33,360 --> 00:06:40,319
发射您对金钱的直觉

86
00:06:40,319 --> 00:06:45,519
我们的意思是他们只是一次像一次说末端硬​​币一样，所以就像我有100个硬币我无法

87
00:06:45,519 --> 00:06:51,519
例如，像花200支一样，在任何时间点都有固定的数字，所以

88
00:06:53,439 --> 00:06:59,599
你知道我不确定每个人的背景是什么，但是无论哪种方式，让我们假设

89
00:06:59,599 --> 00:07:03,680
遵循事情是有意义的，如果您有疑问，请在聊天中放弃它们

90
00:07:05,439 --> 00:07:12,959
好吧，好吧，你知道我们我们会有一个像稻草人的榜样，对

91
00:07:12,959 --> 00:07:18,239
您可能会熟悉像Web服务器一样，就像您知道我们称为Web2的内容一样

92
00:07:18,239 --> 00:07:23,519
我不知道像Facebook meta之类的东西，或者像呃，您知道Instagram所有这些不同的社交

93
00:07:23,519 --> 00:07:29,519
媒体平台Twitter，我想我们现在以任何方式称呼X，您只是想象您有一些

94
00:07:29,519 --> 00:07:33,519
货币协议您可以喜欢写软件来实施此协议的规则，它只是

95
00:07:33,519 --> 00:07:39,039
在某人的网络服务器上运行，这里最大的事情是谁在操作服务器的人

96
00:07:39,040 --> 00:07:42,220
您相信他们可以确保没有双旋转。

97
00:07:42,220 --> 00:07:44,319
这再次是核心属性

98
00:07:44,319 --> 00:07:47,360
我们想摆脱区块链。

99
00:07:47,360 --> 00:07:48,860
我在这里有这些例子，

100
00:07:50,540 --> 00:07:53,420
再次应该反映您的直觉

101
00:07:53,420 --> 00:07:56,600
来自物理世界，对吗？

102
00:07:56,600 --> 00:07:58,200
所以，如果我在杂货店，

103
00:07:58,200 --> 00:08:00,660
假设杂货店有100个苹果，

104
00:08:00,660 --> 00:08:03,980
如果他们卖给我一个苹果，那么他们只剩下99。

105
00:08:03,980 --> 00:08:07,320
他们不能像200个苹果，300个苹果那样做，对吗？

106
00:08:07,319 --> 00:08:13,079
嗯，我的意思是的，他们不能仅仅神奇地制作苹果，他们有一定的数字

107
00:08:13,719 --> 00:08:19,159
然后放弃一些，那就是现在在我们的货币协议中，您可以想象这是类似的事情

108
00:08:19,159 --> 00:08:24,279
在您知道我是否只有100个硬币的地方，我给您发送了5个我只剩下95个硬币

109
00:08:25,240 --> 00:08:31,560
当我们说双重花费时，我们有点意思是我的100中，如果我给你发送了五个

110
00:08:31,560 --> 00:08:35,720
我绝对应该有95个。我知道，我知道，我无法发送五个

111
00:08:36,279 --> 00:08:40,759
每个人都有两个以上的50个硬币，对吗？因为我不会有那么多积分。

112
00:08:41,879 --> 00:08:44,600
重要的词是您信任操作员，对吗？

113
00:08:45,159 --> 00:08:51,559
从历史上看，我们从来没有能够喜欢信任操作员喜欢这样的坚持

114
00:08:51,559 --> 00:08:56,039
协议。特别是它就像双旋转属性。所以有很多方法

115
00:08:56,039 --> 00:09:01,480
可能发生。其中之一就像在软件中实现我们的货币协议的错误一样。

116
00:09:01,559 --> 00:09:07,099
而且，您知道，它的外观是服务器，就像偶然地使额外

117
00:09:07,099 --> 00:09:08,159
硬币，对吧？

118
00:09:08,159 --> 00:09:12,139
假设他们只承诺像1000枚硬币一样。

119
00:09:12,139 --> 00:09:17,019
而且您知道，有一些错误，突然之间有1001个硬币，对吗？

120
00:09:17,019 --> 00:09:21,559
对于我们使用此协议而言，这不太公平。

121
00:09:21,559 --> 00:09:25,839
我们希望只有他们声称的数字。

122
00:09:25,839 --> 00:09:30,699
如果有更多的话，这是一个错误。

123
00:09:30,700 --> 00:09:37,300
有一个单一操作员，中央服务器正在协调所有这些，这是

124
00:09:37,300 --> 00:09:41,280
这也是安全方面的问题，因为它可能只是一个主动攻击。

125
00:09:41,280 --> 00:09:46,940
因此，也许有一个错误，也许操作员本身无法利用

126
00:09:46,940 --> 00:09:50,040
例如，由于它们不想这样做，因此该错误。

127
00:09:50,040 --> 00:09:53,700
他们希望人们相信他们的货币协议很好。

128
00:09:53,700 --> 00:09:57,460
但是攻击者可以妥协服务器，然后以自己的方式触发错误

129
00:09:57,460 --> 00:10:00,800
方式，并为自己制作这些额外的硬币。

130
00:10:00,800 --> 00:10:04,500
如果我们都相信这些硬币由于某种原因很有用，那是直接的

131
00:10:04,500 --> 00:10:08,800
攻击者有利可图，因此他们激励他们这样做。

132
00:10:08,800 --> 00:10:12,000
您甚至可以有另一个场景，而操作员本身就是不只是

133
00:10:12,000 --> 00:10:13,000
老实说，对吗？

134
00:10:13,000 --> 00:10:18,980
因此，如果我控制此资金协议，以及喜欢货币协议的人，也许我只是在做

135
00:10:18,980 --> 00:10:24,780
侧面有一些额外的硬币，因为再次，我这样做是有利可图的。

136
00:10:24,779 --> 00:10:29,019
特别是这样的关键是，如果您制作了这些协议之一

137
00:10:29,019 --> 00:10:33,659
在激励某人的地方，您知道是否有办法从中获利

138
00:10:33,659 --> 00:10:38,459
就像基本上他们一样，他们只是时间问题，是的，我们在使用它的原因

139
00:10:38,459 --> 00:10:41,659
首先是因为这些硬币出于某种原因很有价值，所以再次

140
00:10:41,659 --> 00:10:45,419
就像人们有直接的经济激励措施使人们真正攻击这件事

141
00:10:47,100 --> 00:10:53,899
好的，因为所有这些

142
00:10:53,899 --> 00:11:01,819
不好嗯，我们能做些什么，尽力摆脱它非常简单的解决方案，嗯，我们会看到

143
00:11:01,819 --> 00:11:06,539
这导致了数十年来的研究，例如如何真正做到这一点

144
00:11:06,539 --> 00:11:16,220
非常棘手

145
00:11:16,220 --> 00:11:27,639
这里的一个关键是，在一定程度上，您可以制定一个可靠的协议

146
00:11:27,639 --> 00:11:30,440
可以信任，它将越有用。

147
00:11:30,440 --> 00:11:41,180
我的讲话非常广泛或抽象，因为如果您

148
00:11:41,179 --> 00:11:47,819
想要制作最大有用的东西，需要最低限度地信任。

149
00:11:49,659 --> 00:11:54,859
假设我们有两个操作员，其中一位很好，但有时遇到问题。

150
00:11:56,620 --> 00:12:00,219
他们的钱不如另一个从未有这些错误的运营商好

151
00:12:00,219 --> 00:12:07,099
我在上面列出。因此，在一定程度上，我们可以朝着这种信任最小化的设置，

152
00:12:07,100 --> 00:12:15,279
我们对这种数字稀缺性的抽象越有用，就为人们创造价值而言，这越好。

153
00:12:15,980 --> 00:12:22,779
我们应该关心这一点，因为，您知道，我们在世界上看到的有很多价值来处理身体短缺

154
00:12:22,779 --> 00:12:26,320
您希望我们可以为数字短缺做类似的事情，对吗？

155
00:12:27,060 --> 00:12:32,720
正如您所看到的，比特币，以太坊的成长以及其他所有人都在乎。

156
00:12:32,720 --> 00:12:37,680
从中有很多价值。可能有我们没有想到的申请

157
00:12:37,680 --> 00:12:46,800
但这会做更多的事情。因此，这是一个非常值得的目标。因此，让我们尝试考虑我们将如何

158
00:12:46,800 --> 00:12:53,440
用这个可信赖的操作员删除这个强大的人协议。事实证明这很难。

159
00:12:54,560 --> 00:13:01,120
再次，显而易见的是，您就像，嘿，我有这个东西。有一个

160
00:13:01,120 --> 00:13:08,639
党，这是失败的点。显然，这是一件很直接的事情，摆脱单身

161
00:13:08,639 --> 00:13:14,320
领导者，单个操作员。您会考虑这样做的方式，而不是

162
00:13:14,320 --> 00:13:19,039
系统中的一个节点可以控制所有内容，您可以在所有节点上分配协议。

163
00:13:20,639 --> 00:13:24,320
幸运的是，有关于分布式计算的非常丰富的学术文献，

164
00:13:24,320 --> 00:13:28,560
也许从那里我们可以学习一些有关如何做到这一点的知识

165
00:13:28,560 --> 00:13:31,140
对于我们关心的上下文。

166
00:13:32,340 --> 00:13:34,720
通常人们对此的看法是

167
00:13:34,720 --> 00:13:37,320
而不是只有一个系统中的一个节点，而是

168
00:13:37,800 --> 00:13:40,300
您现在有结尾节点，所有节点都在计算同一件事。

169
00:13:41,340 --> 00:13:44,560
因此，如果您考虑一下，如果我们有这个钱协议，

170
00:13:45,020 --> 00:13:46,000
我们实际在做什么？

171
00:13:46,000 --> 00:13:48,400
人们可以在协议中赚钱。

172
00:13:49,480 --> 00:13:51,480
假设我想买100枚硬币。

173
00:13:52,320 --> 00:13:54,240
然后，您也可以在协议中传输内容。

174
00:13:54,320 --> 00:13:57,160
假设我想向您发送五枚硬币。

175
00:13:57,160 --> 00:13:58,840
好的？

176
00:13:58,840 --> 00:14:03,840
从那里，您可以将这些视为所有人，

177
00:14:04,340 --> 00:14:07,080
就像我们现在要结构的方式

178
00:14:07,080 --> 00:14:09,960
这样我们就可以让每个人加入系统，

179
00:14:09,960 --> 00:14:12,320
这些结束节点我正在谈论加入系统

180
00:14:12,320 --> 00:14:14,900
并一起工作，您以某种方式将它们构造

181
00:14:14,900 --> 00:14:17,200
他们计算同一件事

182
00:14:17,200 --> 00:14:18,400
鉴于所有这些输入，对吗？

183
00:14:18,400 --> 00:14:20,540
因此，我们假设每个人都有相同的输入

184
00:14:20,540 --> 00:14:23,080
对于协议，如果您考虑它，

185
00:14:23,080 --> 00:14:28,000
这只是所有交易的记录。就像当我们铸造硬币时一样，您也可以想象

186
00:14:28,000 --> 00:14:32,420
燃烧硬币或其他东西。但是无论哪种方式，都有可以喜欢进出的方法

187
00:14:32,420 --> 00:14:36,860
系统。有一些方法可以喜欢在系统中传输这些硬币，对吗？如果你接受

188
00:14:36,860 --> 00:14:41,340
我们正在建立整个经济的整个历史的整个清单，您可以

189
00:14:41,340 --> 00:14:46,500
想象一下，如果您喜欢以相同的方式概括这些输入，那么您将获得一个输出，

190
00:14:46,759 --> 00:14:50,500
正确的？在这种情况下，单个输出将是我们目前对每个人的平衡的分类帐。

191
00:14:50,500 --> 00:14:59,279
因此，在任何时间点，我们都可以问结束节点，例如，嘿，您知道，系统中每个人的平衡是什么，对吗？

192
00:14:59,279 --> 00:15:03,200
如果我从100个硬币开始，我花了5枚。

193
00:15:03,559 --> 00:15:06,179
现在突然它说我有95分，你有5分。

194
00:15:07,080 --> 00:15:11,440
而且，如果您考虑一下，您可以为此做到这一点。

195
00:15:12,399 --> 00:15:15,840
在任何时间点，您都可以查看此输出的摘要。

196
00:15:15,840 --> 00:15:20,920
它。因此，回到这一点，就像学术文学和所有工作一样，您

197
00:15:20,920 --> 00:15:25,300
知道，在过去的几十年中，这个概念称为状态机器的复制。

198
00:15:26,420 --> 00:15:30,940
这里的复制是指以下事实：您知道，我们有多个节点

199
00:15:30,940 --> 00:15:36,080
系统。他们本质上是所有重复的，您知道，这是相同的工作，就像输入日志一样

200
00:15:36,080 --> 00:15:41,540
相同的输出。特别是，这就是我们共识的意思是系统中的每个节点

201
00:15:41,539 --> 00:15:43,759
最终应该同意输出。

202
00:15:44,699 --> 00:15:47,379
再一次，您编写程序，协议

203
00:15:47,379 --> 00:15:49,519
就像输入的确定性函数一样。

204
00:15:49,919 --> 00:15:52,719
您想象那时，如果您有一个诚实的节点，

205
00:15:52,799 --> 00:15:55,099
他们将在相同的输入上运行相同的功能。

206
00:15:55,279 --> 00:15:56,879
他们必须获得相同的输出，对吗？

207
00:15:56,919 --> 00:15:59,199
就像假设协议中没有错误或其他任何内容

208
00:15:59,199 --> 00:16:02,099
对于相同的输入，您将获得相同的输出。

209
00:16:03,959 --> 00:16:06,519
这对于摆脱我们的单一可信赖的操作员很有用

210
00:16:06,519 --> 00:16:08,399
因为随着节点的数量增加，

211
00:16:08,579 --> 00:16:10,019
系统变得更难攻击。

212
00:16:10,019 --> 00:16:18,579
您现在不得不说攻击两三个或所有这些。

213
00:16:18,579 --> 00:16:32,579
系统中有大多数的概念，这确实是我说共识时的意思是，在任何时间点，应该有一些大多数节点都具有相同的视图或相同的输出，相同的节点状态。

214
00:16:32,580 --> 00:16:41,759
因此，当他们这样做时，即使某些节点是错误的，您仍然有大多数节点说，这是世界的状态，对吗？

215
00:16:41,860 --> 00:16:48,560
因此，这就是想法是，现在攻击我们的系统变得更加困难，因为我们有更多的节点在做同样的事情。

216
00:16:53,740 --> 00:16:54,139
好的。

217
00:16:54,480 --> 00:16:55,240
聊天很少。

218
00:16:56,259 --> 00:16:57,879
我假设每个人都在跟随。

219
00:16:59,960 --> 00:17:01,220
让我们在这里看看。

220
00:17:01,580 --> 00:17:02,180
一秒钟。

221
00:17:02,580 --> 00:17:13,840
是的，要清楚，亚历克斯（Alex），在Discord中进行了很多聊天，因此在此特定平台中没有太多YouTube聊天或聊天。

222
00:17:14,240 --> 00:17:19,640
因此，马里奥和我会说有任何重要的问题或评论要说，因为您不在查看它。

223
00:17:19,640 --> 00:17:20,620
好吧，太好了。谢谢。

224
00:17:20,880 --> 00:17:25,759
是的，我也可以尝试找到不和谐，但这可能是对我的辅助任务。

225
00:17:25,880 --> 00:17:28,559
所以无论如何，是的，只要我应该解决问题。

226
00:17:28,559 --> 00:17:33,359
好吧，让我们跳回去。

227
00:17:33,359 --> 00:17:39,119
因此，这里的重点是我们要增加系统中的节点数量。

228
00:17:39,119 --> 00:17:45,679
如果我们的所有软件都破裂并且我们的变体都可以满足，那么很难

229
00:17:45,679 --> 00:17:52,960
攻击。因此，我在文献中围绕共识中四处乱逛的观念，这是提到的

230
00:17:52,960 --> 00:17:55,759
称为拜占庭的容错。

231
00:17:55,759 --> 00:18:01,519
因此，逻辑是，好的，如果系统中的更多节点意味着它更安全，那么我们

232
00:18:01,519 --> 00:18:04,100
想要大量的节点。

233
00:18:04,100 --> 00:18:07,279
我在这里称呼它，这是一个很高的数字。

234
00:18:07,279 --> 00:18:11,259
您可以想象限制，这就像Internet上的每个节点一样，对吗？

235
00:18:11,259 --> 00:18:16,519
就像您的冰箱可以参与的一样，您的计算机在家，所有计算机

236
00:18:16,519 --> 00:18:21,039
在这些数据中心，我不知道，您的汽车沿着高速公路行驶，您可以想象

237
00:18:21,039 --> 00:18:23,639
连接到Internet的所有内容都可以参与此协议。

238
00:18:24,519 --> 00:18:27,559
然后，您的节点数量非常高

239
00:18:27,559 --> 00:18:29,019
难以置信的攻击系统。

240
00:18:30,339 --> 00:18:34,180
因此，事实是，当您在公共互联网上转到此设置时，

241
00:18:35,159 --> 00:18:38,259
互联网就是这样，同样是无许可的开放系统，人们

242
00:18:38,259 --> 00:18:43,700
可以加入并离开，这样做可能会开始出现问题。

243
00:18:44,720 --> 00:18:48,720
因此，举一些例子，您知道，假设我们在互联网上有20个节点。

244
00:18:48,720 --> 00:18:54,779
互联网是一个错误的系统。因此，例如，有些节点可能会简单地错过消息

245
00:18:54,779 --> 00:19:02,819
来自其他节点。如果我在家里去本地节点，然后发送它，嘿，转移一些硬币

246
00:19:02,819 --> 00:19:09,600
从我到你，可能只是没有其他原因，除了互联网上的混乱之外

247
00:19:09,839 --> 00:19:14,100
我的交易最终并没有达到足够的节点来成为共识的一部分。

248
00:19:14,099 --> 00:19:17,339
可能会有错误实现。

249
00:19:17,339 --> 00:19:18,879
因此，您可以想象，您知道，

250
00:19:18,879 --> 00:19:20,099
我们有所有这些节点

251
00:19:20,099 --> 00:19:21,659
他们喜欢不同的实现

252
00:19:21,659 --> 00:19:23,099
在同一软件中。

253
00:19:23,099 --> 00:19:25,719
再说一次，只要有正确的实现，

254
00:19:25,719 --> 00:19:28,980
是的，他们会计算相同的输出，一切都很好，

255
00:19:28,980 --> 00:19:30,139
但是可能会有一个错误。

256
00:19:30,139 --> 00:19:32,839
因此，也许有些节点从网络上脱落

257
00:19:32,839 --> 00:19:34,199
或看到不同的视图。

258
00:19:35,240 --> 00:19:36,659
也可能存在硬件故障。

259
00:19:36,659 --> 00:19:39,059
所以这与失败类似

260
00:19:39,059 --> 00:19:40,619
就像互联网的运输一样

261
00:19:40,619 --> 00:19:47,079
您可以想象，您知道，我在烤面包机上运行了货币协议，而我的烤面包机则下降了

262
00:19:47,079 --> 00:19:50,619
因为我喜欢做烤面包，而且它没有足够的资源来处理

263
00:19:50,619 --> 00:19:56,699
交易，对吗？因此，也许在短时间内，这个节点会离线。

264
00:19:57,719 --> 00:20:01,559
否则可能会有积极的攻击。再次，回到上一件事，您知道，

265
00:20:01,679 --> 00:20:06,279
如果这是有用或有价值的协议，那么人们将直接激励去尝试和尝试

266
00:20:06,279 --> 00:20:11,279
打破它。因此，有人实际上可以积极攻击网络中的某些节点。

267
00:20:12,799 --> 00:20:17,319
所有这些类型的东西，我们都想称这是拜占庭的故障。再一次，

268
00:20:17,339 --> 00:20:21,460
这是从学术文献中出来的，但想法是，如果我们有其中之一

269
00:20:21,460 --> 00:20:26,039
运行一致的协议，我们要确保对任何任意失败都容忍

270
00:20:26,039 --> 00:20:30,559
那可能会发生，对吗？因此，再次可能会有一个错误，一个节点可能不正确地行动或

271
00:20:30,559 --> 00:20:35,819
不诚实，无论发生什么，我们都想确保，至少在某些时间范围内，

272
00:20:35,819 --> 00:20:41,259
最终，您可以到达大多数节点具有相同视图的地方。

273
00:20:42,139 --> 00:20:45,819
如果没有，那么会有共识失败，是的，我们的协议被打破了。

274
00:20:46,939 --> 00:20:52,700
所以，是的，如果您想真正挖掘此此查找拜占庭式容忍度。再次，

275
00:20:52,700 --> 00:20:56,460
关于这个文献很多，即使您知道，

276
00:20:57,179 --> 00:21:01,980
但是想法是，基本上，我们假设有些节点实际上是有缺陷的。

277
00:21:01,980 --> 00:21:07,980
某些比例F是错误的，我们仍然希望将共识垂直，以便我们可以就可以达成共识

278
00:21:07,980 --> 00:21:15,500
即使存在这个故障的分数，输出uh也可以

279
00:21:15,500 --> 00:21:22,299
进入这里，我们会专注于以太坊，所以我将简要介绍这些以太坊，但很高

280
00:21:22,299 --> 00:21:28,299
级别UM考虑到这一点的一般方法是他们所说的两相提交，这意味着什么

281
00:21:28,299 --> 00:21:36,599
是假设我们在网络中有终点节点，然后基本上，一个或一个或

282
00:21:36,599 --> 00:21:41,480
一些节点说，嘿，我认为我们的协议的下一个状态是，x，我

283
00:21:41,480 --> 00:21:46,299
不知道，某些随机状态，例如，将我们的最新转移纳入了

284
00:21:46,299 --> 00:21:52,259
系统，这些最新的转移将在时间t上余额到另一组

285
00:21:52,259 --> 00:21:57,720
时间t加1的余额。这两个阶段提交的工作方式，又有两个阶段，

286
00:21:58,299 --> 00:22:03,399
您知道，第一阶段是系统中有一些节点说，嘿，我认为第二天就是这样。

287
00:22:03,700 --> 00:22:08,119
他们将国家发送给每个人，这意味着网络中的所有其他节点。

288
00:22:08,119 --> 00:22:10,579
然后，所有其他节点必须承认这一点。

289
00:22:10,899 --> 00:22:23,359
然后，一旦您看到拜占庭的容忍分数，说三分之二，您最终会在这个地方，我知道我将有多数人同意我的意见，因为他们已经这样做了。

290
00:22:24,259 --> 00:22:25,019
所以那是第一阶段。

291
00:22:25,019 --> 00:22:30,259
然后第二阶段说，基本上，我只是接受这是协议的新状态。

292
00:22:31,079 --> 00:22:43,480
而且，这种工作的方法是，同样，假设我达到了容忍的宽敞阈值，例如，三分之二的三分之二，那么系统中的其他任何地方都无法像其他多数观点一样。

293
00:22:45,539 --> 00:22:49,839
再说一次，人们实际上已经建立了许多例子。

294
00:22:49,839 --> 00:22:54,000
这是人们甚至在加密货币之前很久以前遇到的问题，就像我们试图扩展互联网一样

295
00:22:54,000 --> 00:22:58,399
做这个完全相同的事情，您会有很多节点，您希望它们宽容

296
00:22:58,399 --> 00:23:04,639
这些类型的失败。特别是在PBFT中达到顶点，这代表实用的拜占庭断层

297
00:23:04,639 --> 00:23:11,599
宽容。这是一个基本上让您这样做的协议。问题是

298
00:23:11,599 --> 00:23:19,439
使用PBFT和许多这些更古典的BFT协议，它们在节点计数中受到限制

299
00:23:19,440 --> 00:23:23,759
特别是，您会收到此二次消息传递PBFT，部分原因是它是两阶段

300
00:23:23,759 --> 00:23:30,400
犯罪。我们的意思是，如果有说明，例如，您知道网络中的十个节点，

301
00:23:30,400 --> 00:23:35,519
他们必须交换发言，100条消息实际同意这是国家，

302
00:23:35,519 --> 00:23:40,960
另外，其他所有人都将其视为同一状态。这意味着这些系统很友善

303
00:23:40,960 --> 00:23:46,640
有限的节点有限。我试图跨越一秒钟前的观点是，

304
00:23:46,640 --> 00:23:52,160
特别是对于这些事情，例如您知道使这些代表数字短缺的系统

305
00:23:52,160 --> 00:23:56,880
以一种非常安全的方式，您实际上希望节点计数要比我们能做的要高得多

306
00:23:56,880 --> 00:24:03,440
实际上，使用这些类型的协议，如果您想进一步挖掘这个问题，uh

307
00:24:03,440 --> 00:24:08,160
一般问题是拜占庭将军的问题，他们正在尝试解决

308
00:24:08,160 --> 00:24:12,160
就像解决这个权利一样，我们希望能够以很高的节点达成共识

309
00:24:12,160 --> 00:24:15,360
即使存在一些恶意或一些拜占庭分数。

310
00:24:16,320 --> 00:24:21,680
有一段时间，这是研究的状态，这是我们能做的最好的。

311
00:24:22,320 --> 00:24:27,600
人们正在研究这一点，但最终，是的，我们只是继续前进直到

312
00:24:27,600 --> 00:24:35,440
比特币的出现。所以我现在要谈谈，您知道，我们正在进入加密货币

313
00:24:35,440 --> 00:24:46,720
在进行Alex UM之前，我们在这里遇到了一个问题，UH Nana问的是UH是否在PBFT

314
00:24:46,720 --> 00:24:53,360
协议像上限一样，如果是的话，那实际上是什么好问题

315
00:24:53,360 --> 00:24:58,240
因此，并不是说像硬上限一样

316
00:24:58,240 --> 00:25:04,799
更多的开销，因此，例如，如果您有10个节点

317
00:25:04,799 --> 00:25:10,379
加入协议，然后您可以说，您知道，与我不知道的处理消息，

318
00:25:10,500 --> 00:25:15,399
例如，假设您知道，几百毫秒的延迟。当你去

319
00:25:15,519 --> 00:25:19,419
就像，100个节点，然后您可以想象，有这样的节点，例如，更大的缩放

320
00:25:19,419 --> 00:25:23,099
开销。然后，在某个时刻，您知道，如果要带我们去同意的话

321
00:25:23,099 --> 00:25:29,359
在我们的下一个状态，就像我们所有的交易一样，系统开始变成

322
00:25:29,359 --> 00:25:34,519
有用不那么有用。而且，您知道，这是一个问题，例如，如果我们想做一些事情，例如

323
00:25:34,519 --> 00:25:39,720
好的，让我们喜欢签证，就像信用一样，您知道他们像您一样正在处理的信用卡网络

324
00:25:39,720 --> 00:25:45,940
知道我不知道成千上万的交易，每秒的交易

325
00:25:45,940 --> 00:25:50,019
如果您想要相同水平的吞吐量，则可以像

326
00:25:50,019 --> 00:25:56,019
大量的节点超出了您所知道的少数值得信赖的签证服务器的时间

327
00:25:56,019 --> 00:25:59,859
嗯，总的来说，这基本上是像吞吐量和延迟之间的权衡

328
00:25:59,859 --> 00:26:05,699
而且您知道这些共识协议不是魔术，它们受物理定律的约束

329
00:26:05,699 --> 00:26:09,799
因此，他们知道必须正确遵循相同的约束

330
00:26:09,799 --> 00:26:21,240
嗯，希望这很有帮助，是的，谢谢你，好吧，嗯

331
00:26:21,240 --> 00:26:28,359
是的，有点像比特币一样的创新，这就是每个人都非常喜欢的

332
00:26:28,359 --> 00:26:34,059
最初对加密货币感到兴奋，就像在某种意义上，您知道，Satoshi，

333
00:26:34,059 --> 00:26:39,259
比特币提出的系统在某种意义上解决了这个拜占庭将军问题。

334
00:26:40,399 --> 00:26:44,799
因此，这里很酷的是它会扩展到任意节点计数。所以，你可以

335
00:26:44,799 --> 00:26:50,119
越过这种瓶颈，有一定数量的节点同意。特别是

336
00:26:50,119 --> 00:26:55,179
是的，系统的设计方式是任何人都可以加入或离开。再次，系统，

337
00:26:55,180 --> 00:27:01,420
您知道，在一起就像这种行为非常宽容。我们有一个共识

338
00:27:01,420 --> 00:27:06,160
在一秒钟内查看，使您进入同一状态。是的，节点可以自由地来去去

339
00:27:06,160 --> 00:27:09,039
而且，您知道，您可以通过可扩展性瓶颈来度过难关。

340
00:27:10,259 --> 00:27:16,259
因此，特别是，比特币具有这种工作证明。您取得此证明，

341
00:27:16,620 --> 00:27:21,100
同时，它也使您对链的重量类似或

342
00:27:21,099 --> 00:27:25,980
困难。共识算法非常简单。你只是看链条

343
00:27:25,980 --> 00:27:31,240
在那里您可以从公共互联网上观察到，然后选择最重的链或

344
00:27:31,240 --> 00:27:36,599
一个工作最多的工作。如果您这样做，只要您对链的看法与

345
00:27:36,599 --> 00:27:42,000
其他所有人，您最终都会达到链条的同一状态。因为假设有一个

346
00:27:42,000 --> 00:27:45,740
诚实的大多数网络节点，他们都将遵循相同的协议。

347
00:27:45,740 --> 00:27:51,339
他们将遵循最重的链条。如果这样做，您最终进入了同一地方。

348
00:27:53,180 --> 00:28:05,500
所以，让我看看下一步是什么。好的。是的。所以，让我现在实际移动到我要画画

349
00:28:05,500 --> 00:28:12,380
一些图可以解开我刚才说的话。而且我需要一秒钟才能进行设置。

350
00:28:15,740 --> 00:28:17,420
好吧，让我们看看。

351
00:28:21,480 --> 00:28:22,539
我们会这样做。

352
00:28:23,019 --> 00:28:28,240
然后我想我将不得不停止这个，但我会回到这里。

353
00:28:30,279 --> 00:28:32,900
好的。

354
00:28:34,039 --> 00:28:35,880
所以我相信你可以看到这个。

355
00:28:36,440 --> 00:28:39,140
所以，好吧，我们在这里是什么意思？

356
00:28:39,279 --> 00:28:42,980
因此，考虑到这一点的方法是我们从某种初始状态开始。

357
00:28:42,980 --> 00:28:45,000
这就像比特币中的创世纪块。

358
00:28:45,000 --> 00:28:48,940
这是什么都没关系，但是你知道，

359
00:28:48,940 --> 00:28:51,200
我们在这里有小街区，

360
00:28:51,200 --> 00:28:53,460
我将其放在创世纪上。

361
00:28:53,460 --> 00:28:57,619
现在的想法是，任何想加入系统的人，

362
00:28:57,619 --> 00:28:59,619
他们来了，他们可以添加一个块，对吗？

363
00:28:59,619 --> 00:29:01,640
然后，假设我们有一堆交易

364
00:29:01,640 --> 00:29:04,920
在这里，我只是做一些小点。

365
00:29:04,920 --> 00:29:06,859
这些是交易说的，你知道，

366
00:29:06,859 --> 00:29:08,920
我要向我发送一个比特币，

367
00:29:08,920 --> 00:29:10,759
我们将在这里发送一半比特币，

368
00:29:10,759 --> 00:29:11,759
他们做什么，对吗？

369
00:29:11,759 --> 00:29:14,420
这些都只是在系统中传输。

370
00:29:15,000 --> 00:29:21,579
这种起作用的方法是，如果我想提出一个块，然后再一次，任何人都可以做到这一点。

371
00:29:21,980 --> 00:29:23,640
我们将在一秒钟内看到这种工作方式。

372
00:29:23,799 --> 00:29:27,859
但基本上，我喜欢所有这些捆绑，然后我做一个障碍。

373
00:29:28,299 --> 00:29:29,539
所以这里有一个街区。

374
00:29:30,700 --> 00:29:33,400
我会继续删除这些，因为我们将它们移到其他地方。

375
00:29:34,880 --> 00:29:37,420
是的，这里有几件事。

376
00:29:37,420 --> 00:29:43,099
因此，在比特币中要意识到的关键是，有这样的工作概念。

377
00:29:43,099 --> 00:29:51,179
工作证明是，是的，是的，这个想法基本上是当我看到此消息时，

378
00:29:51,179 --> 00:29:55,419
涉及一些密码学，使我知道一定数量的工作或计算

379
00:29:55,419 --> 00:30:01,259
电源专门用于这个障碍。一种考虑它的一种方法是您密封块，

380
00:30:01,259 --> 00:30:06,299
您正在添加这个特殊的东西，无论花多少钱，都可以向任何人证明

381
00:30:06,299 --> 00:30:11,899
生产的工作。基本上，这种工作方式是加密的概念

382
00:30:11,900 --> 00:30:17,980
缓存您知道我给它一些数据，我会像摘要一样回到这个数据，就像摘要一样

383
00:30:18,540 --> 00:30:23,580
是的，基本上是获得此摘要的唯一方法，因为这些哈希就像是随机的

384
00:30:23,580 --> 00:30:27,340
获得这一点的唯一方法是我一定刚刚计算出的哈希

385
00:30:28,700 --> 00:30:31,820
所以你做得好的第一件事，我的意思是你做几件事，但是

386
00:30:32,620 --> 00:30:37,019
嗯，你知道现在我们有了我们的街区，然后我们喜欢这里的所有交易

387
00:30:37,019 --> 00:30:44,220
好吧，你知道，很酷的一件事是，这个块将引用哈希

388
00:30:44,220 --> 00:30:50,379
在上一个块中，这就像这里的箭头一样

389
00:30:50,379 --> 00:30:55,019
您实际上可以建立历史

390
00:30:55,019 --> 00:31:00,779
就像在太空中漂浮在一起，您知道我需要知道这些方式

391
00:31:00,779 --> 00:31:06,859
交易应进行排序，因为最终您知道嗯，也许我们会这样考虑

392
00:31:06,859 --> 00:31:10,619
您希望那里像一个独特的序列，所以想象一下您知道我正在绘制交易

393
00:31:10,619 --> 00:31:17,179
在这里，您知道这就像您知道的，再加上五个比特币，喜欢其他帐户

394
00:31:17,179 --> 00:31:24,379
您知道加上某些帐户B的0.5 b无论他们um什么都应该有一个唯一的序列

395
00:31:24,379 --> 00:31:28,619
这就是为什么我们需要共识才能获得这个独特的顺序，然后任何人都可以基本上可以

396
00:31:28,619 --> 00:31:33,579
全部重播它们，您最终以与您知道的帐户相同的状态而结束

397
00:31:33,579 --> 00:31:40,460
帐户B有任何帐户C有您所知道的任何我不知道的uh三币两个比特币

398
00:31:40,460 --> 00:31:47,259
知道24比特币无论最终发生什么，所以我们这样做的方式又来了，我们需要它像独特

399
00:31:47,259 --> 00:31:52,220
我们将代表或喜欢与这些块序列化的顺序，因此您需要

400
00:31:52,220 --> 00:31:57,899
这种类似父母块的概念，所以您的做法基本上是您喜欢这个哈希

401
00:31:57,900 --> 00:32:03,900
这件事，我要说的是G，您实际上只是在此障碍物中写下g，这基本上说，

402
00:32:03,900 --> 00:32:09,019
好的，我知道这是，在这里，也许我会尝试一下。

403
00:32:15,820 --> 00:32:21,740
g。无论哪种方式。希望这很清楚。对不起，有点狭窄。但基本上你

404
00:32:21,740 --> 00:32:25,820
具有以前的块的哈希，这是这些加密哈希的方式

405
00:32:25,819 --> 00:32:30,619
功能工作是，除非我

406
00:32:30,619 --> 00:32:36,859
有以前的块。因此，您有它在这里和现在都有所有交易

407
00:32:36,859 --> 00:32:41,099
有这样的工作证明，您知道我们可以考虑的方式就是这样

408
00:32:41,099 --> 00:32:46,939
认可的印章给我做了一些计算标记，说我做了一些计算以实际制作

409
00:32:46,939 --> 00:32:55,099
这个块。好吧，这里有几件事，所以我们得到的第一件事是

410
00:32:55,819 --> 00:32:59,339
这项工作证明是这种限制的事情或这种民事保护的概念。

411
00:33:00,059 --> 00:33:05,019
因此，这再次是这些任何人都可以加入的无许可系统的大事。

412
00:33:05,019 --> 00:33:09,740
您需要有一些方法来限制在给定时间可以制作多少个块。

413
00:33:09,740 --> 00:33:14,220
否则，您知道，现在有10万亿个街区在这里等待

414
00:33:14,220 --> 00:33:18,859
这是一团糟。我的烤面包机脱机，因为它甚至无法处理这么多块

415
00:33:18,859 --> 00:33:24,700
我们有一个大问题。因此，所有这些不同的工作证明或证明的第一件事

416
00:33:24,700 --> 00:33:28,460
这些协议的工作方式是我们有一些概念的错误

417
00:33:28,460 --> 00:33:34,380
就像公民抵抗意味着您在合理的时间里只知道

418
00:33:34,380 --> 00:33:40,059
人说或喜欢一些人可以在给定时间进行这些更新或新块之一

419
00:33:42,299 --> 00:33:47,819
因此，让我们清理一点一点，现在另一件事是，就像您知道的那样

420
00:33:47,819 --> 00:33:52,700
比特币的见解是，我们不仅通过此证明获得了这种简单的保护

421
00:33:52,700 --> 00:34:01,019
在工作中，它可用于共识。现在的工作方式，让我放大一点

422
00:34:01,819 --> 00:34:08,860
如果我能解决这个问题。所以，是的，让我实际上只是清理一点。

423
00:34:09,500 --> 00:34:13,260
因此，这可以工作的方法是，现在，假设有，

424
00:34:13,260 --> 00:34:20,780
链中的几个街区。好吧，很酷。好的。我只是为了娱乐而抽一些。

425
00:34:20,780 --> 00:34:23,000
因此，我们在链中有这些块。

426
00:34:23,000 --> 00:34:27,100
再说一次，这将起作用的是，您知道，也许是从创世纪开始的

427
00:34:27,100 --> 00:34:31,600
状态，可能没有人有任何硬币，您现在可以重播所有

428
00:34:31,600 --> 00:34:35,000
交易，只是按块和序列进行。

429
00:34:35,000 --> 00:34:41,720
同样，这是状态机器复制的想法，如果我有相同的输入，我们都

430
00:34:41,720 --> 00:34:44,980
您知道，请正确实施我们的货币协议。

431
00:34:44,980 --> 00:34:48,680
我们所有人最终都以相同的输出来进行，例如，在这种情况下，您知道，

432
00:34:48,680 --> 00:34:50,200
我们的分类帐在某个时间点。

433
00:34:50,780 --> 00:34:54,019
所以我们这样做并写。

434
00:34:54,840 --> 00:34:57,380
现在，这里的另一件事是，有了这项工作证明，

435
00:34:57,380 --> 00:34:59,000
这是困难的想法，

436
00:34:59,000 --> 00:35:02,320
我们真的不需要超级杂草

437
00:35:02,320 --> 00:35:04,519
关于这项工作，但最终

438
00:35:04,519 --> 00:35:05,980
有困难的概念，

439
00:35:05,980 --> 00:35:09,460
特定的证明工作代表了多少工作。

440
00:35:09,460 --> 00:35:11,240
思考它的一种方法只是一个数字。

441
00:35:11,240 --> 00:35:15,040
所以我们可以说，好吧，这就像链中的第一个街区

442
00:35:15,040 --> 00:35:17,380
在这里，也许很难15，

443
00:35:17,380 --> 00:35:19,440
这些就像任意数字。

444
00:35:19,440 --> 00:35:23,400
您真正需要的是，它们是增加的数字。

445
00:35:24,440 --> 00:35:27,280
因此，您知道，假设这里有困难15。

446
00:35:27,360 --> 00:35:29,940
下一个块甚至很难一个。

447
00:35:29,940 --> 00:35:34,280
因此，这将在一秒钟内很有趣，因为它并没有严格增加，但这只是更多。

448
00:35:35,340 --> 00:35:39,380
然后，您知道，我不知道，假设在最后一个区块上有2000年的作品。

449
00:35:40,019 --> 00:35:42,360
因此，现在这种算法就像很简单。

450
00:35:42,360 --> 00:35:49,920
再次，这就像一部分的一部分，这是关于比特币和简单性的整个对话

451
00:35:49,920 --> 00:35:56,900
最终，考虑到这一点的方式是，这很简单，这就像一个

452
00:35:56,900 --> 00:36:02,340
您知道至少对比特币非常有吸引力的东西是我的方式

453
00:36:02,340 --> 00:36:08,640
找到链的头，就像最近的块一样，我只是总结了这些，我

454
00:36:08,639 --> 00:36:10,199
以最多的工作为例。

455
00:36:10,199 --> 00:36:11,940
这就是我一秒钟前的意思。

456
00:36:12,480 --> 00:36:15,599
所以在这里我们会说我们不知道，我想应该更好

457
00:36:15,599 --> 00:36:18,000
数字，但这就是16和2000。

458
00:36:18,400 --> 00:36:24,019
因此，您知道，这里的总工作，完全困难，呃，这将是2016年。

459
00:36:25,400 --> 00:36:25,799
好的。

460
00:36:26,519 --> 00:36:28,579
嗯，这条链中没有叉子。

461
00:36:28,639 --> 00:36:30,400
因此，这实际上是微不足道的。

462
00:36:30,400 --> 00:36:31,940
您甚至不需要实际查看。

463
00:36:31,980 --> 00:36:34,599
您只会去最近的街区说，那就是那个链条。

464
00:36:34,960 --> 00:36:35,279
好的。

465
00:36:35,280 --> 00:36:42,560
现在让我们看一个更复杂的示例。

466
00:36:42,560 --> 00:36:44,340
假设我们有这个。

467
00:36:44,340 --> 00:36:45,480
然后还可以。

468
00:36:45,480 --> 00:36:48,960
再说一次，考虑到这一点的方式就像任何人都可以来提出一个块

469
00:36:48,960 --> 00:36:49,960
随时。

470
00:36:49,960 --> 00:36:54,840
假设我们知道，我们在这种链条状态的某个地方，也许

471
00:36:54,840 --> 00:36:56,760
回到第一个街区。

472
00:36:56,760 --> 00:37:00,780
然后，现在其他人将会出现，他们将又有一个障碍。

473
00:37:00,780 --> 00:37:04,400
是的，是的，我们这样做。

474
00:37:04,400 --> 00:37:07,139
假设有人做一个竞争的障碍，

475
00:37:07,139 --> 00:37:11,160
与我们的第二个街区大约在同一时间

476
00:37:11,160 --> 00:37:14,220
但是他们的街区很难

477
00:37:16,099 --> 00:37:17,400
我不知道，我们会说10。

478
00:37:19,000 --> 00:37:20,900
细节实际上变得更加复杂，

479
00:37:20,900 --> 00:37:24,019
但这应该为您提供一些工作原理。

480
00:37:24,019 --> 00:37:26,000
假设这很难10，

481
00:37:26,000 --> 00:37:29,440
然后有人来了

482
00:37:29,440 --> 00:37:34,260
这很难，例如，是的，我不知道，3000。

483
00:37:34,260 --> 00:37:38,480
所以我错过了街区，对不起。

484
00:37:44,560 --> 00:37:47,800
因此，我们在这里有非常沉重的街区。

485
00:37:47,800 --> 00:37:51,720
所以现在考虑这一点的方法是

486
00:37:52,720 --> 00:37:54,460
现在，我们将所有这些块漂浮在周围。

487
00:37:54,460 --> 00:37:56,460
就像再说一遍，我们有烤面包机

488
00:37:56,460 --> 00:38:00,620
在此网络上运行，并看到了这组块。

489
00:38:00,620 --> 00:38:03,260
我们需要选择一个独特的链条。

490
00:38:03,260 --> 00:38:05,200
现在，因为您知道，一个块只能提交

491
00:38:05,200 --> 00:38:08,380
对于一个父母，您知道，您有此序列

492
00:38:08,380 --> 00:38:10,160
您基本上可以拥有

493
00:38:10,160 --> 00:38:11,860
让我们看看我是否可以做到这一点。

494
00:38:11,860 --> 00:38:15,020
这里有一个连锁店，对吗？

495
00:38:15,020 --> 00:38:18,100
这里还有一条链。

496
00:38:20,160 --> 00:38:21,940
这只是遵循这些父母链接。

497
00:38:21,940 --> 00:38:25,120
所以你开始，我可能会说，这片叶子，

498
00:38:25,120 --> 00:38:30,120
哪个是，我如何回到另一种颜色？

499
00:38:31,120 --> 00:38:32,460
好吧，这很有趣。

500
00:38:33,260 --> 00:38:41,740
嗯，我想我会这样做，所以你知道我们从这个块uh和这个块开始说，然后

501
00:38:41,740 --> 00:38:45,820
这种工作方式是现在有这些竞争的链条，我们仍然

502
00:38:45,820 --> 00:38:51,660
想要像单一序列一样回到单个序列，所以我们需要应用此算法

503
00:38:51,660 --> 00:38:56,780
现在，要右转到一个链的一个头，基本上是在基本上挑选此块或该块

504
00:38:56,780 --> 00:39:02,740
在比特币中，我们遵循这个困难数字，总结它们，基本上我们说，

505
00:39:02,740 --> 00:39:09,700
好的，看着2016年的顶级链，看着底部链，我们得到了，

506
00:39:09,700 --> 00:39:18,500
你知道，那是什么？ 3,025，对吗？是的。因此，这里的直觉是我们基本上看到了

507
00:39:18,500 --> 00:39:22,019
这条底部链，好吧，我们看到了两个连锁店，我们需要选择一个，我们只是简单地

508
00:39:22,019 --> 00:39:24,579
挑选一个完成的工作。

509
00:39:24,579 --> 00:39:28,199
因此，在这种情况下，我们要说的是，

510
00:39:28,199 --> 00:39:30,880
让我做这个绿色，

511
00:39:30,880 --> 00:39:34,780
这是链的当前负责人，对吗？

512
00:39:34,780 --> 00:39:37,360
特别是，这意味着所有这些

513
00:39:37,360 --> 00:39:40,639
像这个链条的竞争叉一样，这是

514
00:39:40,639 --> 00:39:43,539
让我使用这种颜色。

515
00:39:43,539 --> 00:39:45,800
所以这条连锁店，红链，

516
00:39:46,679 --> 00:39:49,019
基本上我们只是忽略了它，对吗？

517
00:39:49,019 --> 00:39:52,900
现在很酷，因为是的，

518
00:39:52,900 --> 00:39:55,699
任何人都可以随意加入系统。

519
00:39:55,699 --> 00:39:57,579
如果我可能错过了这个历史，

520
00:39:57,579 --> 00:39:58,780
但是我现在上网了，

521
00:39:58,780 --> 00:40:00,860
我刚刚下载了相同的块

522
00:40:00,860 --> 00:40:03,539
并且独立于其他任何人，

523
00:40:03,539 --> 00:40:05,519
我可以遵循这个困难，

524
00:40:05,519 --> 00:40:08,679
再次，这只是该哈希功能的结果。

525
00:40:08,679 --> 00:40:13,400
是的，这对我很明显。

526
00:40:13,400 --> 00:40:15,239
如果我想一个街区，

527
00:40:15,239 --> 00:40:18,639
那我知道我这样做的方式

528
00:40:18,639 --> 00:40:21,139
只是在这里做父母

529
00:40:21,139 --> 00:40:22,879
系统不断运转，对吗？

530
00:40:24,599 --> 00:40:25,440
好的。

531
00:40:27,239 --> 00:40:31,019
让我们看看，我现在要切换回幻灯片。

532
00:40:31,019 --> 00:40:32,460
希望这是有道理的。

533
00:40:33,699 --> 00:40:36,139
我知道，是的，有

534
00:40:37,299 --> 00:40:40,159
哦，我希望，我希望这是有道理的。

535
00:40:44,239 --> 00:40:46,139
让我回到这里。

536
00:40:46,139 --> 00:40:47,259
太好了。

537
00:40:48,639 --> 00:40:57,199
所以，是的，我试图弄清有工作证明的事情。

538
00:40:57,199 --> 00:41:03,019
希望我的图表清楚地表明，任何人都可以从

539
00:41:03,019 --> 00:41:09,219
互联网，即使在竞争连锁店的存在下，也有一种方法可以找到独特的链条。

540
00:41:09,219 --> 00:41:15,799
现在，仅使用一分钟前使用的一些单词，对吗？

541
00:41:15,800 --> 00:41:18,920
因此，这就像结构化作为状态机的复制。

542
00:41:19,840 --> 00:41:22,000
系统的输入是这些交易。

543
00:41:22,000 --> 00:41:26,220
因此，它们只是组织成比特币交易的块，您知道，花比特币

544
00:41:26,220 --> 00:41:26,860
这里和那里。

545
00:41:27,400 --> 00:41:32,120
同样，输出就像在独特的链中重播所有这些交易一样，

546
00:41:32,220 --> 00:41:33,760
您将获得分类帐的独特状态。

547
00:41:35,800 --> 00:41:40,240
您可以在这里使用密码学以减少可能的可能性，可以做一些事情，

548
00:41:40,620 --> 00:41:42,240
你知道，我称之为状态空间。

549
00:41:42,239 --> 00:41:48,219
但是，特别是，如果我只是进行交易，我可能想签署它。

550
00:41:48,379 --> 00:41:49,659
所以你知道这对我来说是独特的。

551
00:41:49,759 --> 00:41:53,339
就像我授权真正移动硬币，而不仅仅是把它们放在那里。

552
00:41:54,619 --> 00:41:57,139
我提到了有关父母哈希的这件事，对吗？

553
00:41:57,199 --> 00:42:01,719
因为否则您可以想象像我在绘制街区大海时一样。

554
00:42:03,939 --> 00:42:08,019
它大大降低了这种协议的复杂程度。

555
00:42:08,199 --> 00:42:09,919
就像您必须计算的算法一样。

556
00:42:09,920 --> 00:42:14,000
如果您可以限制可以有多少个选项，对吗？

557
00:42:14,820 --> 00:42:16,740
同样，这里的密码学对此非常有用。

558
00:42:17,200 --> 00:42:19,019
特别是，您不必信任

559
00:42:19,019 --> 00:42:21,180
其他一些第三方告诉你这些事情

560
00:42:21,180 --> 00:42:23,119
因为您可以在本地运行加密

561
00:42:23,119 --> 00:42:25,420
并自己解决同样的事实。

562
00:42:25,820 --> 00:42:27,539
因此，我们正在减少对系统的信任。

563
00:42:28,960 --> 00:42:30,220
然后您使用工作证明

564
00:42:30,220 --> 00:42:31,700
在这里实现共识。

565
00:42:32,340 --> 00:42:34,119
再说一次，有这种民事保护的概念

566
00:42:34,119 --> 00:42:36,519
您只需要做一些工作的地方

567
00:42:36,519 --> 00:42:38,420
在块之前，甚至考虑有效。

568
00:42:38,420 --> 00:42:43,700
然后，同样的呼吸，您知道，这对比特币来说是一件很酷的事情

569
00:42:43,700 --> 00:42:47,920
以多种方式利用这一点，但您不仅得到了类似的保护，而且还可以使用

570
00:42:47,920 --> 00:42:54,740
实现您的共识的困难概念，对吗？并给你一个独特的

571
00:42:54,740 --> 00:43:02,800
链。像这些加密货币一样，还有另一个很酷的地方。

572
00:43:03,059 --> 00:43:06,900
他们可以发行像原始货币一样，对吗？因此，您只需弥补这个钱协议即可。

573
00:43:06,900 --> 00:43:12,000
然后，您实际上也可以将钱分发给奖励，以激励人们实际上

574
00:43:12,180 --> 00:43:16,079
您知道，扩展链的状态。因为再次，请记住，我们现在处于

575
00:43:16,079 --> 00:43:21,400
这是一个无许可的开放系统。任何人都可以加入而没有任何动力，实际上

576
00:43:21,440 --> 00:43:26,500
就像，在链条中添加另一个块。您可能会想象没有人在乎吧？所以

577
00:43:26,500 --> 00:43:34,579
就像协议停止一样。正确的。因此，您将获得这些奖励，并且知道，

578
00:43:34,579 --> 00:43:40,019
它看起来像比特币还在运行UH的人关心它，是的，这很酷

579
00:43:42,659 --> 00:43:49,059
好的，希望这给您一些关于我们谈论共识时的含义的想法

580
00:43:49,059 --> 00:43:55,380
在这些分布式协议中，比特币只是因为它通常就像一个漂亮的

581
00:43:55,380 --> 00:44:01,139
直接思考这些东西的简单简单方法，现在我们将转向以太坊，所以

582
00:44:01,139 --> 00:44:11,960
所以总的来说，是的，是的，这里有很多话要说，但基本上是以太坊

583
00:44:11,960 --> 00:44:17,319
今天是在这种股份共识的证明中，我将在一秒钟内对此进行更多解释。

584
00:44:17,319 --> 00:44:19,699
以前，我们有证明工作共识机制。

585
00:44:19,699 --> 00:44:23,559
有一个称为合并的事件，基本上使我们下班以证明其技术。

586
00:44:23,559 --> 00:44:26,219
我将在一秒钟内更多地谈论。

587
00:44:26,219 --> 00:44:33,379
但最终，是的，我们现在拥有使用此列出证明的以太坊共识层

588
00:44:33,379 --> 00:44:34,980
协议。

589
00:44:34,980 --> 00:44:37,980
因此，让我们看一下。

590
00:44:37,980 --> 00:44:42,099
通常，从工作证明转变为验证证明，这个想法而不是使用它

591
00:44:42,099 --> 00:44:47,219
呼唤外源信号以保护共识，即您投入的这项工作

592
00:44:47,219 --> 00:44:51,879
要计算此正确的块哈希以发出信号，这是一个有效的块，它可以进入

593
00:44:51,879 --> 00:44:55,739
链，我们将使用内源信号。

594
00:44:55,739 --> 00:44:58,019
我的意思是，关于协议，对吗？

595
00:44:58,019 --> 00:45:01,279
因此协议本身现在可以看到

596
00:45:01,279 --> 00:45:02,899
因为我们有这个股份的概念。

597
00:45:02,899 --> 00:45:06,639
所以想法是您有一些硬币，在这种情况下，以太

598
00:45:07,079 --> 00:45:09,179
您将以太锁定为某种像，您知道，

599
00:45:09,239 --> 00:45:11,419
就像风险资本或系统中的股份一样。

600
00:45:12,619 --> 00:45:16,079
这与比特币中的工作相比

601
00:45:16,079 --> 00:45:18,799
就像这件事一样发生的事情。

602
00:45:19,019 --> 00:45:20,699
像比特币协议本身

603
00:45:20,699 --> 00:45:24,119
无法理解做什么工作。

604
00:45:24,119 --> 00:45:30,099
是的，是的，就像不是这是来自系统外部的东西。

605
00:45:30,440 --> 00:45:31,619
因此，希望这一点很清楚。

606
00:45:33,420 --> 00:45:44,319
事实证明，这样做真的很有用，因为现在您已经有一个协议表示，我们将用于共识，股份，您可以对此做更多的事情。

607
00:45:45,880 --> 00:45:48,400
因此，这是围绕激励问题的第二点。

608
00:45:48,559 --> 00:45:51,039
但是我只是简要介绍第一点，即能量用法。

609
00:45:51,039 --> 00:46:00,380
因此，您知道，人们曾经和仍然非常担心这种工作证明的方式现在几乎有这场竞赛喜欢折腾的工作，尽可能多地进行系统。

610
00:46:00,800 --> 00:46:07,400
这对安全系统来说是有益的，因为工作越多，就越难进行竞争障碍，并将系统重新构成像其他历史记录一样。

611
00:46:08,119 --> 00:46:11,779
但是与此同时，您有像将能量倾倒到系统中一样。

612
00:46:12,440 --> 00:46:17,320
而且，您知道，尤其是如果您认为比特币没有用或有价值，那么从某种意义上说，它似乎浪费了。

613
00:46:17,320 --> 00:46:24,039
因此，有这种推动力，但仍然是思考我们可以设计系统的更节能方式的推动力。

614
00:46:24,300 --> 00:46:26,480
这是转向股份证明的许多动机。

615
00:46:27,900 --> 00:46:33,960
因此，与此同时，关于工作证明本身也存在激励问题。

616
00:46:34,519 --> 00:46:40,160
同样，这种事实是，您无法获得工作奖励。

617
00:46:40,200 --> 00:46:43,260
您可以邀请人们做这项工作，喜欢在比特币中添加块。

618
00:46:43,260 --> 00:46:48,900
但是，如果他们不做您想做的事，就没有办法喜欢转身并惩罚他们或取走这些奖励。

619
00:46:49,100 --> 00:46:54,260
因此，您几乎有一半的思考方式就像胡萝卜和棍子一样。

620
00:46:54,600 --> 00:46:57,640
有一根棍子，或者更确切地说，对不起，有胡萝卜，对吗？

621
00:46:57,660 --> 00:47:00,940
因此，您可以用比特币的比特币分发这些胡萝卜。

622
00:47:02,060 --> 00:47:10,720
但是，没有话要说，好吧，如果您做得不好，如果您尝试积极地重新整理链，或者只是这样的东西，您知道，我会喜欢用棍子Swat。

623
00:47:10,719 --> 00:47:16,539
和uh的股份证明，因为您在

624
00:47:16,539 --> 00:47:21,019
协议本身实际上为您提供了更大的灵活性，例如棒子

625
00:47:21,019 --> 00:47:25,000
尤其是我们的意思是您实际上可以为不良行为分发处罚

626
00:47:25,000 --> 00:47:29,879
不仅奖励这会降低税收表面，而且通常使系统更安全

627
00:47:29,879 --> 00:47:40,239
是的，好的，所以我们会挖掘以太坊的利益证明，所以你知道它在很高的水平上

628
00:47:40,239 --> 00:47:43,399
它看起来更像是这些传统的BFT协议。

629
00:47:43,399 --> 00:47:46,079
再说一次，我会尝试扔一些图

630
00:47:46,079 --> 00:47:47,919
为了更清楚。

631
00:47:47,919 --> 00:47:49,539
有一个计划验证器。

632
00:47:49,539 --> 00:47:52,279
因此，该系统仍然是无许可的

633
00:47:52,279 --> 00:47:54,279
在任何人都可以加入的范围内

634
00:47:54,279 --> 00:47:55,739
但是他们确实必须放大股份，

635
00:47:55,739 --> 00:47:58,059
今天就像32 ETH。

636
00:47:58,059 --> 00:47:59,899
而这将运作的方式

637
00:47:59,899 --> 00:48:02,479
是您本质上运行类似两阶段的订单

638
00:48:02,479 --> 00:48:04,679
就像我在谈论一秒钟前一样。

639
00:48:04,679 --> 00:48:06,439
一旦您拥有BFT多数，

640
00:48:06,439 --> 00:48:08,719
因此，一旦说三分之二的链条已签约

641
00:48:08,719 --> 00:48:11,239
在链的某些独特状态下，

642
00:48:11,239 --> 00:48:14,359
没有办法签字，

643
00:48:14,359 --> 00:48:16,119
在另一个链上有多数签名

644
00:48:16,119 --> 00:48:18,480
没有我们称之为模棱两可的

645
00:48:18,480 --> 00:48:21,179
或再次，一些冲突。

646
00:48:21,179 --> 00:48:22,819
而且因为有这个资源

647
00:48:22,819 --> 00:48:25,079
在股份的协议中，

648
00:48:25,079 --> 00:48:27,019
如果我们确实观察到这些模棱两可之一

649
00:48:27,019 --> 00:48:28,899
或这些故障或冲突之一，

650
00:48:28,899 --> 00:48:31,939
我们实际上可以删除演员的股份

651
00:48:31,939 --> 00:48:34,939
可以这么说，谁搞砸了，对吗？

652
00:48:34,939 --> 00:48:38,299
因此，每个动作都基本上签署了。

653
00:48:38,300 --> 00:48:40,680
因此，您实际上可以拥有协议本身

654
00:48:40,680 --> 00:48:42,340
摄取这些消息，您可以说，

655
00:48:42,340 --> 00:48:45,460
嘿，你知道，大多数评估者

656
00:48:45,460 --> 00:48:46,700
说这是链

657
00:48:46,700 --> 00:48:48,720
后来他们想重新

658
00:48:48,720 --> 00:48:50,380
到另一个链的状态，

659
00:48:50,380 --> 00:48:51,780
但这实际上是冲突。

660
00:48:51,780 --> 00:48:53,860
因此，当他们这样做时，您可以说，

661
00:48:53,860 --> 00:48:56,580
嘿，这很糟糕，我会忽略另一个状态，

662
00:48:56,580 --> 00:48:59,940
而且，我将以某种方式惩罚您。

663
00:48:59,940 --> 00:49:01,840
这就是我们谈论削减的意思

664
00:49:01,840 --> 00:49:03,120
是基本上我们可以开始

665
00:49:03,120 --> 00:49:05,019
到那时甚至删除股份

666
00:49:05,019 --> 00:49:06,780
当我们观察到这些故障之一时。

667
00:49:06,780 --> 00:49:11,100
因此，最终，尤其是与这些工作链相比

668
00:49:11,100 --> 00:49:14,180
它的资源密集程度较低，更安全。

669
00:49:14,180 --> 00:49:19,060
听起来很酷。是的，

670
00:49:19,060 --> 00:49:21,000
我要切换回

671
00:49:21,000 --> 00:49:24,280
我的小白板在这里尝试去

672
00:49:24,280 --> 00:49:27,080
通过证明Stake协议的一些细节。

673
00:49:27,080 --> 00:49:32,019
如果有人有问题，这可能是一个疑问的好时机。

674
00:49:33,220 --> 00:49:36,560
这里有几个问题。

675
00:49:36,559 --> 00:49:44,900
好的。嗯，一个问题是，嗯，32 ETH教派有重要意义

676
00:49:44,900 --> 00:49:53,759
用于静止。当然。是的。所以有，嗯，它又回到了我们的同一瓶颈

677
00:49:53,759 --> 00:49:59,119
在谈论一秒钟前，在多少吞吐量或

678
00:49:59,119 --> 00:50:02,860
就像如何在给定时间内处理多少系统以及需要多长时间。

679
00:50:02,860 --> 00:50:18,079
32 ETH的想法是，这就像在验证太多的验证器之间取消了一些折衷，这意味着太多的开销，这意味着实际上要花太长时间才能真正达成共识，而不是很少系统不那么安全。

680
00:50:18,079 --> 00:50:22,239
几乎这几乎是它几乎是它的几乎是

681
00:50:22,239 --> 00:50:25,360
几乎这几乎是它几乎是它的几乎是

682
00:50:25,360 --> 00:50:28,480
几乎这几乎是它几乎是它的几乎是

683
00:50:28,480 --> 00:50:29,840
几乎这几乎是它几乎是它的几乎是

684
00:50:29,840 --> 00:50:31,759
几乎这几乎是它几乎是它的几乎是

685
00:50:31,759 --> 00:50:33,039
几乎这几乎是它几乎是它的几乎是

686
00:50:33,039 --> 00:50:34,960
几乎这几乎是它几乎是它的几乎是

687
00:50:34,960 --> 00:50:36,880
几乎这几乎是它几乎是它的几乎是

688
00:50:36,880 --> 00:50:40,740
较少的签名，这是该加密结构，可让您实际汇总

689
00:50:40,740 --> 00:50:41,740
消息。

690
00:50:41,740 --> 00:50:45,519
因此，您可以将它们汇总到

691
00:50:45,519 --> 00:50:49,820
一个，您知道，从相同数量的工作中，您基本上可以进行一个处理

692
00:50:49,820 --> 00:50:52,180
那会说一百，对。

693
00:50:52,180 --> 00:50:55,059
因此，我们实际上可以扩展系统。

694
00:50:55,059 --> 00:51:00,460
而且您知道，这是什么意思是，而不是，而不是更少

695
00:51:00,460 --> 00:51:03,880
验证者或其他数据帐户的东西，我们实际上可以降低股份

696
00:51:03,880 --> 00:51:04,880
必需的。

697
00:51:04,880 --> 00:51:06,240
这就是为什么您拥有32。

698
00:51:08,119 --> 00:51:09,160
酷，谢谢。

699
00:51:10,420 --> 00:51:12,160
另一个问题。

700
00:51:13,260 --> 00:51:15,700
验证器数量是否有上限

701
00:51:15,700 --> 00:51:16,539
在股份证明？

702
00:51:21,680 --> 00:51:22,440
理论上，不。

703
00:51:22,640 --> 00:51:24,400
但是再次，您会达到实用性

704
00:51:24,400 --> 00:51:26,640
这些是现实世界中的系统。

705
00:51:26,940 --> 00:51:29,820
因此，我们只有不到一百万个验证者

706
00:51:29,820 --> 00:51:30,840
现在在主网上。

707
00:51:31,840 --> 00:51:33,539
核心开发人员非常担心

708
00:51:33,539 --> 00:51:38,900
关于让您知道即使像200万正确的人一样

709
00:51:38,900 --> 00:51:43,300
我们必须在协议中进行许多许多优化，特别是喜欢实施

710
00:51:43,300 --> 00:51:51,059
即使达到这一数量，我们的HLSHQ测试网刚刚超过150万，它有效，但

711
00:51:51,059 --> 00:51:55,779
您知道我们绝对喜欢这些，就像更多的短暂测试网uh一样

712
00:51:55,779 --> 00:52:01,539
实际上，我们可以去有多高，基本上是的，你知道我不知道我们可以

713
00:52:01,539 --> 00:52:06,019
舒适地超越了这一点。所以，你知道，最后，如果我们有时间，我会触摸

714
00:52:06,019 --> 00:52:10,500
在未来的某些方向上，我们今天正在考虑的事情。其中之一是很重要

715
00:52:10,500 --> 00:52:14,179
实际上，出于这个原因，如何减少帐户的价值。

716
00:52:17,500 --> 00:52:20,500
伟大的。马里奥，您想遇到的其他问题吗？

717
00:52:22,420 --> 00:52:24,099
我认为现在很好。

718
00:52:24,099 --> 00:52:29,099
所以继续。

719
00:52:29,759 --> 00:52:30,739
好吧，太好了。

720
00:52:32,139 --> 00:52:33,440
让我们来看看。

721
00:52:33,440 --> 00:52:37,259
它的表情符号很小。

722
00:52:37,259 --> 00:52:39,860
让我们看看，让我仔细检查。

723
00:52:39,860 --> 00:52:44,400
我认为时间很及时，我们还可以，大约30分钟。

724
00:52:44,400 --> 00:52:48,000
好吧，让我们在这里看看。

725
00:52:48,000 --> 00:52:52,380
好吧，让我切换回白板。

726
00:52:54,099 --> 00:52:59,099
而且，好的，我们应该对此保持良好状态。

727
00:53:14,739 --> 00:53:17,900
所以，好吧，这是我以前的抄写

728
00:53:17,900 --> 00:53:19,299
围绕比特币共识。

729
00:53:19,299 --> 00:53:21,619
所以我们现在要看

730
00:53:21,619 --> 00:53:24,019
是的，让我获得一个新页面。

731
00:53:24,099 --> 00:53:28,259
我可以做到这一点。

732
00:53:28,259 --> 00:53:31,259
显然我不能。

733
00:53:31,259 --> 00:53:32,659
这很棒。

734
00:53:32,659 --> 00:53:33,659
好的。

735
00:53:33,659 --> 00:53:35,440
是的，我们这样做。

736
00:53:35,440 --> 00:53:36,699
所以，好的。

737
00:53:36,699 --> 00:53:37,699
对不起。

738
00:53:37,699 --> 00:53:41,719
所以，是的。

739
00:53:41,719 --> 00:53:49,159
让我们看一下以太坊的股份证明。

740
00:53:49,159 --> 00:53:58,460
所以，是的，让我考虑我想从哪里开始。

741
00:53:58,460 --> 00:54:00,500
我想这就像设定舞台。

742
00:54:00,500 --> 00:54:09,039
在以太坊内，我们拥有这些最终协议共识参与者，即验证者。

743
00:54:09,039 --> 00:54:13,119
是的，验证者做了很多。

744
00:54:13,119 --> 00:54:17,639
这也许有点令人困惑，因为您没有，这实际上是我认为的

745
00:54:17,639 --> 00:54:25,379
人们对以太坊周围的误解通常是您不需要锁定32th

746
00:54:25,379 --> 00:54:30,940
成为验证协议的验证器。任何人都可以加入协议。我可以跑步

747
00:54:30,940 --> 00:54:36,000
流节点现在不是...我不是协议中的共识演员，但我仍然

748
00:54:36,000 --> 00:54:40,500
跑步，我仍在验证我看到的所有块，运行验证者的共识

749
00:54:40,500 --> 00:54:47,559
提供，我达到了同一状态。这实际上很重要，因为验证者

750
00:54:47,559 --> 00:54:48,699
诚实信任，对吗？

751
00:54:48,699 --> 00:54:49,500
他们有这种罚款，

752
00:54:49,840 --> 00:54:50,440
像他们有这个

753
00:54:50,500 --> 00:54:51,440
我们有这种惩罚的方式

754
00:54:51,440 --> 00:54:52,000
在协议中。

755
00:54:53,099 --> 00:54:55,599
但是，正如我以后可能要去的那样

756
00:54:56,119 --> 00:54:57,559
您可以到达一个地方

757
00:54:57,559 --> 00:54:59,380
即使您知道，

758
00:54:59,440 --> 00:55:01,039
共识是正确的，

759
00:55:01,599 --> 00:55:03,500
共识可能像链

760
00:55:03,500 --> 00:55:04,960
那无法实现

761
00:55:04,960 --> 00:55:05,940
我们同意的事情。

762
00:55:06,159 --> 00:55:08,659
就像有恶意的多数一样，

763
00:55:08,779 --> 00:55:09,840
甚至验证器集，

764
00:55:09,980 --> 00:55:11,599
他们可以决定说，

765
00:55:11,759 --> 00:55:12,820
嘿，实际共识

766
00:55:12,820 --> 00:55:14,440
像块一样

767
00:55:14,440 --> 00:55:15,259
你知道，哪里

768
00:55:15,659 --> 00:55:16,820
我们印刷了一百万个ETH

769
00:55:16,820 --> 00:55:17,480
给所有验证者。

770
00:55:17,559 --> 00:55:21,039
这就像对协议这样的强烈侵犯，对吗？

771
00:55:21,059 --> 00:55:23,139
因为再次，我们对以太坊应该做什么有一个概念。

772
00:55:23,259 --> 00:55:26,799
像这样的醚资产，您知道，在ABM顶部的所有内容。

773
00:55:27,639 --> 00:55:29,900
而且，您知道，它仍然应该遵守规则。

774
00:55:30,059 --> 00:55:33,980
就像验证者在这里不应该在这里没有特殊角色

775
00:55:33,980 --> 00:55:34,719
共识函数。

776
00:55:35,320 --> 00:55:39,000
而且我们仍然希望让他们负责并保持检查。

777
00:55:39,119 --> 00:55:41,960
我们这样做的方式就像我们自己运行节点一样，对吗？

778
00:55:42,000 --> 00:55:47,059
因此，回到比特币一秒钟，你知道，每个人都在运行比特币，

779
00:55:47,059 --> 00:55:49,179
即使您没有在链条中添加块，

780
00:55:49,559 --> 00:55:50,719
你知道，作为这个矿工，

781
00:55:50,840 --> 00:55:52,400
您仍在检查协议，

782
00:55:52,599 --> 00:55:53,980
同样，要让矿工负责。

783
00:55:54,739 --> 00:55:56,779
同样的事情，你知道，

784
00:55:56,799 --> 00:55:58,440
您仍然想验证协议，

785
00:55:58,719 --> 00:56:01,519
即使您不是这些共识验证者之一。

786
00:56:03,039 --> 00:56:04,019
所以希望这很清楚。

787
00:56:05,619 --> 00:56:07,360
因此，此工作的方式是您拥有验证器。

788
00:56:08,360 --> 00:56:10,400
今天，如果您想喜欢加入系统，

789
00:56:10,599 --> 00:56:12,559
你知道，你喜欢找到32 ETH，

790
00:56:13,500 --> 00:56:15,119
这些天有很多钱，

791
00:56:15,119 --> 00:56:23,219
但是您拥有32 ETH，将其发送到EVM中的特殊位置。而且，你知道，

792
00:56:23,239 --> 00:56:28,039
我会假设你们通常会理解这是如何工作的，至少在广泛的笔触中，

793
00:56:28,119 --> 00:56:33,859
由于昨天或对不起，最后一次谈话，看执行层。但是只有你发送

794
00:56:33,859 --> 00:56:43,000
您的32 ETH签订了此存款合同。然后有一种方法，好吧，实际上，我将其提出来。

795
00:56:43,000 --> 00:56:50,280
让我完成这份合同。现在这是一个非常重要的事情

796
00:56:50,920 --> 00:56:58,519
是有一个共识层，CL和一个执行层。基本上，现在有两个

797
00:56:58,519 --> 00:57:04,280
协议的几乎不同部分共同起作用。在合并之前，这些事情是

798
00:57:04,280 --> 00:57:11,800
有点像嗯，你知道他们有点像一个单元，这是因为

799
00:57:11,800 --> 00:57:16,040
共识协议很漂亮，与样品相比，相对简单

800
00:57:16,040 --> 00:57:23,240
股份，因为您会看到很多事情正在发生，因此您知道复杂性的原因安全

801
00:57:23,240 --> 00:57:28,040
原因和历史原因嗯，这是新的购买狄更斯层的一种

802
00:57:28,039 --> 00:57:34,360
平行，这就是为什么我们要合并的原因是基本上是要提出这个新的共识

803
00:57:34,360 --> 00:57:42,119
层以添加链条共识并更换工作证明设置，所以让我们在那里看看是的

804
00:57:42,119 --> 00:57:49,079
我们走了，所以有一个共识层，一种思考的方法是，几乎有

805
00:57:49,079 --> 00:57:53,719
这里有两个不同的连锁店，所以就像共识层一样，正在达成共识块

806
00:57:53,719 --> 00:58:01,480
从某种意义上说，您知道的执行层也是如此

807
00:58:01,480 --> 00:58:07,099
嗯，这实际上的工作方式就像您知道此执行有效负载在每个

808
00:58:07,099 --> 00:58:11,179
共识块，所以它仍然像一个街区一样，但是您可以将其视为拥有

809
00:58:11,179 --> 00:58:16,459
这两个层正确，在执行层中，这是我们所有人都知道执行的地方

810
00:58:16,459 --> 00:58:22,359
状态生活EVM正在运行，例如，像存款合同一样，您

811
00:58:22,360 --> 00:58:28,039
在这个块中说，您将32 ETH放入存款合同中，现在有一种方法

812
00:58:28,039 --> 00:58:32,680
共识层基本上可以读取此执行层，而只是在观看此存款

813
00:58:32,680 --> 00:58:37,800
合同。因此，这意味着，当一个新验证者投入32个ETH时，

814
00:58:38,680 --> 00:58:43,160
CL可以看到的

815
00:58:43,160 --> 00:58:49,880
验证器。好的，所以别人有一种进入系统的方法，还有一种方法

816
00:58:49,880 --> 00:58:54,039
要退出，他们会添加一条共识层消息。假设，我不知道，

817
00:58:54,039 --> 00:58:59,820
我们将来去迷你。现在有，我将开始绘制像统一的大块

818
00:58:59,820 --> 00:59:06,300
事情，但最终，您知道，这个验证者将其放在退出中，可以说

819
00:59:06,380 --> 00:59:11,160
因为他们想停止验证处理的退出。最终，你知道，

820
00:59:11,180 --> 00:59:16,519
一些迷你块之后，您最终会退出其他一些块，您知道，我不知道，

821
00:59:16,519 --> 00:59:20,759
有些

822
00:59:20,759 --> 00:59:27,400
嗯，但是说你知道我们选择了嗯，我会在这里写一些随机的十六进制，在这里死牛肉咖啡馆是

823
00:59:27,400 --> 00:59:34,119
总是很有趣，然后一旦验证器完成验证，这项工作是如何的，有很多

824
00:59:34,119 --> 00:59:38,440
他们必须满足实际退出系统的条件，但是一旦他们拥有了

825
00:59:38,440 --> 00:59:42,840
想一想的是，您知道他们是否有32 eath或也许有一些奖励，所以假设他们要做

826
00:59:42,840 --> 00:59:47,360
到第34位，将其撤回到此执行层地址。

827
00:59:47,360 --> 00:59:49,079
他们可以转过身，然后重新沉积

828
00:59:49,079 --> 00:59:52,000
到系统，但是他们想这样做。

829
00:59:52,000 --> 00:59:53,420
但基本上，现在有这种方式

830
00:59:53,420 --> 00:59:54,539
从执行层出发

831
00:59:54,539 --> 00:59:56,720
进入共识层和后背，

832
00:59:56,720 --> 00:59:58,960
重要的是，这是无许可的。

833
00:59:58,960 --> 01:00:01,760
您真正需要加入系统的唯一一件事

834
01:00:01,760 --> 01:00:04,059
是股份，现在是第32位。

835
01:00:05,920 --> 01:00:09,360
所以，好吧，让我，

836
01:00:09,360 --> 01:00:13,140
我要如何做？

837
01:00:13,140 --> 01:00:15,320
我会继续前进。

838
01:00:15,320 --> 01:00:16,720
好的。

839
01:00:16,720 --> 01:00:20,700
所以我现在在系统中关心它。

840
01:00:20,700 --> 01:00:22,160
就像，我该怎么办？

841
01:00:22,160 --> 01:00:28,160
就像我在共识方面所做的主要事情一样，是建立共识。

842
01:00:28,160 --> 01:00:29,780
那我该怎么做呢？

843
01:00:29,780 --> 01:00:34,579
它的工作方式是，作为验证者，我将做出证明。

844
01:00:34,579 --> 01:00:36,440
如果您挖掘了这些东西，

845
01:00:36,440 --> 01:00:38,739
您到处都会看到这个词，

846
01:00:39,739 --> 01:00:41,099
主要是因为这是核心的事情

847
01:00:41,099 --> 01:00:42,799
验证者正在做。

848
01:00:42,799 --> 01:00:45,920
Sensation的意思是基本上是在说

849
01:00:45,920 --> 01:00:48,480
我只是基于当地的观点，

850
01:00:48,480 --> 01:00:51,400
这是一段时间的链条状态。

851
01:00:51,400 --> 01:00:56,400
连锁状态at

852
01:00:56,500 --> 01:00:57,460
有这个插槽的概念，

853
01:00:57,460 --> 01:00:58,500
我会在一秒钟内解释

854
01:00:58,500 --> 01:01:00,539
但是，我们只想说是插槽。

855
01:01:04,579 --> 01:01:21,380
这种工作的方法是，每个验证者都说主网上有一个百万验证器，这意味着在一定时间段内，在协议的这些一轮中，每个验证者都会做出一个基本上是签名的证明，它们会制作一个加密签名在他们的链状态上。

856
01:01:21,380 --> 01:01:27,180
而且，如果只有一条链，或者您知道，那么最终他们应该所有人都应该证明同一链。

857
01:01:28,480 --> 01:01:31,260
您可以在一段时间内获得所有证明。

858
01:01:31,640 --> 01:01:36,599
您基本上可以将它们全部概括，最终在链条的某些叉子上获得了一些损失重量的概念。

859
01:01:37,019 --> 01:01:39,900
所以，是的，我会在一秒钟内将其提出更多。

860
01:01:40,059 --> 01:01:47,180
但是最终，想法是，如果我在这里有区块链，那么现在就是以太坊。

861
01:01:47,179 --> 01:01:50,919
当然，一切都有父链或父块。

862
01:01:51,039 --> 01:01:51,419
那很好。

863
01:01:52,079 --> 01:01:54,579
这个想法是，当我去链中建立一个新块时，

864
01:01:55,139 --> 01:01:58,839
您知道，其他所有验证者都将基本上证明这一链条。

865
01:01:58,940 --> 01:02:01,679
因此，我会像许多检查标记一样绘制，因为有很多证明。

866
01:02:02,440 --> 01:02:07,059
特别是，如果这里还有其他街区

867
01:02:07,059 --> 01:02:11,179
那声称是同一父母，这不是链中的叉子，对吗？

868
01:02:11,379 --> 01:02:14,659
因为这些基本上是在说相对于

869
01:02:14,659 --> 01:02:16,440
这个插槽或这段时间，

870
01:02:16,440 --> 01:02:21,380
然后，您知道，下一个块是这个块或一个块。

871
01:02:21,720 --> 01:02:23,159
我们需要知道哪一个，对吗？

872
01:02:23,179 --> 01:02:25,519
这是共识的重点是，如果我们的共识协议是

873
01:02:25,519 --> 01:02:28,720
工作，我们只会选择一个，对吗？因为再次

874
01:02:28,720 --> 01:02:29,960
需要有这个独特的序列。

875
01:02:31,220 --> 01:02:35,139
因此，证明在这里对我们有所帮助，因为我们基本上可以使用

876
01:02:35,139 --> 01:02:37,659
证明是一种喜欢这些相对链的重量的方式。

877
01:02:37,740 --> 01:02:39,659
因此，假设有四个证明，

878
01:02:39,659 --> 01:02:41,079
这些像四个复选标记。

879
01:02:41,780 --> 01:02:46,039
假设这个障碍只有两个证明与

880
01:02:46,039 --> 01:02:51,320
工作证明，我们将使用证明，每种证明的股份，这是我的

881
01:02:51,320 --> 01:02:57,079
验证器在系统中的股权，作为此分数，以评分块。因此，在这种情况下，我们有

882
01:02:57,079 --> 01:03:02,119
四票与两票，我们会说这是链的负责人，所以我们去

883
01:03:02,119 --> 01:03:06,920
链中的下一个障碍，我们将以这一障碍为基础。我会再去一点

884
01:03:06,920 --> 01:03:11,320
深入到一点点，但最终，这是这些证明的想法

885
01:03:11,320 --> 01:03:21,039
在做。因此，我经常使用这些单词。因此，让我们在这里介绍一些细节。

886
01:03:21,960 --> 01:03:29,720
因此，这种方法的工作方式是该协议实际上具有一些概念，例如，您知道，

887
01:03:29,780 --> 01:03:34,559
我们称之为步行时钟时间。这意味着它实际上是您会的时间

888
01:03:34,559 --> 01:03:41,659
看到时钟，对吗？所以，你知道，如果是什么，那是什么样的604 UTC或其他

889
01:03:41,659 --> 01:03:49,400
现在，您知道，就像时间一样。我们要做的就是我们要选

890
01:03:49,400 --> 01:03:55,559
一些创世纪时间。因此，我只是说，您知道，在创世纪时间内T0。这个想法是

891
01:03:55,559 --> 01:04:00,739
就像共识协议启动时一样。现在喜欢真正结构

892
01:04:00,739 --> 01:04:05,699
事物。我们将再次将步行时钟时间分开，就像正常的时间感一样，

893
01:04:05,699 --> 01:04:11,699
我们将将其分为插槽。我会写下来。这是一个重要的概念。

894
01:04:12,819 --> 01:04:18,819
因此，我们有插槽。插槽通常是我们想要的任何时间。今天，

895
01:04:18,819 --> 01:04:24,819
他们是12秒。也许我们会谈论这意味着什么。但是想法是

896
01:04:24,820 --> 01:04:28,260
但是每12秒钟，有一个新的插槽，您知道，T1。

897
01:04:29,220 --> 01:04:31,880
好吧，我实际上甚至可以编号这些，

898
01:04:32,900 --> 01:04:36,860
您知道，插槽零，插槽一，每12秒，对吗？

899
01:04:38,260 --> 01:04:40,519
无论实际发生了什么，

900
01:04:41,680 --> 01:04:44,059
这只是跟随世界上的时间。

901
01:04:44,059 --> 01:04:47,059
因此，您总是每12秒就会有一个新的插槽。

902
01:04:48,559 --> 01:04:51,519
好的，所以我们有这些插槽。

903
01:04:51,519 --> 01:04:54,340
现在从这里

904
01:04:54,820 --> 01:04:59,539
每个插槽都会发生任何事情，我将在一秒钟内进行更多的说明，但基本上是

905
01:04:59,539 --> 01:05:05,460
例如，例如每个插槽都可以有一个块，以便我可以在这里有块

906
01:05:07,140 --> 01:05:12,900
就像您非常重要的是，您有可能知道任何验证者

907
01:05:12,900 --> 01:05:16,980
本来应该在插槽中提出的两个他们喜欢错过提议的原因，因此

908
01:05:16,980 --> 01:05:22,980
这实际上只是错过的

909
01:05:22,980 --> 01:05:26,760
下一个验证器将在插槽三中提出。

910
01:05:26,760 --> 01:05:29,659
再一次，你知道，所以这个块将有

911
01:05:29,659 --> 01:05:32,219
下一位父母将继续前进。

912
01:05:33,159 --> 01:05:35,519
因此，通常我们有插槽。

913
01:05:36,559 --> 01:05:38,280
您应该考虑的方式是每个插槽

914
01:05:38,280 --> 01:05:39,199
有一个街区。

915
01:05:39,199 --> 01:05:41,780
这就像以太坊的障碍时间。

916
01:05:41,780 --> 01:05:44,380
我们有点从工作中继承了这一点

917
01:05:44,380 --> 01:05:47,320
定位，也许说大约14秒。

918
01:05:47,320 --> 01:05:50,300
因此，12秒即可达到的数字。

919
01:05:50,300 --> 01:05:53,600
这个想法就像，这是我们最小的时间单位

920
01:05:53,600 --> 01:05:57,780
在您基本上应该放置一个块的协议中

921
01:05:57,780 --> 01:06:01,640
每12秒进入链条，每个插槽都可以。

922
01:06:03,360 --> 01:06:07,580
现在，这意味着，作为用户，

923
01:06:07,580 --> 01:06:09,840
让我们知道，去频谱的另一端，

924
01:06:09,840 --> 01:06:11,320
返回执行层。

925
01:06:11,320 --> 01:06:12,280
当我是用户时，你知道

926
01:06:12,280 --> 01:06:16,740
如果我在这里进行类似的单位交易交易，对吗？

927
01:06:16,740 --> 01:06:19,500
或者，我不知道，让我们说我喜欢在这里广播

928
01:06:19,500 --> 01:06:24,500
然后我希望，如果我能保留足够的绘画，

929
01:06:25,559 --> 01:06:28,420
我希望这基本上是一个验证者

930
01:06:28,420 --> 01:06:31,199
可以接我的交易，你知道，

931
01:06:31,199 --> 01:06:34,340
并将其放入，在这里我将使用其他颜色。

932
01:06:34,340 --> 01:06:35,960
这是我以蓝色的unistwap贸易。

933
01:06:35,960 --> 01:06:37,320
希望他们能收集我的交易

934
01:06:37,320 --> 01:06:38,460
与许多其他人一样

935
01:06:38,460 --> 01:06:41,039
他们实际上可以将其放入街区中

936
01:06:41,039 --> 01:06:42,860
进入插槽四。

937
01:06:42,860 --> 01:06:45,000
而且，您知道，如果您想使用，我不知道，

938
01:06:45,000 --> 01:06:47,239
metamask进行这项UNISWAP交易，您知道，

939
01:06:47,239 --> 01:06:49,739
有一段时间才显示在以太扫描上

940
01:06:49,739 --> 01:06:52,139
或者，如果您甚至查看本地节点，那就更好了。

941
01:06:52,139 --> 01:06:54,179
但最终有一段时间

942
01:06:54,179 --> 01:06:56,159
在您实际获得链上的交易之前。

943
01:06:56,159 --> 01:06:58,039
那是因为插槽时间。

944
01:06:58,039 --> 01:07:00,439
直到某个地方，您都没有新的街区

945
01:07:00,439 --> 01:07:02,139
在零到12秒之间，

946
01:07:02,139 --> 01:07:04,419
取决于您何时广播

947
01:07:04,419 --> 01:07:05,719
这项原始交易。

948
01:07:06,619 --> 01:07:07,459
好的。

949
01:07:08,379 --> 01:07:12,179
所以，这是一种感觉

950
01:07:12,179 --> 01:07:14,639
协议的心跳以及事情如何排队

951
01:07:14,639 --> 01:07:16,519
与您进行交易。

952
01:07:16,519 --> 01:07:17,719
那是执行层。

953
01:07:17,719 --> 01:07:19,340
单独有很多机械

954
01:07:19,340 --> 01:07:21,179
由此层组成。

955
01:07:21,179 --> 01:07:25,880
特别是，这是一件事，这些证明。

956
01:07:25,880 --> 01:07:29,119
再次想法是，对于每个插槽，

957
01:07:29,119 --> 01:07:33,460
让我回到另一种颜色。

958
01:07:33,460 --> 01:07:36,179
因此，对于每个插槽，您都会有一些证明。

959
01:07:36,179 --> 01:07:40,920
所以我不知道，假设验证者123的证明，

960
01:07:40,920 --> 01:07:44,759
我们进入这个街区，但也证明了456。

961
01:07:44,760 --> 01:07:47,560
总的来说，您将有很多证明

962
01:07:47,560 --> 01:07:50,460
每个块，然后单独

963
01:07:50,460 --> 01:07:52,520
您将为下一个区块有更多的东西，对吗？

964
01:07:52,520 --> 01:07:53,480
所以我不知道。

965
01:07:55,400 --> 01:07:56,760
选择您喜欢的验证器索引，

966
01:07:56,760 --> 01:07:59,160
但最终，验证者做出证明，

967
01:07:59,160 --> 01:08:01,100
这个想法是它应该转到下一个块。

968
01:08:01,100 --> 01:08:02,640
特别是，这是有效的方式

969
01:08:02,640 --> 01:08:04,960
是每个块中的每个块

970
01:08:04,960 --> 01:08:06,700
会有一个独特的状态

971
01:08:06,700 --> 01:08:09,500
他们证明的链，或者他们致力于

972
01:08:09,500 --> 01:08:12,320
然后验证者，当他们做出这些证明时，

973
01:08:12,320 --> 01:08:14,360
他们基本上只是看这个块

974
01:08:14,760 --> 01:08:18,619
因此，在车站说，从价值或一个，两个，三，三，

975
01:08:18,619 --> 01:08:20,400
他们会看链的状态。

976
01:08:20,400 --> 01:08:22,980
他们会说，哇，好吧。

977
01:08:22,980 --> 01:08:27,760
所以它确实有效的是，在这个插槽中，

978
01:08:27,760 --> 01:08:30,199
他们实际上会说他们先前的老虎机，

979
01:08:30,199 --> 01:08:32,739
在这种情况下，这甚至将带您回到这个块。

980
01:08:32,739 --> 01:08:35,159
但是最终您要看最新状态

981
01:08:35,159 --> 01:08:38,940
链条，他们会签约，

982
01:08:38,940 --> 01:08:42,039
嘿，我认为当前的街区是这个

983
01:08:42,039 --> 01:08:44,319
那将被包括在内。

984
01:08:46,840 --> 01:08:48,600
好吧，我在这里跑了一点同步。

985
01:08:49,199 --> 01:08:50,140
对此很抱歉。

986
01:08:50,399 --> 01:08:51,659
让我简化一点。

987
01:08:54,460 --> 01:08:55,859
我实际上就是这样做。

988
01:08:55,939 --> 01:08:57,880
因此，现在我们将真正放大一个插槽。

989
01:09:00,100 --> 01:09:02,500
假设我们将以三个插槽为例。

990
01:09:02,979 --> 01:09:04,560
这个方法是，

991
01:09:04,859 --> 01:09:09,500
因此，这就像t等于零，t等于12。

992
01:09:10,239 --> 01:09:11,779
再说一次，这就像插槽三。

993
01:09:12,039 --> 01:09:14,880
在这里就像插槽四。

994
01:09:14,880 --> 01:09:17,239
因此，我们现在只是在看一个插槽。

995
01:09:17,239 --> 01:09:21,079
这将使用的方式是，插槽三的验证器，

996
01:09:21,079 --> 01:09:24,600
他们要在这里做这个街区，

997
01:09:24,600 --> 01:09:27,579
他们应该在插槽开始时释放。

998
01:09:27,579 --> 01:09:29,539
这将从上一个插槽中得到证明，

999
01:09:29,539 --> 01:09:31,220
假设我的所有交易，

1000
01:09:31,220 --> 01:09:33,579
就像我的单位交易交易等等一样，

1001
01:09:33,579 --> 01:09:35,819
所有需要进入Xblock的东西

1002
01:09:35,819 --> 01:09:37,460
会在这里。

1003
01:09:37,460 --> 01:09:40,920
然后，这种工作的方式与四个相等，

1004
01:09:42,039 --> 01:09:47,039
只是将这个插槽分为三分之二或三分之二。

1005
01:09:50,600 --> 01:09:53,800
任何分配在插槽中测试的验证者，

1006
01:09:53,800 --> 01:09:54,800
他们要说的

1007
01:09:54,800 --> 01:09:56,920
嘿，我要认证。

1008
01:09:56,920 --> 01:10:00,779
假设我们在这里称呼它们的块根，

1009
01:10:00,779 --> 01:10:04,539
就像ABD。

1010
01:10:04,539 --> 01:10:06,079
他们会说我的证明。

1011
01:10:06,079 --> 01:10:08,739
因此，让我们再次研究验证者一，两个，三个。

1012
01:10:08,739 --> 01:10:10,319
他们的证明会说，是的，

1013
01:10:10,319 --> 01:10:18,239
我的链条状态是ABD，无论其余的哈希是什么。他们将播放他们的

1014
01:10:18,239 --> 01:10:23,299
证明。有不同的演员基本上有接下来的四秒钟来汇总

1015
01:10:23,299 --> 01:10:31,439
它们像一个较小的包装中，可以沿着链条上进行。这个想法是最终这种证明

1016
01:10:31,439 --> 01:10:38,659
最终进入下一个插槽，对吗？因此，现在我们有了下一个块，您再次知道，

1017
01:10:38,659 --> 01:10:40,119
像我们的单位交易交易

1018
01:10:40,119 --> 01:10:42,159
或任何新的执行状态，

1019
01:10:42,399 --> 01:10:44,899
但是，它也应包括此证明。

1020
01:10:46,420 --> 01:10:48,420
然后，您只需从网络中获得块即可。

1021
01:10:48,619 --> 01:10:50,859
然后，您可以计算出这些证明

1022
01:10:50,859 --> 01:10:52,939
他们可以告诉你类似的事情

1023
01:10:53,039 --> 01:10:54,760
是的，大多数击球手套装

1024
01:10:54,760 --> 01:10:56,960
认为这实际上是插槽三的块。

1025
01:10:58,539 --> 01:10:59,019
好的。

1026
01:11:00,639 --> 01:11:02,239
因此，这是在插槽级别。

1027
01:11:02,920 --> 01:11:05,739
还有另一个观念

1028
01:11:05,739 --> 01:11:16,960
好的，嗯，时间短一点，但这是我的问题，所以还有另一个概念

1029
01:11:16,960 --> 01:11:22,679
一个时代，所以思考时期的方法是有一些插槽

1030
01:11:22,679 --> 01:11:31,119
嗯，在主网上，每个时期有32个插槽，而我们这样做的原因

1031
01:11:31,119 --> 01:11:36,559
是我们基本上去喜欢um，就像一堆共识处理相对较好

1032
01:11:36,559 --> 01:11:40,880
沉重，所以我们想批处理它，以便它只会经常发生，而不是每个插槽

1033
01:11:41,680 --> 01:11:45,680
所以我对此的看法是，您知道这是我们的32个插槽

1034
01:11:48,880 --> 01:11:52,479
我没有画32，但是你得到图片，你知道这就像

1035
01:11:53,039 --> 01:11:58,800
您知道我们只是从创世记开始，所以零一两个三点点点点，这就是你

1036
01:11:58,800 --> 01:12:02,579
这将是插槽30和31。

1037
01:12:02,579 --> 01:12:06,980
因此，这些索引为零，您可以到32个时段的插槽。

1038
01:12:06,980 --> 01:12:10,300
那将是时代，

1039
01:12:10,300 --> 01:12:12,900
自从我们从创世纪开始时，时代零。

1040
01:12:12,900 --> 01:12:14,779
您应该考虑的方式再次是

1041
01:12:14,779 --> 01:12:17,320
它一直基于时间。

1042
01:12:17,320 --> 01:12:21,279
您现在在一个时代的一个时代，还有更多的位置。

1043
01:12:21,279 --> 01:12:25,100
因此，现在是插槽32，一直到下一个多个多个多个插槽，

1044
01:12:25,100 --> 01:12:28,480
因此，您最终会在63个插槽中。

1045
01:12:28,479 --> 01:12:33,099
然后，您去了两个时期，插槽64，希望这很清楚。

1046
01:12:33,099 --> 01:12:36,459
这个想法是，你要做的一件事，例如

1047
01:12:36,459 --> 01:12:40,179
就像有人试图将X输入击球设置一样，

1048
01:12:40,179 --> 01:12:41,839
你要在这个时代的边界上做到这一点

1049
01:12:41,839 --> 01:12:43,779
在哪里进行所有这些较重的处理。

1050
01:12:46,679 --> 01:12:47,979
我不知道那是什么。

1051
01:12:48,839 --> 01:12:51,139
哦，我只是删除了一些东西。

1052
01:12:51,139 --> 01:12:54,699
好吧，对，所以你要进行这个时代的处理

1053
01:12:54,699 --> 01:12:58,199
然后这个想法就像，你知道，对不起，

1054
01:12:58,479 --> 01:13:00,179
这里有街区，对吗？

1055
01:13:00,179 --> 01:13:04,259
因此，理想情况下，您有32个街区，很棒。

1056
01:13:05,099 --> 01:13:07,059
当你去这里时

1057
01:13:07,059 --> 01:13:09,159
您不仅会喜欢普通处理，而且

1058
01:13:09,159 --> 01:13:12,199
但是你也会说，好吧，

1059
01:13:12,199 --> 01:13:13,619
如果有人被砍了

1060
01:13:13,619 --> 01:13:15,339
或者如果有任何处罚或奖励，

1061
01:13:15,339 --> 01:13:18,159
我们基本上会喜欢把这些

1062
01:13:18,159 --> 01:13:20,619
并在此边界更新一致的状态。

1063
01:13:24,599 --> 01:13:28,399
好吧，所以我们有老虎机，我们有时代，

1064
01:13:28,479 --> 01:13:31,779
是的，好的。

1065
01:13:31,779 --> 01:13:36,779
如此重要的是，要认识到的是，

1066
01:13:38,059 --> 01:13:40,159
因此，我们喜欢这里的整个Valider。

1067
01:13:41,959 --> 01:13:46,279
所以我不知道Valider Zero，Valider One，您知道，

1068
01:13:46,279 --> 01:13:48,399
例如，mainnet要喜欢，你知道，

1069
01:13:49,779 --> 01:13:51,939
像这样的东西，几乎，你知道，

1070
01:13:51,939 --> 01:13:53,739
百万验证者。

1071
01:13:53,739 --> 01:13:58,119
这个想法是他们被随机改组

1072
01:13:58,119 --> 01:14:00,920
每个时期都进入这些委员会。

1073
01:14:00,920 --> 01:14:04,140
看起来是，对于给定的时代，

1074
01:14:05,099 --> 01:14:08,380
所以这是我们在时代的老虎机，

1075
01:14:08,380 --> 01:14:11,619
例如，例如，有100个验证者。

1076
01:14:12,880 --> 01:14:15,880
好吧，是的，也许我会尽力使它更轻松一些。

1077
01:14:15,880 --> 01:14:17,960
所以有32个插槽。

1078
01:14:17,960 --> 01:14:20,920
假设有320个验证器。

1079
01:14:20,920 --> 01:14:23,119
因此，如果有32个插槽，

1080
01:14:23,119 --> 01:14:26,439
那是每个插槽的10个验证者，对吗？

1081
01:14:26,439 --> 01:14:29,559
这个想法就像每个验证者一样，

1082
01:14:29,559 --> 01:14:32,019
在整个集合中，现在是320

1083
01:14:32,019 --> 01:14:35,859
您将随机洗牌，并放10个验证器。

1084
01:14:37,119 --> 01:14:38,659
这些看起来像块。

1085
01:14:38,659 --> 01:14:40,259
让我做一些不同的事情。

1086
01:14:41,639 --> 01:14:45,639
因此，一个，两个，三个，验证者，四个，五，六。

1087
01:14:47,139 --> 01:14:50,279
同样，这个想法是这里有10个验证器，

1088
01:14:50,279 --> 01:14:53,960
这就像一个非常重要的不变性

1089
01:14:53,960 --> 01:14:58,960
是一个验证器每个时期的一个S站。

1090
01:15:03,460 --> 01:15:06,960
结束的确切插槽数据由协议确定。

1091
01:15:06,960 --> 01:15:08,980
有这样的想法，

1092
01:15:08,980 --> 01:15:11,359
这是这种工作的方式

1093
01:15:11,359 --> 01:15:15,399
是当我去链中放一个块时，

1094
01:15:15,399 --> 01:15:16,680
也许我会回到这里。

1095
01:15:16,680 --> 01:15:19,119
是的，所以当我要把块放在链中时，

1096
01:15:19,119 --> 01:15:22,739
我基本上放了一些局部随机性和每个块。

1097
01:15:22,739 --> 01:15:26,739
所以我们会说，您知道，R0，R1，R2，

1098
01:15:26,739 --> 01:15:29,679
您基本上就像将它们混合在一起

1099
01:15:29,679 --> 01:15:31,059
以特殊的方式。

1100
01:15:31,059 --> 01:15:35,239
然后的想法是，存在这种随机性的概念

1101
01:15:35,239 --> 01:15:37,800
然后您可以用来进行洗牌，

1102
01:15:38,719 --> 01:15:41,479
为了决定下一个时代，

1103
01:15:41,479 --> 01:15:44,260
这个验证者的改组应该是什么。

1104
01:15:45,219 --> 01:15:47,800
有效器然后每个时期的车站制作一个，

1105
01:15:49,000 --> 01:15:51,079
再次分配给一些特定的插槽。

1106
01:15:51,079 --> 01:15:56,079
因此，您知道，现在有两个，两个，两个，一个，九，六。

1107
01:15:57,439 --> 01:16:00,039
是的，同样，您最终都会得到所有人

1108
01:16:00,039 --> 01:16:01,340
在一个独特的插槽中。

1109
01:16:01,340 --> 01:16:02,840
然后这告诉你，

1110
01:16:05,699 --> 01:16:06,539
我了吗，

1111
01:16:11,059 --> 01:16:12,640
是的，也许我会再做一次。

1112
01:16:12,640 --> 01:16:14,539
因此，基本上告诉您，

1113
01:16:14,539 --> 01:16:20,939
嗯，我们现在正在寻找老虎机

1114
01:16:20,939 --> 01:16:29,659
嗯，这里很清楚，如果只有一个，那么现在您就知道我们在

1115
01:16:29,659 --> 01:16:38,920
这就像插槽23，您知道这在插槽t中等于12等于我的观点

1116
01:16:38,920 --> 01:16:43,880
我将要进行一些任务的链条，然后再说一次我们的幸运验证者123

1117
01:16:43,880 --> 01:16:49,159
在插槽23中，以证明他们看到这个块时，他们就会证明

1118
01:16:50,760 --> 01:16:57,319
然后这最终将进入下一个障碍，所以

1119
01:16:59,480 --> 01:17:04,119
好吧，让我现在触摸共识，这实际上可能会让我们到达

1120
01:17:04,760 --> 01:17:11,079
好吧，我在我们继续前进之前就收到了几个问题，好吧，嗯，很棒的问题是

1121
01:17:11,079 --> 01:17:15,119
您能否详细说明它的时间概念以证明股份？

1122
01:17:15,119 --> 01:17:17,519
喜欢为什么12秒？

1123
01:17:18,079 --> 01:17:20,479
他们如何分裂？

1124
01:17:20,479 --> 01:17:23,479
为什么每个时代的32个插槽等等？

1125
01:17:24,819 --> 01:17:25,439
正确的。

1126
01:17:25,439 --> 01:17:29,220
因此，12秒就像是任意的。

1127
01:17:29,220 --> 01:17:33,319
它的灵感来自工作时间，这平均就像

1128
01:17:33,319 --> 01:17:34,340
大约14秒。

1129
01:17:34,340 --> 01:17:36,380
所以我们只是去了类似的时间。

1130
01:17:37,340 --> 01:17:40,140
这个数字是任意的。

1131
01:17:40,140 --> 01:17:41,500
它可能更小或更长。

1132
01:17:42,200 --> 01:17:43,619
如果较小，那么基本上

1133
01:17:43,619 --> 01:17:46,200
遵循链条变得更加困难。

1134
01:17:47,119 --> 01:17:48,180
也许是一种更简单的思考方式

1135
01:17:48,180 --> 01:17:49,860
首先是插槽的时间越长，

1136
01:17:50,280 --> 01:17:52,200
它给您更多的时间通过

1137
01:17:52,200 --> 01:17:54,180
块，通过证明，弄清楚

1138
01:17:54,180 --> 01:17:56,140
哪些证明可以进入下一个区块并做

1139
01:17:56,140 --> 01:17:58,240
所有这些。再次，现在有这种权衡

1140
01:17:58,240 --> 01:18:00,079
在多快的速度之间

1141
01:18:00,079 --> 01:18:01,060
协议可以进展

1142
01:18:01,060 --> 01:18:03,060
和插槽时间。

1143
01:18:04,079 --> 01:18:05,680
我们今天拥有12秒。

1144
01:18:07,340 --> 01:18:08,220
有人争论

1145
01:18:08,220 --> 01:18:13,500
为了缩短插槽时间，因为它意味着它的执行状态将进化

1146
01:18:13,500 --> 01:18:18,619
更频繁。人们还谈论延长插槽时间，因为还有其他

1147
01:18:18,619 --> 01:18:23,420
共识升级，我们正在考虑拥有更长插槽的实际情况更有意义

1148
01:18:23,420 --> 01:18:29,740
是时候在每个时间段内做更多的事情了。另一个问题是什么？

1149
01:18:31,740 --> 01:18:35,420
您能谈谈随机性，品牌表盘吗？

1150
01:18:35,420 --> 01:18:43,100
以及验证者如何随机洗牌或呃，好吧，是的

1151
01:18:44,940 --> 01:18:53,180
好吧，是的，我们仍然可以看到这个，所以这里的想法是对的，所以我的意思是我

1152
01:18:53,180 --> 01:18:59,819
猜猜这是另一个重要的不变性，每个插槽有一个建议者，就像我一样

1153
01:18:59,819 --> 01:19:04,619
暗示嗯，你知道提议者可能会想念他们的老虎机，在这种情况下不是

1154
01:19:04,619 --> 01:19:06,079
进入该插槽的块。

1155
01:19:06,920 --> 01:19:09,899
但是通常，尤其是在主要网上，

1156
01:19:09,899 --> 01:19:12,279
人们被激励参加

1157
01:19:12,279 --> 01:19:14,119
因此，他们做得很好。

1158
01:19:14,119 --> 01:19:17,039
因此，您可以想象，就像每个插槽一样

1159
01:19:17,039 --> 01:19:18,180
最终有一个块。

1160
01:19:19,340 --> 01:19:20,319
好的。

1161
01:19:21,399 --> 01:19:24,979
考虑到这一点的方法是

1162
01:19:24,979 --> 01:19:26,380
我不知道，当我去提议时，

1163
01:19:26,380 --> 01:19:30,760
假设我是验证者，我不知道，27。

1164
01:19:30,760 --> 01:19:34,619
当我提出建议时，我也会

1165
01:19:34,619 --> 01:19:37,460
包括一些随机性，您知道，

1166
01:19:37,460 --> 01:19:39,140
有一些细节，您可以去看它。

1167
01:19:39,140 --> 01:19:42,119
这本质上是思考的规格是

1168
01:19:42,119 --> 01:19:44,159
我会像我的老虎机号码一样。

1169
01:19:44,159 --> 01:19:48,840
所以说这就像我不知道，插槽45,000。

1170
01:19:51,159 --> 01:19:53,539
我基本上会喜欢这个号码，

1171
01:19:53,539 --> 01:19:55,099
也许还有其他事情。

1172
01:19:55,099 --> 01:19:57,939
最终我会变得像种子价值

1173
01:19:57,939 --> 01:20:00,579
我要和

1174
01:20:00,579 --> 01:20:02,319
像我的验证器私钥一样。

1175
01:20:02,319 --> 01:20:04,359
这项工作的方式是签名

1176
01:20:04,359 --> 01:20:09,639
像一个你知道的伪随机价值嗯，我会变得像随机性一样

1177
01:20:10,920 --> 01:20:16,920
我们只是称其为r um，然后我的意思是，这些都是非常低的详细信息，但是

1178
01:20:16,920 --> 01:20:23,239
您准备了这种准备，这是您要降低到32的签名

1179
01:20:23,239 --> 01:20:29,559
再次在一致的状态本身内再次是伪随机的字节

1180
01:20:29,560 --> 01:20:35,240
在这些块中，我们将在每个新的兰德尔中混合到州，这是什么意思

1181
01:20:35,240 --> 01:20:40,680
从过去发生的情况下，这将有一些当前价值，然后

1182
01:20:40,680 --> 01:20:45,320
对于每个块

1183
01:20:46,200 --> 01:20:52,039
对于已经存在的事情，考虑到这一点的方法是基本上有UM So

1184
01:20:52,039 --> 01:20:57,080
每个块正确的块都可以产生一定的效果，现在有一个共识状态，它将说为

1185
01:20:57,079 --> 01:21:02,619
S-45K，S-45,001。

1186
01:21:03,239 --> 01:21:04,279
希望你明白这个主意。

1187
01:21:04,760 --> 01:21:07,140
但是基本上每个块都将建立一个新状态。

1188
01:21:07,500 --> 01:21:09,539
然后的想法是，在这个信标状态中，

1189
01:21:10,460 --> 01:21:12,420
是的，我不确定这会多么糟糕，

1190
01:21:12,460 --> 01:21:14,180
但是试想一下这里有一些状态

1191
01:21:14,180 --> 01:21:14,840
作为三角形。

1192
01:21:15,539 --> 01:21:18,159
会有一些价值。

1193
01:21:19,019 --> 01:21:20,300
同样，我们将其称为R0。

1194
01:21:21,479 --> 01:21:25,439
当我去申请时，说我的障碍，

1195
01:21:25,439 --> 01:21:35,639
假设我将申请45,001块。

1196
01:21:35,899 --> 01:21:38,859
对于提议者来说，会有一些独特的随机

1197
01:21:39,239 --> 01:21:40,659
我称之为R Prime。

1198
01:21:41,119 --> 01:21:46,099
我们将结合这两个并恢复一些新值R1。

1199
01:21:46,739 --> 01:21:48,059
每个块都会发生这种情况。

1200
01:21:48,619 --> 01:21:52,000
然后的想法是，您应该有一些，例如随机价值

1201
01:21:52,000 --> 01:21:54,039
每个提议者都在更新。

1202
01:21:54,039 --> 01:22:02,519
然后单独进入这种改组的概念，所以现在的工作方式就像UM

1203
01:22:02,519 --> 01:22:07,340
有一个未来的想法，只是让人们知道，他们有一些时间喜欢做好准备

1204
01:22:07,340 --> 01:22:12,500
说出他们的证明或提出障碍，但考虑到这一点的方式就像是说

1205
01:22:12,500 --> 01:22:18,979
这就像一个时代一个两个三个时代一个两个时代一个两个四个时期一两个五个五个五个五个五个五个五

1206
01:22:18,979 --> 01:22:24,599
这种工作的方式是，在这个时期的结尾，就像最终区块一样，

1207
01:22:25,179 --> 01:22:29,479
你知道，所以这个时代有很多街区，太好了，你最终会得到一些，

1208
01:22:29,559 --> 01:22:35,679
您知道，独特的随机值，我们将其称为R123。那将要做什么

1209
01:22:36,139 --> 01:22:44,359
基本上是告诉你，好吧，所以这里有点倒退，因为lookahead是否

1210
01:22:44,359 --> 01:22:50,199
作品让我们说我们像这样的时代一样，就像我们一样

1211
01:22:50,199 --> 01:22:56,759
基本上要回顾我们在这里做出的随机性，这基本上是

1212
01:22:56,759 --> 01:23:03,559
告诉我们像接下来的两个时代那样说的，希望这很清楚

1213
01:23:03,559 --> 01:23:10,039
向前看，事情有点令人困惑，但基本上的想法是嗯

1214
01:23:10,039 --> 01:23:12,720
你知道，在某个时间点，像这里一样

1215
01:23:12,720 --> 01:23:14,420
我们要看标准州，

1216
01:23:14,420 --> 01:23:17,479
我想我开始绘制这三角形。

1217
01:23:17,479 --> 01:23:19,220
我们要看一下信标国家。

1218
01:23:20,180 --> 01:23:21,579
会有一些随机价值，

1219
01:23:21,579 --> 01:23:23,039
同样，它叫R。

1220
01:23:23,039 --> 01:23:26,659
然后，这个想法就像是这样说的输入，

1221
01:23:26,659 --> 01:23:29,079
某些代码重播和洗牌功能，

1222
01:23:29,079 --> 01:23:31,859
就像整个验证器集一样

1223
01:23:31,859 --> 01:23:35,880
它将需要r，例如，你知道

1224
01:23:35,880 --> 01:23:38,979
没有电台，例如委员会规模或其他东西，

1225
01:23:40,039 --> 01:23:43,279
然后，它将带走所有验证者。

1226
01:23:44,159 --> 01:23:46,119
因此，您再次知道，在主要网上

1227
01:23:46,119 --> 01:23:49,199
这就像它要说的近一百万，好的，

1228
01:23:49,199 --> 01:23:51,699
实际上，我们想将它们像这个数字一样分解成

1229
01:23:51,699 --> 01:23:53,380
每个时期委员会的委员会。

1230
01:23:53,380 --> 01:23:56,859
因此，您知道，假设它就像是什么数字，

1231
01:23:58,000 --> 01:23:59,319
他们会在哪里洗牌。

1232
01:23:59,319 --> 01:24:01,500
所以，好的，我们开始的方式是整个列表，对吗？

1233
01:24:01,500 --> 01:24:03,579
因此，仅计算验证器，

1234
01:24:03,579 --> 01:24:06,260
零，一，两个，三，你知道，

1235
01:24:06,260 --> 01:24:09,279
一直以来说，你知道，九，九，六，

1236
01:24:09,279 --> 01:24:11,899
无论如何，不​​到一百万，

1237
01:24:13,239 --> 01:24:16,380
然后，我们将在这里使用这种随机性来洗牌。

1238
01:24:16,380 --> 01:24:18,559
那就意味着我们最终会

1239
01:24:18,559 --> 01:24:19,779
像洗牌一样，

1240
01:24:21,899 --> 01:24:25,139
说，您知道，验证器0逐渐to，

1241
01:24:26,119 --> 01:24:27,619
我不知道，在这里说，对吗？

1242
01:24:27,619 --> 01:24:29,819
因此，您最终在此处获得类似验证器0，

1243
01:24:29,819 --> 01:24:32,500
现在这就像45岁，

1244
01:24:33,539 --> 01:24:35,599
九，五，六，

1245
01:24:35,599 --> 01:24:39,239
验证器12，验证器0，验证器3，

1246
01:24:39,239 --> 01:24:40,800
他们的想法是被改组了，对吗？

1247
01:24:40,800 --> 01:24:43,559
然后，您知道，以某种随机的方式

1248
01:24:43,559 --> 01:24:45,920
如果我们想在那个车站委员会中分解它，

1249
01:24:45,920 --> 01:24:48,479
那时，您基本上喜欢批处理，对吗？

1250
01:24:48,479 --> 01:24:52,539
然后，这告诉您，在下一个电子通话中，

1251
01:24:53,479 --> 01:24:56,219
您最终会像，好吧，我是第一个委员会的

1252
01:24:56,219 --> 01:24:57,979
这是第一个插槽。

1253
01:24:57,979 --> 01:24:59,359
然后我最终加入下一个委员会，

1254
01:24:59,359 --> 01:25:01,880
在下一个插槽中，类似。

1255
01:25:06,579 --> 01:25:07,920
希望这很有帮助。

1256
01:25:07,920 --> 01:25:12,480
我确实想，我们只有几分钟，所以我想喜欢，解释更多有关

1257
01:25:12,480 --> 01:25:15,319
共识以及这是如何工作的。

1258
01:25:15,319 --> 01:25:18,699
是的，不幸的是，实际上有很多话要说。

1259
01:25:18,699 --> 01:25:23,220
所以，是的，我们今天不一定要涉足一切。

1260
01:25:23,220 --> 01:25:25,480
但希望我已经激发了您的兴趣。

1261
01:25:25,480 --> 01:25:29,819
是的，您可以挖掘更多。

1262
01:25:29,819 --> 01:25:37,340
因此，让我们再次放大以太坊链的概念。

1263
01:25:37,920 --> 01:25:42,079
要关闭共识时的图片。

1264
01:25:42,079 --> 01:25:47,079
因此，我们再次考虑一下时代。

1265
01:25:49,260 --> 01:25:52,460
因此，就像时代一样，我不知道，一个，两个，三，

1266
01:25:52,460 --> 01:25:56,100
一，两个，二，四，二，五，一，二，六，

1267
01:25:56,100 --> 01:25:57,800
也许是这样的。

1268
01:25:57,800 --> 01:25:59,680
我们将从一些街区开始

1269
01:25:59,680 --> 01:26:01,140
这甚至可能就像近视块

1270
01:26:01,140 --> 01:26:02,739
无论如何，无论如何。

1271
01:26:02,739 --> 01:26:06,199
好吧，好吧，这是它开始变得令人困惑的地方。

1272
01:26:06,199 --> 01:26:12,939
令人困惑。所以现在这里有街区，因为这是一个时代。这些现在是插槽，

1273
01:26:13,059 --> 01:26:20,819
正确的？再说一次，很抱歉，如果这令人困惑，但基本上就像是一个新的插槽

1274
01:26:20,819 --> 01:26:27,420
每12秒一次。就是这样。这就是它的工作方式。也许您可能没有一个街区

1275
01:26:27,420 --> 01:26:34,300
无论哪种方式，您都有这些块，并且这些块现在有证明

1276
01:26:34,300 --> 01:26:43,020
是的，这可能有点局促，但基本上是您知道我们是否有

1277
01:26:43,020 --> 01:26:50,020
这里有更多块，然后他们将基本上证明您知道

1278
01:26:50,020 --> 01:26:55,119
链，我想我现在就切换到喜欢的复选标记，你知道你可能很喜欢

1279
01:26:55,119 --> 01:27:04,000
它，但现在最终思考这个方法是关于共识和这个概念的

1280
01:27:04,000 --> 01:27:07,439
我们关心的最终结局就像我们试图用证据做的整个事情

1281
01:27:07,439 --> 01:27:12,000
国家共识是要达到社会终结性，而当某事的最终结果意味着它

1282
01:27:12,000 --> 01:27:18,000
基本上永远不会改变，我会再解释一下，这意味着什么

1283
01:27:18,000 --> 01:27:24,800
考虑一下是，我们现在将以嗯，我们称它们为时代

1284
01:27:24,800 --> 01:27:29,840
边界区块，但思考的方式就像一个时代中的第一个街区一样

1285
01:27:29,840 --> 01:27:35,920
只是像每个时期一样像代表一样站在里面，如果您考虑一下，因为

1286
01:27:35,920 --> 01:27:41,039
一切都通过您知道的父母哈希链接，就像我以某种方式一样

1287
01:27:41,039 --> 01:27:48,480
验证者全部投票，或者这是一个更好的例子，如果我像您所知道的那样拥有它们

1288
01:27:48,480 --> 01:27:54,720
即使这些像这些证明在这里正确

1289
01:27:54,720 --> 01:27:59,520
再次成为这个时代开始的街区，因为所有这些都有父母的哈希

1290
01:28:00,320 --> 01:28:06,079
是的，对不起，有很多箭头，但我要提出的重点是您现在可以

1291
01:28:06,079 --> 01:28:12,000
有点放大，您现在可以说好嗯，为这个时代有这个块

1292
01:28:12,880 --> 01:28:20,480
这个块和此块这个块还可以，您知道直接的父母哈希是从块到块

1293
01:28:20,480 --> 01:28:23,600
但是思考的方法是，您可以建立这些喜欢的联系

1294
01:28:23,600 --> 01:28:27,160
在每个时期之间，对吗？

1295
01:28:28,500 --> 01:28:31,060
这将如何工作的方式是

1296
01:28:31,060 --> 01:28:34,240
根据我们在给定时期获得的证明，

1297
01:28:34,500 --> 01:28:37,060
他们将有这样的理由。

1298
01:28:38,140 --> 01:28:39,440
实际上，让我写下来。

1299
01:28:39,620 --> 01:28:41,980
这是一个关键概念。

1300
01:28:45,200 --> 01:28:48,079
合理的含义是这个BFT概念

1301
01:28:48,079 --> 01:28:53,340
您知道，至少有三分之二的验证者

1302
01:28:53,340 --> 01:28:57,440
已经证明了给定的块。

1303
01:28:58,779 --> 01:29:01,640
因此，您知道，您可以像在这里计算所有证明，

1304
01:29:01,900 --> 01:29:08,119
如果您达到这个门槛，他们最终将

1305
01:29:08,300 --> 01:29:11,640
然后，他们会为这个障碍做出合理的理由，对吗？

1306
01:29:12,380 --> 01:29:13,460
所以你有理由。

1307
01:29:14,619 --> 01:29:18,680
那时的这种外观是您最终得到的，您知道，

1308
01:29:18,720 --> 01:29:21,119
一棵块树，看起来像这张照片，

1309
01:29:21,119 --> 01:29:25,199
然后，您喜欢的地方，是的，也许我应该使用，

1310
01:29:25,640 --> 01:29:27,079
我想我会使用蓝色或其他东西。

1311
01:29:27,399 --> 01:29:27,899
那会很好。

1312
01:29:28,399 --> 01:29:33,300
您最终可以像一个时代一样辩解，

1313
01:29:33,359 --> 01:29:34,319
以前的时代。

1314
01:29:34,819 --> 01:29:36,220
因此，您会得到这些东西。

1315
01:29:36,380 --> 01:29:37,539
现在，当这些是蓝色箭头时，

1316
01:29:37,640 --> 01:29:39,340
我想传达的是，你知道，

1317
01:29:39,359 --> 01:29:42,760
您拥有至少三分之二的证明，

1318
01:29:43,140 --> 01:29:47,819
所有这些都直接或间接地引用这些块。

1319
01:29:50,319 --> 01:29:50,760
好的。

1320
01:29:51,119 --> 01:29:54,279
这就是理由。

1321
01:29:54,279 --> 01:29:59,279
尤其是，是的，我想我会谈论的，

1322
01:30:00,399 --> 01:30:01,699
它只是在一秒钟内分裂

1323
01:30:03,220 --> 01:30:05,199
但特别是，我们想达到的目标

1324
01:30:05,199 --> 01:30:06,939
这是最终的概念。

1325
01:30:08,140 --> 01:30:12,199
而且最终性意味着再次

1326
01:30:12,199 --> 01:30:13,399
看来我们有点时候

1327
01:30:13,399 --> 01:30:14,779
所以我在这里很简短，

1328
01:30:14,779 --> 01:30:18,680
但最终的想法是，如果我，让我们看看，

1329
01:30:18,680 --> 01:30:22,960
就像，让我们看看是否，对不起，

1330
01:30:22,960 --> 01:30:27,960
如果我证明合理的块，

1331
01:30:33,260 --> 01:30:35,940
然后，我称它为B，

1332
01:30:35,940 --> 01:30:40,119
如果我证明是合理的B块B，则B将最终确定。

1333
01:30:44,320 --> 01:30:48,380
在这种情况下，我们将其称为b

1334
01:30:48,380 --> 01:30:50,279
因为发生的事情是

1335
01:30:51,680 --> 01:30:53,920
啊，你看不到我的手，太糟糕了。

1336
01:30:53,920 --> 01:30:58,800
但是基本上，在我们获得这些选票之前，

1337
01:30:58,800 --> 01:31:00,980
我们基本上证明了b是合理的

1338
01:31:00,980 --> 01:31:03,779
这个时代，我们证明了b，

1339
01:31:03,779 --> 01:31:07,260
然后我们来了，我们证明了这个障碍，

1340
01:31:07,260 --> 01:31:09,819
我不知道，我称其为c，我们证明了C，

1341
01:31:09,819 --> 01:31:11,920
因为我们有理由

1342
01:31:14,239 --> 01:31:17,060
一个有理由的块，即B，

1343
01:31:17,060 --> 01:31:18,140
B现在是决赛。

1344
01:31:18,380 --> 01:31:21,060
这就像我们要做的事情的重点

1345
01:31:21,060 --> 01:31:22,819
要达到这个结局的概念。

1346
01:31:24,220 --> 01:31:28,440
让我们看看这里该说些什么。

1347
01:31:28,440 --> 01:31:29,980
我想我会在这里解释我们的意思。

1348
01:31:29,980 --> 01:31:32,460
我们的意思是最终

1349
01:31:32,460 --> 01:31:35,920
因为如果我们试图证明，

1350
01:31:35,920 --> 01:31:38,260
就像我们试图证明另一个块是合理的一样，

1351
01:31:39,539 --> 01:31:40,720
让我这样做。

1352
01:31:44,460 --> 01:31:48,079
所以当然，让我们做这样的事情。

1353
01:31:48,380 --> 01:31:52,539
好的。

1354
01:31:52,539 --> 01:31:56,520
让我画这些箭。

1355
01:31:56,520 --> 01:31:57,680
没错。

1356
01:31:57,680 --> 01:32:02,840
再次有这种削减的概念。

1357
01:32:02,840 --> 01:32:10,220
例如，在这里证明两个相互矛盾的块，这将是可砍的。

1358
01:32:10,220 --> 01:32:15,199
然后这意味着您无法在最终确定的情况下获得

1359
01:32:15,199 --> 01:32:16,859
两个不同的历史。

1360
01:32:16,859 --> 01:32:23,579
说顶部和底部，因为如果您这样做，那将发生的是说所有证明

1361
01:32:23,579 --> 01:32:30,239
试图最终确定这个区块，可以说，在这链上，它们将与

1362
01:32:30,239 --> 01:32:35,319
顶级链条，然后您基本上可以将这些证明作为行为不当的证明

1363
01:32:35,319 --> 01:32:41,239
进入顶链。您将削减这些验证器，而您无法遇到这种情况

1364
01:32:41,239 --> 01:32:43,840
您最终确定了两个相互矛盾的历史

1365
01:32:43,840 --> 01:32:47,380
没有它是可砍的。

1366
01:32:47,699 --> 01:32:49,059
因此，这就是我们最终的意思。

1367
01:32:49,260 --> 01:32:51,199
您有这样的经济终结概念

1368
01:32:51,199 --> 01:32:55,619
那做我们想要的。

1369
01:32:57,819 --> 01:33:00,659
好吧，是的，对不起，我想我们是时候了，

1370
01:33:00,779 --> 01:33:02,559
但是我可以留下一些问题。

1371
01:33:03,260 --> 01:33:04,639
是的，对不起，我们跑了。

1372
01:33:05,880 --> 01:33:08,279
谢谢，亚历克斯，没问题。

1373
01:33:08,279 --> 01:33:15,859
嗯，一个问题，嗯，你能谈谈，呃，在

1374
01:33:15,859 --> 01:33:19,119
最终确定并找到规范链？

1375
01:33:20,500 --> 01:33:21,059
正确的。

1376
01:33:21,219 --> 01:33:26,279
因此，因此Gaspar就像我们的特殊事物一样，就像我去过的协议的实例化

1377
01:33:26,279 --> 01:33:27,019
试图布置。

1378
01:33:27,319 --> 01:33:33,219
嗯，再一次，它开始变得有些复杂，但基本上是

1379
01:33:33,219 --> 01:33:34,920
有近两个观点。

1380
01:33:34,920 --> 01:33:48,140
就像时代级别的视图一样，这就是我刚刚在谈论的内容，就像您的块一样代表，就像时代级别一样。

1381
01:33:48,680 --> 01:33:54,119
但是，在每个时期内，您仍然会有，让我们看看我是否可以绘制它。

1382
01:33:54,300 --> 01:33:54,600
我不知道。

1383
01:33:54,720 --> 01:33:55,619
例如，我只是这样做。

1384
01:33:55,800 --> 01:33:57,060
您仍然将拥有所有其他块。

1385
01:33:57,060 --> 01:34:02,900
因此，就像以太坊的一件非常酷的事情是，我们有这种动态可用性的概念。

1386
01:34:04,340 --> 01:34:10,480
这里的想法是，基本上您可以继续添加到链条中。

1387
01:34:10,600 --> 01:34:11,760
因此，假设这是链条。

1388
01:34:11,860 --> 01:34:17,100
您可以不断地添加到与此最终过程中分开的链条的头部。

1389
01:34:17,100 --> 01:34:23,760
因此，就像，即使出于某种原因的结局，例如，例如，还有一堆其他人离线，他们无法获得链条的证明。

1390
01:34:23,760 --> 01:34:32,119
链条，然后是最终性，我们可能会说我们只完成了这个块B或这个时代

1391
01:34:32,119 --> 01:34:35,100
B，连锁店仍然可以继续。

1392
01:34:35,100 --> 01:34:37,980
您可以继续添加到链的头部。

1393
01:34:37,980 --> 01:34:44,940
因此，这意味着这个终结过程有点落后于实际区块链。

1394
01:34:44,940 --> 01:34:51,560
因此，如果您走到链条的头部，请在这里说，我现在将放大。

1395
01:34:51,560 --> 01:34:56,280
假设这就像时代，我不知道，e减。

1396
01:34:56,280 --> 01:35:02,200
因此，现在我们在这里，现在是插槽。

1397
01:35:02,200 --> 01:35:10,360
因此，您现在仍然有块树中的块，这意味着提议者可以走

1398
01:35:10,360 --> 01:35:19,380
这位提议者在这里提议，这是一个错过的插槽，下一个提议者，假设他们提出了

1399
01:35:19,380 --> 01:35:22,260
要说，你知道，甚至回到这里。

1400
01:35:22,260 --> 01:35:23,600
现在你一般拥有的

1401
01:35:23,600 --> 01:35:26,220
您现在有同一块树吗

1402
01:35:26,220 --> 01:35:29,279
您仍然需要在哪里进行共识推断，

1403
01:35:29,279 --> 01:35:30,619
意思是，这是链的头

1404
01:35:30,619 --> 01:35:32,400
还是这是链的头？

1405
01:35:32,400 --> 01:35:34,720
同样，我们对此进行了证明。

1406
01:35:34,720 --> 01:35:37,500
随着每个块中的这些证明都进入，

1407
01:35:37,500 --> 01:35:40,020
你知道，他们会证明一个街区或另一个街区，

1408
01:35:40,020 --> 01:35:41,600
这就是要说的，你知道，

1409
01:35:41,600 --> 01:35:43,520
你知道的一定重量

1410
01:35:43,520 --> 01:35:45,140
一百个伦理在这里证明

1411
01:35:45,140 --> 01:35:48,560
相对于您知道的，在这里证明了一千个。

1412
01:35:48,560 --> 01:35:51,940
总的来说，我们还有其他算法，

1413
01:35:51,940 --> 01:35:55,200
LMD Ghost，您可能已经听说过，我将其写下来。

1414
01:35:56,660 --> 01:35:59,060
但是它的工作非常类似于我们以前看到的地方

1415
01:35:59,060 --> 01:36:02,120
你要说的话，从我们知道的一个头开始，

1416
01:36:02,120 --> 01:36:04,060
然后基本上喜欢，

1417
01:36:04,060 --> 01:36:05,320
这里的g就像贪婪。

1418
01:36:05,320 --> 01:36:09,820
因此，基本上，找到最大的股份

1419
01:36:09,820 --> 01:36:11,880
退出证明。

1420
01:36:11,880 --> 01:36:15,380
因此，当我们说Gaspar时，这确实是我们的意思

1421
01:36:15,380 --> 01:36:20,380
有像FFG友好的终结小工具一样。

1422
01:36:21,699 --> 01:36:24,180
首字母缩写词的代表并不重要，

1423
01:36:24,180 --> 01:36:29,140
但最终这类时期的过程

1424
01:36:29,140 --> 01:36:32,779
希望你们中的一些人，即使不是全部，

1425
01:36:32,779 --> 01:36:35,460
我们在这些较长的时间尺度上执行最终性。

1426
01:36:35,460 --> 01:36:37,739
这再次就像这个最终的小工具

1427
01:36:37,739 --> 01:36:41,940
它提供了最终性，但是即使在内部，您也知道

1428
01:36:41,939 --> 01:36:50,699
一个时期，E加一个，在一个时期内，我们还使用此LMD幽灵协议来弄清楚

1429
01:36:50,699 --> 01:36:55,839
消除链的实际尖端。因此，当我去制作下一个块时，我需要选择这个块

1430
01:36:55,839 --> 01:37:01,979
或这个块。是的，Gaspar基本上是我们对此共识的特殊实例

1431
01:37:01,979 --> 01:37:05,099
就像FFG Plus LMD一样的协议

1432
01:37:05,099 --> 01:37:13,179
谢谢

1433
01:37:13,179 --> 01:37:24,099
嗯，是的，除非马里奥还有一个问题，否则我认为这可能是我们今天有时间

1434
01:37:24,099 --> 01:37:29,779
是的，我想如果我们只能碰到PBS一秒钟，我们将要解决一个问题

1435
01:37:29,779 --> 01:37:37,880
更多地深入研究，但你是男人，这是我认为这是一个很好的机会

1436
01:37:37,880 --> 01:37:44,319
简而言之，我们没有时间。因此，如果您可以谈谈。什么动机？是什么

1437
01:37:44,319 --> 01:37:47,659
提案建造者分离的工作？

1438
01:37:47,659 --> 01:37:58,259
正确的。是的，我想从基本知识开始，然后从零开始到如何

1439
01:37:58,260 --> 01:38:00,140
因为它使用协议工作。

1440
01:38:00,140 --> 01:38:03,659
事实证明，你知道，

1441
01:38:03,659 --> 01:38:05,539
该协议生活在现实世界中

1442
01:38:05,539 --> 01:38:07,440
还有很多其他事情

1443
01:38:07,440 --> 01:38:09,760
我今天没有时间去

1444
01:38:09,760 --> 01:38:12,360
但基本上是系统的后果。

1445
01:38:14,900 --> 01:38:19,900
所以，是的，我实际上也许只会写，

1446
01:38:19,960 --> 01:38:21,480
我的笔记中确实还有一些东西

1447
01:38:21,480 --> 01:38:23,739
像这里一样的几件事。

1448
01:38:23,739 --> 01:38:26,880
所以，你知道，就像未来一样

1449
01:38:26,880 --> 01:38:29,560
该验证协议的

1450
01:38:29,560 --> 01:38:30,600
一般来说，以太坊吧？

1451
01:38:30,600 --> 01:38:33,340
我们想做很多事情。

1452
01:38:33,340 --> 01:38:36,819
其中之一就像单个插槽最终命名，SSF。

1453
01:38:36,819 --> 01:38:41,520
这基本上是在说，出于许多原因，

1454
01:38:41,520 --> 01:38:42,920
我再次没有时间进入，

1455
01:38:42,920 --> 01:38:46,480
但是由于你有事实

1456
01:38:46,480 --> 01:38:48,340
这种动态可用性，

1457
01:38:48,340 --> 01:38:51,699
然后这两个游戏都在这里发生

1458
01:38:51,699 --> 01:38:54,699
这也影响了这类时代水平的事情。

1459
01:38:54,699 --> 01:38:58,539
事实证明，有许多不同的攻击

1460
01:38:58,539 --> 01:39:01,599
其他人可以通过这种灵活性来实现。

1461
01:39:01,599 --> 01:39:03,899
因此，与其具有这样的最终过程，而是

1462
01:39:03,899 --> 01:39:07,500
就像小径一样，就像链条后面的两个时代一样

1463
01:39:07,500 --> 01:39:10,960
您实际上想考虑获得最终期限

1464
01:39:10,960 --> 01:39:12,199
在一个插槽中。

1465
01:39:12,199 --> 01:39:14,039
再一次，单个插槽终结，

1466
01:39:14,039 --> 01:39:16,579
那应该很清楚。

1467
01:39:16,579 --> 01:39:17,420
那是一回事。

1468
01:39:19,760 --> 01:39:20,920
其他事情，我的意思是，是的，

1469
01:39:20,920 --> 01:39:23,500
我想我会喜欢写出我的sle。

1470
01:39:23,500 --> 01:39:27,439
因此，这基本上是您要选择建议的

1471
01:39:27,439 --> 01:39:29,460
有点秘密或像及时一样。

1472
01:39:29,460 --> 01:39:31,680
就像想法一样，作为验证者，

1473
01:39:31,680 --> 01:39:33,779
因此，今天您实际上可以去看看链条。

1474
01:39:33,779 --> 01:39:35,500
并基于我谈论的伦道夫（Randolph）

1475
01:39:35,500 --> 01:39:38,119
您实际上会提前一到两个时期

1476
01:39:38,119 --> 01:39:39,760
建议者是谁。

1477
01:39:39,760 --> 01:39:41,880
这不是很好，因为，你知道，

1478
01:39:41,880 --> 01:39:43,680
这是一个开放的分散网络。

1479
01:39:43,680 --> 01:39:47,420
我实际上可以成为一种类似的网络技术。

1480
01:39:47,420 --> 01:39:50,140
我实际上可以在对等层上识别，

1481
01:39:50,140 --> 01:39:53,140
例如，IPS或哪个验证器。

1482
01:39:53,140 --> 01:39:55,780
一旦我拥有您的IP，如果我不喜欢您的块，

1483
01:39:55,780 --> 01:39:57,079
那会在你的老虎机中出现

1484
01:39:57,079 --> 01:39:58,539
我实际上可以尝试让你。

1485
01:39:58,539 --> 01:40:02,119
因此，一种方法可以改善这一点

1486
01:40:02,119 --> 01:40:04,640
基本上是进入一个地方

1487
01:40:04,640 --> 01:40:07,660
下一个建议者实际上就像秘密一样，

1488
01:40:07,660 --> 01:40:10,240
就像直到您知道，直到及时几乎及时

1489
01:40:10,240 --> 01:40:12,480
他们必须喜欢透露一些地方，

1490
01:40:12,480 --> 01:40:15,640
有些人喜欢选举票，假设

1491
01:40:15,640 --> 01:40:17,240
实际上有一个有效的块。

1492
01:40:19,100 --> 01:40:21,579
还有其他事情，Max-Eb是一个。

1493
01:40:21,579 --> 01:40:25,079
因此，这就像32 ETH平衡。

1494
01:40:25,079 --> 01:40:29,359
您可以想象基本上这样做

1495
01:40:30,539 --> 01:40:34,159
而不是让一个验证者有32个ETH，而是

1496
01:40:34,159 --> 01:40:35,319
他们可能会喜欢，我不知道，

1497
01:40:35,319 --> 01:40:37,939
如此之多的数字是2048。

1498
01:40:37,939 --> 01:40:41,300
这很重要，因为现在，如果我说的话，

1499
01:40:41,300 --> 01:40:43,140
是的，再次，我不知道，64 ETH，

1500
01:40:44,300 --> 01:40:47,399
那必须是协议中的两个验证者。

1501
01:40:47,399 --> 01:40:48,680
这是我们得到的部分原因

1502
01:40:48,680 --> 01:40:50,199
喜欢如此大量的验证者

1503
01:40:50,199 --> 01:40:53,220
就像，这件事发生在该单元32中。

1504
01:40:54,460 --> 01:40:57,139
您知道，许多人拥有超过32个ETH，

1505
01:40:57,139 --> 01:40:59,599
像这些大型，像专业的Staking Operations一样，

1506
01:40:59,599 --> 01:41:00,859
例如。

1507
01:41:00,859 --> 01:41:03,260
因此，您可以想象拥有一个验证器实体

1508
01:41:03,260 --> 01:41:06,220
在协议中，平衡得多。

1509
01:41:06,220 --> 01:41:08,699
这使您可以合并该集合。

1510
01:41:08,699 --> 01:41:10,899
那是什么，也有，是的，

1511
01:41:10,899 --> 01:41:12,819
我们一直在研究的惩罚运动

1512
01:41:12,819 --> 01:41:15,319
实际上喜欢使静止状况

1513
01:41:15,319 --> 01:41:17,279
或削减情况更好。

1514
01:41:17,279 --> 01:41:23,119
嗯，整个经济学本身都没有奖励价值的发行

1515
01:41:23,119 --> 01:41:28,719
诸如此类的事情，无论如何好吧，我就像脑死亡和其他东西

1516
01:41:28,719 --> 01:41:34,639
现在，所有人都说让我回答您的问题，这是另一个

1517
01:41:34,639 --> 01:41:41,519
对于所有X的研究人员来说

1518
01:41:41,520 --> 01:41:51,280
分离。是的，所以这里的想法是该协议不存在于真空中。

1519
01:41:52,420 --> 01:41:59,420
有一个非常有价值的执行层，有MEV的概念。它曾经站立

1520
01:41:59,420 --> 01:42:05,060
最大可提取值。想法是，从根本上来说，当我走时，我的意思是，让我们看看，看看

1521
01:42:05,260 --> 01:42:11,400
我可以使用什么好图像？好吧，让我重新开始。所以当我继续画盒子时

1522
01:42:11,399 --> 01:42:15,799
我拥有的，我有交易，事实证明，就像某些交易序列一样

1523
01:42:15,799 --> 01:42:20,399
比另一个UM更有价值，是的，我真的没有时间像

1524
01:42:20,399 --> 01:42:25,699
那但最终想到这一点的方式是，有一个梅夫的概念

1525
01:42:25,699 --> 01:42:33,119
嗯，你知道更好的是要成熟的更好

1526
01:42:33,119 --> 01:42:37,479
作为验证器

1527
01:42:37,479 --> 01:42:42,000
部分使您可以提取此MEV，

1528
01:42:42,379 --> 01:42:43,259
我不知道，

1529
01:42:43,359 --> 01:42:45,159
我只是尝试画一些硬币或其他东西。

1530
01:42:45,339 --> 01:42:47,479
但基本上有这个概念

1531
01:42:47,479 --> 01:42:51,279
你有点把钱留在桌子上

1532
01:42:51,279 --> 01:42:53,779
如果你想不加入

1533
01:42:53,779 --> 01:42:55,679
这些更复杂的技术来构建块。

1534
01:42:55,819 --> 01:42:56,599
这是一个问题

1535
01:42:56,599 --> 01:43:02,039
因为它基本上会损害集中化。

1536
01:43:02,299 --> 01:43:02,619
为什么？

1537
01:43:02,979 --> 01:43:05,219
因为假设其他一些验证者

1538
01:43:05,219 --> 01:43:06,899
我更好地提取此MEV。

1539
01:43:07,479 --> 01:43:09,579
例如，他们可以提供更好的回报。

1540
01:43:09,699 --> 01:43:10,719
他们可以吸引更多的股份。

1541
01:43:10,719 --> 01:43:16,919
现在有了这个飞轮，您拥有大量大量的堆放池，例如一个实体。

1542
01:43:17,299 --> 01:43:22,019
然后，现在，实际上没有一个有共同努力以确保以太坊的节点，而是

1543
01:43:22,179 --> 01:43:24,639
现在可能只有五个或较小的数字，

1544
01:43:25,239 --> 01:43:30,539
也许在不利于某些以太坊交易的管辖区。

1545
01:43:31,739 --> 01:43:34,759
所以我们想停止这个。

1546
01:43:34,760 --> 01:43:42,460
通常，我们现在对此的考虑是PBS，您想将执行块的任务分开。

1547
01:43:42,680 --> 01:43:44,420
是的，也许我会画CL Neo。

1548
01:43:45,340 --> 01:43:49,659
现在，这里有一个CL块，内部有执行有效负载。

1549
01:43:50,199 --> 01:43:52,960
使用PBS，您实际上想考虑将这两个分开。

1550
01:43:52,960 --> 01:44:03,699
这样您就可以将构建此内容的外包，此执行有效负载，这已成为一些非常复杂的任务。

1551
01:44:03,699 --> 01:44:08,659
我们将其称为建造者UM，然后作为验证器，您不必喜欢像玩这些一样

1552
01:44:08,659 --> 01:44:14,059
复杂的游戏您可以再次将其外包给某人，然后仍然从中获利

1553
01:44:14,059 --> 01:44:26,119
在一分钟内是PBS的工作，我希望这很有帮助，这真是太好了，谢谢Alex

1554
01:44:26,119 --> 01:44:33,220
嗯，是的，我想我们在这里大约15分钟，所以我认为我们可能应该把它包裹起来

1555
01:44:33,699 --> 01:44:40,179
嗯，是的，非常感谢您给我们一个很好的共识层的概述嗯，我敢肯定

1556
01:44:40,179 --> 01:44:46,899
有一些问题没有得到回答，所以希望亚历克斯能加入我们的不和谐

1557
01:44:46,899 --> 01:44:51,619
服务器，看看他是否有任何东西要潜入UM

1558
01:44:53,539 --> 01:45:00,979
是的，再次感谢亚历克斯，嗯，下周我们将见到大家进行测试

1559
01:45:00,979 --> 01:45:03,979
太感谢了

1560
01:45:03,979 --> 01:45:04,279
亚历克斯

1561
01:45:04,279 --> 01:45:04,919
我们感谢

1562
01:45:04,919 --> 01:45:05,639
你的时间男人

1563
01:45:05,639 --> 01:45:07,039
是的

1564
01:45:07,039 --> 01:45:07,819
是的，这很有趣

1565
01:45:07,819 --> 01:45:08,500
谢谢你有我

1566
01:45:08,500 --> 01:45:09,179
是的

1567
01:45:09,179 --> 01:45:10,279
我会伸出援手

1568
01:45:10,279 --> 01:45:10,699
给你们任何一个

1569
01:45:10,699 --> 01:45:11,500
进入不和谐

1570
01:45:11,500 --> 01:45:12,519
我很高兴

1571
01:45:12,519 --> 01:45:13,839
回答

1572
01:45:13,839 --> 01:45:14,439
还有一些问题

1573
01:45:14,439 --> 01:45:14,719
那里

1574
01:45:14,719 --> 01:45:15,199
所以

1575
01:45:15,199 --> 01:45:16,479
谢谢大家

1576
01:45:16,479 --> 01:45:17,679
是的

1577
01:45:17,679 --> 01:45:18,479
我会在周围见

1578
01:45:18,479 --> 01:45:20,139
太感谢了

1579
01:45:20,139 --> 01:45:21,799
是的

1580
01:45:21,799 --> 01:45:24,039
伟大的

1581
01:45:24,039 --> 01:45:24,519
再见

1582
01:45:24,519 --> 01:45:26,579
和

1583
01:45:26,579 --> 01:45:27,239
为每个人

1584
01:45:27,239 --> 01:45:27,939
还在听

1585
01:45:27,939 --> 01:45:29,059
请

1586
01:45:29,059 --> 01:45:30,639
全力以赴

1587
01:45:30,640 --> 01:45:35,760
很棒的材料和问题回答以及谈话中讨论的一切

1588
01:45:35,760 --> 01:45:44,220
以及Discord聊天和打开的调整，请随时将其添加到相应的文档或

1589
01:45:44,220 --> 01:45:45,220
创建一个新的。

1590
01:45:45,220 --> 01:45:48,820
我们有很多巨大的贡献，所以请继续前进。

1591
01:45:48,820 --> 01:45:54,180
是的，非常感谢您今天加入我们的共识层谈话。

1592
01:45:54,180 --> 01:45:55,460
谢谢，大家。

1593
01:45:55,460 --> 01:45:56,460
谢谢，大家。

1594
01:45:56,460 --> 01:45:59,619
我们将在周四的聊天电话中与您见面。

1595
01:45:59,619 --> 01:46:00,619
是的。

1596
01:46:00,619 --> 01:46:02,619
我也想提一下。

1597
01:46:02,619 --> 01:46:06,800
是的，如果您想知道，请与我们聊天，讨论您想要什么

1598
01:46:06,800 --> 01:46:11,359
要进行工作，在Wiki中做出贡献，或者就像在

1599
01:46:11,359 --> 01:46:17,020
以太坊，在电话中与我们聊天。

1600
01:46:17,020 --> 01:46:20,279
您可以在Discord服务器上找到事件。

1601
01:46:20,279 --> 01:46:21,680
多谢。

1602
01:46:21,680 --> 01:46:23,039
出色的。

1603
01:46:51,680 --> 01:47:21,659
谢谢。

